From e57bf614fccb15eed5f16971943897daf7bfdb9c Mon Sep 17 00:00:00 2001
From: Minh Pham <minhcasi@gmail.com>
Date: Mon, 20 Jun 2022 15:18:31 +0700
Subject: [PATCH] =?UTF-8?q?=F0=9F=9A=80=20Release=20v3.0.3=20-=20fix=20com?=
 =?UTF-8?q?bine=20project=20issue?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 assets/images/country/da.svg                  |   1 +
 lib/common/config/languages.dart              |   2 +
 lib/common/tools/price_tools.dart             |   2 +-
 lib/env.dart                                  |   8 +
 lib/frameworks/frameworks.dart                |  48 +-
 lib/frameworks/product_variant_mixin.dart     | 103 ++--
 .../woocommerce/product_addons_mixin.dart     | 504 ++++++++++--------
 .../woocommerce/services/woo_commerce.dart    |  53 +-
 lib/frameworks/wordpress/index.dart           |  48 --
 .../widgets/vertical/vertical.dart            |   5 +-
 lib/generated/intl/messages_ar.dart           |   9 +-
 lib/generated/intl/messages_bn.dart           |   5 +-
 lib/generated/intl/messages_cs.dart           |   5 +-
 lib/generated/intl/messages_da.dart           |   5 +-
 lib/generated/intl/messages_de.dart           |   4 +-
 lib/generated/intl/messages_el.dart           |   5 +-
 lib/generated/intl/messages_en.dart           |   6 +-
 lib/generated/intl/messages_es.dart           |   5 +-
 lib/generated/intl/messages_fa.dart           |   2 +
 lib/generated/intl/messages_fi.dart           |   5 +-
 lib/generated/intl/messages_fr.dart           |   5 +-
 lib/generated/intl/messages_he.dart           |   4 +-
 lib/generated/intl/messages_hi.dart           |   5 +-
 lib/generated/intl/messages_hu.dart           |   5 +-
 lib/generated/intl/messages_id.dart           |   5 +-
 lib/generated/intl/messages_it.dart           |   5 +-
 lib/generated/intl/messages_ja.dart           |   4 +-
 lib/generated/intl/messages_km.dart           |   5 +-
 lib/generated/intl/messages_ko.dart           |   4 +-
 lib/generated/intl/messages_lo.dart           |   5 +-
 lib/generated/intl/messages_ms.dart           |   5 +-
 lib/generated/intl/messages_my.dart           |   5 +-
 lib/generated/intl/messages_nl.dart           |   5 +-
 lib/generated/intl/messages_pl.dart           |   5 +-
 lib/generated/intl/messages_pt.dart           |   5 +-
 lib/generated/intl/messages_ro.dart           |   5 +-
 lib/generated/intl/messages_ru.dart           |   5 +-
 lib/generated/intl/messages_sk.dart           |   5 +-
 lib/generated/intl/messages_sq.dart           |   5 +-
 lib/generated/intl/messages_sr.dart           |   5 +-
 lib/generated/intl/messages_sv.dart           |   5 +-
 lib/generated/intl/messages_sw.dart           |   5 +-
 lib/generated/intl/messages_ta.dart           |   5 +-
 lib/generated/intl/messages_th.dart           |   5 +-
 lib/generated/intl/messages_tr.dart           |   5 +-
 lib/generated/intl/messages_uk.dart           |   5 +-
 lib/generated/intl/messages_uz.dart           |   5 +-
 lib/generated/intl/messages_vi.dart           |   5 +-
 lib/generated/intl/messages_zh.dart           |   4 +-
 lib/generated/intl/messages_zh_CN.dart        |   4 +-
 lib/generated/intl/messages_zh_TW.dart        |   4 +-
 lib/generated/l10n.dart                       |  28 +-
 lib/l10n/intl_ar.arb                          |  22 +-
 lib/l10n/intl_bn.arb                          |   4 +-
 lib/l10n/intl_cs.arb                          |   4 +-
 lib/l10n/intl_da.arb                          |   4 +-
 lib/l10n/intl_de.arb                          |   4 +-
 lib/l10n/intl_el.arb                          |   4 +-
 lib/l10n/intl_en.arb                          |   6 +-
 lib/l10n/intl_es.arb                          |   4 +-
 lib/l10n/intl_fa.arb                          |   4 +-
 lib/l10n/intl_fi.arb                          |   4 +-
 lib/l10n/intl_fr.arb                          |   4 +-
 lib/l10n/intl_he.arb                          |   4 +-
 lib/l10n/intl_hi.arb                          |   4 +-
 lib/l10n/intl_hu.arb                          |   4 +-
 lib/l10n/intl_id.arb                          |   4 +-
 lib/l10n/intl_it.arb                          |   4 +-
 lib/l10n/intl_ja.arb                          |   4 +-
 lib/l10n/intl_km.arb                          |   4 +-
 lib/l10n/intl_ko.arb                          |   4 +-
 lib/l10n/intl_lo.arb                          |   4 +-
 lib/l10n/intl_ms.arb                          |   4 +-
 lib/l10n/intl_my.arb                          |   4 +-
 lib/l10n/intl_nl.arb                          |   4 +-
 lib/l10n/intl_pl.arb                          |   4 +-
 lib/l10n/intl_pt.arb                          |   4 +-
 lib/l10n/intl_ro.arb                          |   4 +-
 lib/l10n/intl_ru.arb                          |   4 +-
 lib/l10n/intl_sk.arb                          |   4 +-
 lib/l10n/intl_sq.arb                          |   4 +-
 lib/l10n/intl_sr.arb                          |   4 +-
 lib/l10n/intl_sv.arb                          |   4 +-
 lib/l10n/intl_sw.arb                          |   4 +-
 lib/l10n/intl_ta.arb                          |   4 +-
 lib/l10n/intl_th.arb                          |   4 +-
 lib/l10n/intl_tr.arb                          |   4 +-
 lib/l10n/intl_uk.arb                          |   4 +-
 lib/l10n/intl_uz.arb                          |   4 +-
 lib/l10n/intl_vi.arb                          |   4 +-
 lib/l10n/intl_zh.arb                          |   4 +-
 lib/l10n/intl_zh_CN.arb                       |   4 +-
 lib/l10n/intl_zh_TW.arb                       |   4 +-
 lib/models/order/order.dart                   |   4 +-
 lib/models/product_model.dart                 |  33 +-
 .../dynamic_layout/dynamic_layout.dart        |  69 +--
 lib/modules/dynamic_layout/helper/helper.dart |  37 ++
 lib/modules/dynamic_layout/index.dart         |   1 -
 .../search/home_search_page.dart              | 284 ----------
 .../dynamic_layout/tabbar/tabbar_icon.dart    |   8 +
 .../dynamic_layout/vertical/vertical.dart     |   5 +-
 .../firebase/dynamic_link_service.dart        |  25 +
 lib/routes/route.dart                         |   1 +
 lib/screens/brand/brand_backdrop.dart         |  11 +
 lib/screens/categories/categories_screen.dart |   3 +-
 .../categories/category_search_screen.dart    |   7 +-
 lib/screens/common/delete_account_mixin.dart  |  34 ++
 .../common/permission_request_mixin.dart      |  74 +++
 .../home/notification_request_screen.dart     |  75 +--
 lib/screens/posts/posts_backdrop.dart         |   4 +-
 lib/screens/products/products_flatview.dart   |  62 ++-
 lib/screens/products/products_screen.dart     |  54 +-
 lib/screens/products/products_searchview.dart | 431 +++++++++++++++
 lib/screens/search/search_screen.dart         | 283 +---------
 .../search/widgets/filters/filter_search.dart |  99 ----
 .../recent/recent_products_custom.dart        |  10 +-
 lib/screens/search/widgets/search_box.dart    | 138 +++--
 lib/screens/settings/language_screen.dart     |  20 +-
 lib/screens/settings/rate_myapp_mixin.dart    |  68 +++
 lib/screens/settings/settings_screen.dart     | 157 ++----
 lib/screens/users/delete_account_screen.dart  |  20 +-
 lib/screens/users/login_screen.dart           |   6 +-
 lib/services/base_services.dart               |   8 +
 .../paging/paging_with_user_repository.dart   |   7 +-
 lib/services/service_config.dart              |   2 +-
 lib/widgets/asymmetric/asymmetric_view.dart   |  17 +-
 lib/widgets/backdrop/backdrop.dart            |  28 +-
 lib/widgets/backdrop/backdrop_menu.dart       |  10 +-
 lib/widgets/blog/blog_list_backdrop.dart      |   8 +-
 lib/widgets/common/common_setting_item.dart   |  38 +-
 lib/widgets/common/drag_handler.dart          |  30 ++
 lib/widgets/product/product_list.dart         |  31 +-
 lib/widgets/scanner/scanner_button.dart       |   3 +-
 pubspec.lock                                  | 147 ++++-
 pubspec.yaml                                  |   4 +-
 135 files changed, 2075 insertions(+), 1467 deletions(-)
 create mode 100644 assets/images/country/da.svg
 delete mode 100644 lib/modules/dynamic_layout/search/home_search_page.dart
 create mode 100644 lib/screens/common/delete_account_mixin.dart
 create mode 100644 lib/screens/common/permission_request_mixin.dart
 create mode 100644 lib/screens/products/products_searchview.dart
 create mode 100644 lib/screens/settings/rate_myapp_mixin.dart
 create mode 100644 lib/widgets/common/drag_handler.dart

diff --git a/assets/images/country/da.svg b/assets/images/country/da.svg
new file mode 100644
index 0000000..917dad4
--- /dev/null
+++ b/assets/images/country/da.svg
@@ -0,0 +1 @@
+<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 37 28"><path fill="#c8102e" d="M0,0H37V28H0Z"/><path fill="#fff" d="M0,12H12V0H16V12H37V16H16V28H12V16H0Z"/></svg>
diff --git a/lib/common/config/languages.dart b/lib/common/config/languages.dart
index bfd5c6d..86ffead 100644
--- a/lib/common/config/languages.dart
+++ b/lib/common/config/languages.dart
@@ -107,6 +107,8 @@ String getLanguageByContext(BuildContext context, String code) {
       return S.of(context).burmese;
     case 'sq':
       return S.of(context).albanian;
+    case 'da':
+      return S.of(context).danish;
     default:
       return code;
   }
diff --git a/lib/common/tools/price_tools.dart b/lib/common/tools/price_tools.dart
index f7117ad..8e61294 100644
--- a/lib/common/tools/price_tools.dart
+++ b/lib/common/tools/price_tools.dart
@@ -77,7 +77,7 @@ class PriceTools {
   static String? getCurrencyFormatted(price, Map<String, dynamic>? rates,
       {currency}) {
     if (kAdvanceConfig.defaultCurrency == null) {
-      return price;
+      return double.tryParse('$price')?.toStringAsFixed(1);
     }
 
     var defaultCurrency =
diff --git a/lib/env.dart b/lib/env.dart
index 4dc0a6d..59bd17a 100644
--- a/lib/env.dart
+++ b/lib/env.dart
@@ -754,6 +754,14 @@ Map<String, dynamic> environment = {
       "code": "sq",
       "text": "Albanian",
       "storeViewCode": ""
+    },
+    // 44 Danish intl_da.arb
+    {
+      "name": "Danish",
+      "icon": "assets/images/country/da.svg",
+      "code": "da",
+      "text": "Danish",
+      "storeViewCode": ""
     }
   ],
   "unsupportedLanguages": ['ku'],
diff --git a/lib/frameworks/frameworks.dart b/lib/frameworks/frameworks.dart
index 6a89dc8..5e43acc 100644
--- a/lib/frameworks/frameworks.dart
+++ b/lib/frameworks/frameworks.dart
@@ -650,7 +650,7 @@ abstract class BaseFrameworks {
 
   Widget renderHomeSearchScreen() => ChangeNotifierProvider(
         create: (context) => SearchModel(),
-        child: const HomeSearchPage(),
+        child: const SearchScreen(),
       );
 
   Widget renderCommentLayout(dynamic postId, kBlogLayout type) {
@@ -746,9 +746,53 @@ abstract class BaseFrameworks {
     BuildContext context, {
     FilterSortBy? filterSortBy,
     required Function(FilterSortBy? filterSortBy) onFilterChanged,
+    bool showDivider = true,
+    bool isBlog = false,
   }) {
+    if (isBlog) {
+      return ExpansionWidget(
+        showDivider: showDivider,
+        padding: const EdgeInsets.only(
+          left: 15,
+          right: 15,
+          top: 15,
+          bottom: 10,
+        ),
+        title: Text(
+          S.of(context).sortBy,
+          style: Theme.of(context).textTheme.titleLarge!.copyWith(
+                fontWeight: FontWeight.w700,
+              ),
+        ),
+        children: [
+          GroupCheckBoxWidget<String>(
+            numberOfRow: 2,
+            childAspectRatio: 16 / 4,
+            defaultValue: filterSortBy?.groupOrderBy,
+            onChanged: (selectedItem) {
+              final filterData = selectedItem?.value.split('-');
+              final orderBy = filterData?[0];
+              final order = filterData?[1];
+              filterSortBy =
+                  filterSortBy?.applyOrderBy(orderBy).applyOrder(order);
+              onFilterChanged(filterSortBy);
+            },
+            values: <GroupCheckBoxItem<String>>{
+              GroupCheckBoxItem(
+                title: S.of(context).dateLatest,
+                value: 'date-desc',
+              ),
+              GroupCheckBoxItem(
+                title: S.of(context).dateOldest,
+                value: 'date-asc',
+              ),
+            },
+          ),
+        ],
+      );
+    }
     return ExpansionWidget(
-      showDivider: true,
+      showDivider: showDivider,
       padding: const EdgeInsets.only(
         left: 15,
         right: 15,
diff --git a/lib/frameworks/product_variant_mixin.dart b/lib/frameworks/product_variant_mixin.dart
index 394fa55..cfc8e7d 100644
--- a/lib/frameworks/product_variant_mixin.dart
+++ b/lib/frameworks/product_variant_mixin.dart
@@ -331,46 +331,16 @@ mixin ProductVariantMixin {
       const SizedBox(height: 10),
 
       /// Action Buttons: Buy Now, Add To Cart
-      Row(
-        children: <Widget>[
-          if (!ignoreBuyOrOutOfStockButton)
-            Expanded(
-              child: GestureDetector(
-                onTap: isAvailable
-                    ? () => addToCart(true, inStock || allowBackorder)
-                    : null,
-                child: buyOrOutOfStockButton,
-              ),
-            ),
-          if (!ignoreBuyOrOutOfStockButton) const SizedBox(width: 10),
-          if (isAvailable &&
-              (inStock || allowBackorder) &&
-              !isExternal &&
-              !isVariationLoading)
-            Expanded(
-              child: GestureDetector(
-                onTap: () => addToCart(false, inStock || allowBackorder),
-                child: Container(
-                  height: 44,
-                  decoration: BoxDecoration(
-                    borderRadius: BorderRadius.circular(3),
-                    color: Theme.of(context).primaryColorLight,
-                  ),
-                  child: Center(
-                    child: Text(
-                      S.of(context).addToCart.toUpperCase(),
-                      style: TextStyle(
-                        color: Theme.of(context).colorScheme.secondary,
-                        fontWeight: FontWeight.bold,
-                        fontSize: 12,
-                      ),
-                    ),
-                  ),
-                ),
-              ),
-            ),
-        ],
-      )
+      actionButton(
+          ignoreBuyOrOutOfStockButton,
+          isAvailable,
+          addToCart,
+          inStock,
+          allowBackorder,
+          buyOrOutOfStockButton,
+          isExternal,
+          isVariationLoading,
+          context)
     ];
   }
 
@@ -515,3 +485,56 @@ mixin ProductVariantMixin {
     );
   }
 }
+
+Widget actionButton(
+  bool ignoreBuyOrOutOfStockButton,
+  bool isAvailable,
+  Function addToCart,
+  bool inStock,
+  bool allowBackorder,
+  Widget buyOrOutOfStockButton,
+  bool isExternal,
+  bool isVariationLoading,
+  BuildContext context,
+) {
+  return Row(
+    children: <Widget>[
+      if (!ignoreBuyOrOutOfStockButton)
+        Expanded(
+          child: GestureDetector(
+            onTap: isAvailable
+                ? () => addToCart(true, inStock || allowBackorder)
+                : null,
+            child: buyOrOutOfStockButton,
+          ),
+        ),
+      if (!ignoreBuyOrOutOfStockButton) const SizedBox(width: 10),
+      if (isAvailable &&
+          (inStock || allowBackorder) &&
+          !isExternal &&
+          !isVariationLoading)
+        Expanded(
+          child: GestureDetector(
+            onTap: () => addToCart(false, inStock || allowBackorder),
+            child: Container(
+              height: 44,
+              decoration: BoxDecoration(
+                borderRadius: BorderRadius.circular(3),
+                color: Theme.of(context).primaryColorLight,
+              ),
+              child: Center(
+                child: Text(
+                  S.of(context).addToCart.toUpperCase(),
+                  style: TextStyle(
+                    color: Theme.of(context).colorScheme.secondary,
+                    fontWeight: FontWeight.bold,
+                    fontSize: 12,
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ),
+    ],
+  );
+}
diff --git a/lib/frameworks/woocommerce/product_addons_mixin.dart b/lib/frameworks/woocommerce/product_addons_mixin.dart
index ab9b18f..fb4cb87 100644
--- a/lib/frameworks/woocommerce/product_addons_mixin.dart
+++ b/lib/frameworks/woocommerce/product_addons_mixin.dart
@@ -164,30 +164,51 @@ mixin ProductAddonsMixin {
                 crossAxisAlignment: CrossAxisAlignment.end,
                 children: [
                   Expanded(
-                    child: Text(item.name!,
-                        style: Theme.of(context).textTheme.subtitle1!.copyWith(
-                              color: selected.isNotEmpty
-                                  ? null
-                                  : Theme.of(context)
-                                      .colorScheme
-                                      .secondary
-                                      .withOpacity(0.7),
-                            )),
-                  ),
-                  (item.isRadioButtonType && item.required!)
-                      ? Text(
-                          S.of(context).mustSelectOneItem,
-                          style: TextStyle(
-                            fontSize: 10,
-                            color: selected.isNotEmpty
-                                ? Theme.of(context).colorScheme.secondary
-                                : Theme.of(context)
-                                    .colorScheme
-                                    .secondary
-                                    .withOpacity(0.7),
+                    child: Row(
+                      mainAxisSize: MainAxisSize.min,
+                      children: [
+                        Text(
+                          item.name!,
+                          style:
+                              Theme.of(context).textTheme.subtitle1!.copyWith(
+                                    color: selected.isNotEmpty
+                                        ? null
+                                        : Theme.of(context)
+                                            .colorScheme
+                                            .secondary
+                                            .withOpacity(0.7),
+                                  ),
+                        ),
+                        if (item.isTextType)
+                          Text(
+                            ' (${PriceTools.getCurrencyFormatted(item.price, rates)})',
+                            style:
+                                Theme.of(context).textTheme.subtitle1?.copyWith(
+                                      color: selected.isNotEmpty
+                                          ? null
+                                          : Theme.of(context)
+                                              .colorScheme
+                                              .secondary
+                                              .withOpacity(0.7),
+                                      fontSize: 13,
+                                    ),
                           ),
-                        )
-                      : const Text('')
+                      ],
+                    ),
+                  ),
+                  if (item.isRadioButtonType && item.required!)
+                    Text(
+                      S.of(context).mustSelectOneItem,
+                      style: TextStyle(
+                        fontSize: 10,
+                        color: selected.isNotEmpty
+                            ? Theme.of(context).colorScheme.secondary
+                            : Theme.of(context)
+                                .colorScheme
+                                .secondary
+                                .withOpacity(0.7),
+                      ),
+                    ),
                 ],
               ),
               subtitle: selected.isNotEmpty
@@ -203,204 +224,263 @@ mixin ProductAddonsMixin {
             ),
             children: [
               Wrap(
-                children: List.generate(item.options!.length, (index) {
-                  final option = item.options![index];
-                  final isSelected = selected[option.label] != null;
-                  void onTap() {
-                    if (item.isRadioButtonType) {
-                      selected.clear();
-                      selected[option.label!] = option;
-                      onSelectProductAddons!(selectedOptions: selectedOptions);
-                      return;
-                    }
-                    if (item.isCheckboxType) {
-                      if (isSelected) {
-                        selected.remove(option.label);
-                      } else {
-                        selected[option.label!] = option;
+                children: [
+                  if (item.isRadioButtonType && !item.required!)
+                    Container(
+                      constraints: BoxConstraints(
+                        minWidth: MediaQuery.of(context).size.width * 0.45,
+                      ),
+                      child: InkWell(
+                        onTap: () {
+                          selected.clear();
+                          onSelectProductAddons!(
+                              selectedOptions: selectedOptions);
+                        },
+                        child: Row(
+                          mainAxisSize: MainAxisSize.min,
+                          children: [
+                            IgnorePointer(
+                              child: Radio(
+                                visualDensity: VisualDensity.compact,
+                                groupValue: selected.keys.isNotEmpty
+                                    ? selected.keys.first
+                                    : null,
+                                value: null,
+                                onChanged: (dynamic _) {},
+                                activeColor: Theme.of(context).primaryColor,
+                              ),
+                            ),
+                            Text(
+                              S.of(context).none,
+                              style: Theme.of(context)
+                                  .textTheme
+                                  .subtitle1!
+                                  .copyWith(
+                                    fontWeight: selected.isEmpty
+                                        ? FontWeight.bold
+                                        : null,
+                                  ),
+                            )
+                          ],
+                        ),
+                      ),
+                    ),
+                  ...List.generate(
+                    item.options!.length,
+                    (index) {
+                      final option = item.options![index];
+                      final isSelected = selected[option.label] != null;
+                      void onTap() {
+                        if (item.isRadioButtonType) {
+                          selected.clear();
+                          selected[option.label!] = option;
+                          onSelectProductAddons!(
+                              selectedOptions: selectedOptions);
+                          return;
+                        }
+                        if (item.isCheckboxType) {
+                          if (isSelected) {
+                            selected.remove(option.label);
+                          } else {
+                            selected[option.label!] = option;
+                          }
+                          onSelectProductAddons!(
+                              selectedOptions: selectedOptions);
+                          return;
+                        }
                       }
-                      onSelectProductAddons!(selectedOptions: selectedOptions);
-                      return;
-                    }
-                  }
 
-                  return Container(
-                    constraints: BoxConstraints(
-                      minWidth: MediaQuery.of(context).size.width * 0.45,
-                    ),
-                    child: item.isFileUploadType
-                        ? Padding(
-                            padding: const EdgeInsets.only(
-                              left: 8.0,
-                              right: 8.0,
-                              bottom: 8.0,
-                            ),
-                            child: Row(
-                              children: [
-                                Expanded(
-                                  child: StatefulBuilder(
-                                      builder: (context, StateSetter setState) {
-                                    return TextButton.icon(
-                                      onPressed: isUploading
-                                          ? null
-                                          : () => _showOption(context,
-                                                  onFileUploadStart: () {
-                                                isUploading = true;
-                                                setState(() {});
-                                              }, onFileUploadFailed: () {
-                                                isUploading = false;
-                                                setState(() {});
-                                              }, onFileUploaded:
-                                                      (List<String?> fileUrls) {
-                                                isUploading = false;
-                                                setState(() {});
-                                                for (var url in fileUrls) {
-                                                  /// Overwrite previous file if multiple files not allowed.
-                                                  var key = kProductDetail
-                                                          .allowMultiple
-                                                      ? url!.split('/').last
-                                                      : item.name;
-                                                  selected[key!] = AddonsOption(
-                                                      parent: item.name,
-                                                      label: url,
-                                                      type: item.type,
-                                                      display: item.display,
-                                                      fieldName:
-                                                          item.fieldName);
-                                                  onSelectProductAddons!(
-                                                      selectedOptions:
-                                                          selectedOptions);
-                                                }
-                                              }),
-                                      icon: isUploading
-                                          ? SizedBox(
-                                              height: 20,
-                                              width: 20,
-                                              child: CircularProgressIndicator(
-                                                strokeWidth: 2.0,
-                                                valueColor:
-                                                    AlwaysStoppedAnimation<
-                                                            Color>(
-                                                        Theme.of(context)
-                                                            .primaryColor),
-                                              ),
-                                            )
-                                          : const Icon(
-                                              CupertinoIcons.doc_text,
-                                            ),
-                                      label: Text(
-                                        (isUploading
-                                                ? S.of(context).uploading
-                                                : S.of(context).uploadFile)
-                                            .toUpperCase(),
-                                      ),
-                                    );
-                                  }),
+                      return Container(
+                        constraints: BoxConstraints(
+                          minWidth: MediaQuery.of(context).size.width * 0.45,
+                        ),
+                        child: item.isFileUploadType
+                            ? Padding(
+                                padding: const EdgeInsets.only(
+                                  left: 8.0,
+                                  right: 8.0,
+                                  bottom: 8.0,
                                 ),
-                              ],
-                            ),
-                          )
-                        : InkWell(
-                            onTap: onTap,
-                            child: Row(
-                              mainAxisAlignment: MainAxisAlignment.start,
-                              mainAxisSize: MainAxisSize.min,
-                              children: [
-                                if (item.isRadioButtonType)
-                                  Radio(
-                                    visualDensity: VisualDensity.compact,
-                                    groupValue: selected.keys.isNotEmpty
-                                        ? selected.keys.first
-                                        : '',
-                                    value: option.label,
-                                    onChanged: (dynamic _) => onTap(),
-                                    activeColor: Theme.of(context).primaryColor,
-                                  ),
-                                if (item.isCheckboxType)
-                                  Checkbox(
-                                    visualDensity: VisualDensity.compact,
-                                    onChanged: (_) => onTap(),
-                                    activeColor: Theme.of(context).primaryColor,
-                                    checkColor: Colors.white,
-                                    value: isSelected,
-                                  ),
-                                if (item.isTextType)
-                                  Expanded(
-                                    child: Padding(
-                                      padding:
-                                          const EdgeInsets.only(bottom: 8.0),
-                                      child: TextField(
-                                        onChanged: (text) {
-                                          if (text.isEmpty) {
-                                            selected.remove(item.name);
-                                            onSelectProductAddons!(
-                                                selectedOptions:
-                                                    selectedOptions);
-                                            return;
-                                          }
+                                child: Row(
+                                  children: [
+                                    Expanded(
+                                      child: StatefulBuilder(builder:
+                                          (context, StateSetter setState) {
+                                        return TextButton.icon(
+                                          onPressed: isUploading
+                                              ? null
+                                              : () => _showOption(context,
+                                                      onFileUploadStart: () {
+                                                    isUploading = true;
+                                                    setState(() {});
+                                                  }, onFileUploadFailed: () {
+                                                    isUploading = false;
+                                                    setState(() {});
+                                                  }, onFileUploaded:
+                                                          (List<String?>
+                                                              fileUrls) {
+                                                    isUploading = false;
+                                                    setState(() {});
+                                                    for (var url in fileUrls) {
+                                                      /// Overwrite previous file if multiple files not allowed.
+                                                      var key = kProductDetail
+                                                              .allowMultiple
+                                                          ? url!.split('/').last
+                                                          : item.name;
+                                                      selected[key!] =
+                                                          AddonsOption(
+                                                              parent: item.name,
+                                                              label: url,
+                                                              type: item.type,
+                                                              display:
+                                                                  item.display,
+                                                              fieldName: item
+                                                                  .fieldName);
+                                                      onSelectProductAddons!(
+                                                          selectedOptions:
+                                                              selectedOptions);
+                                                    }
+                                                  }),
+                                          icon: isUploading
+                                              ? SizedBox(
+                                                  height: 20,
+                                                  width: 20,
+                                                  child:
+                                                      CircularProgressIndicator(
+                                                    strokeWidth: 2.0,
+                                                    valueColor:
+                                                        AlwaysStoppedAnimation<
+                                                                Color>(
+                                                            Theme.of(context)
+                                                                .primaryColor),
+                                                  ),
+                                                )
+                                              : const Icon(
+                                                  CupertinoIcons.doc_text,
+                                                ),
+                                          label: Text(
+                                            (isUploading
+                                                    ? S.of(context).uploading
+                                                    : S.of(context).uploadFile)
+                                                .toUpperCase(),
+                                          ),
+                                        );
+                                      }),
+                                    ),
+                                  ],
+                                ),
+                              )
+                            : InkWell(
+                                onTap: onTap,
+                                child: Row(
+                                  mainAxisAlignment: MainAxisAlignment.start,
+                                  mainAxisSize: MainAxisSize.min,
+                                  children: [
+                                    if (item.isRadioButtonType)
+                                      Radio(
+                                        visualDensity: VisualDensity.compact,
+                                        groupValue: selected.keys.isNotEmpty
+                                            ? selected.keys.first
+                                            : '',
+                                        value: option.label,
+                                        onChanged: (dynamic _) => onTap(),
+                                        activeColor:
+                                            Theme.of(context).primaryColor,
+                                      ),
+                                    if (item.isCheckboxType)
+                                      Checkbox(
+                                        visualDensity: VisualDensity.compact,
+                                        onChanged: (_) => onTap(),
+                                        activeColor:
+                                            Theme.of(context).primaryColor,
+                                        checkColor: Colors.white,
+                                        value: isSelected,
+                                      ),
+                                    if (item.isTextType)
+                                      Expanded(
+                                        child: Padding(
+                                          padding: const EdgeInsets.only(
+                                              bottom: 8.0),
+                                          child: TextField(
+                                            onChanged: (text) {
+                                              if (text.isEmpty) {
+                                                selected.remove(item.name);
+                                                onSelectProductAddons!(
+                                                    selectedOptions:
+                                                        selectedOptions);
+                                                return;
+                                              }
 
-                                          if (selected[item.name] != null) {
-                                            selected[item.name]!.label = text;
-                                          } else {
-                                            selected[item.name!] = AddonsOption(
-                                                parent: item.name,
-                                                type: item.type,
-                                                label: text,
-                                                price: item.price,
-                                                display: item.display,
-                                                fieldName: item.fieldName);
-                                          }
-                                          onSelectProductAddons!(
-                                              selectedOptions: selectedOptions);
-                                        },
-                                        decoration: InputDecoration(
-                                          contentPadding:
-                                              const EdgeInsets.all(8),
-                                          border: OutlineInputBorder(
-                                            borderSide: BorderSide(
-                                                color: Theme.of(context)
-                                                    .colorScheme
-                                                    .secondary),
-                                            borderRadius:
-                                                BorderRadius.circular(5),
+                                              if (selected[item.name] != null) {
+                                                selected[item.name]!.label =
+                                                    text;
+                                              } else {
+                                                selected[item.name!] =
+                                                    AddonsOption(
+                                                        parent: item.name,
+                                                        type: item.type,
+                                                        label: text,
+                                                        price: item.price,
+                                                        display: item.display,
+                                                        fieldName:
+                                                            item.fieldName);
+                                              }
+                                              onSelectProductAddons!(
+                                                  selectedOptions:
+                                                      selectedOptions);
+                                            },
+                                            decoration: InputDecoration(
+                                              contentPadding:
+                                                  const EdgeInsets.all(8),
+                                              border: OutlineInputBorder(
+                                                borderSide: BorderSide(
+                                                    color: Theme.of(context)
+                                                        .colorScheme
+                                                        .secondary),
+                                                borderRadius:
+                                                    BorderRadius.circular(5),
+                                              ),
+                                              labelText: option.label,
+                                            ),
+                                            minLines: 1,
+                                            maxLines:
+                                                item.isShortTextType ? 1 : 4,
                                           ),
-                                          labelText: option.label,
                                         ),
-                                        minLines: 1,
-                                        maxLines: item.isShortTextType ? 1 : 4,
                                       ),
-                                    ),
-                                  ),
-                                if (!item.isTextType)
-                                  Text(
-                                    option.label!,
-                                    style: Theme.of(context)
-                                        .textTheme
-                                        .subtitle1!
-                                        .copyWith(
-                                          fontWeight: isSelected
-                                              ? FontWeight.bold
-                                              : null,
+                                    if (!item.isTextType)
+                                      Text(
+                                        option.label!,
+                                        style: Theme.of(context)
+                                            .textTheme
+                                            .subtitle1!
+                                            .copyWith(
+                                              fontWeight: isSelected
+                                                  ? FontWeight.bold
+                                                  : null,
+                                            ),
+                                      ),
+                                    if (!item.isTextType && !item.isHeadingType)
+                                      Padding(
+                                        padding: const EdgeInsets.symmetric(
+                                            horizontal: 4.0),
+                                        child: Text(
+                                          '(${PriceTools.getCurrencyFormatted(option.price, rates)})',
+                                          style: TextStyle(
+                                            fontWeight: isSelected
+                                                ? FontWeight.bold
+                                                : null,
+                                            fontSize: 13,
+                                          ),
                                         ),
-                                  ),
-                                if (!item.isTextType && !item.isHeadingType)
-                                  Padding(
-                                    padding: const EdgeInsets.symmetric(
-                                        horizontal: 4.0),
-                                    child: Text(
-                                      '(${PriceTools.getCurrencyFormatted(option.price, rates)})',
-                                      style: TextStyle(
-                                        fontWeight:
-                                            isSelected ? FontWeight.bold : null,
-                                        fontSize: 13,
                                       ),
-                                    ),
-                                  ),
-                              ],
-                            ),
-                          ),
-                  );
-                }),
+                                  ],
+                                ),
+                              ),
+                      );
+                    },
+                  )
+                ],
               )
             ],
           );
diff --git a/lib/frameworks/woocommerce/services/woo_commerce.dart b/lib/frameworks/woocommerce/services/woo_commerce.dart
index 19bc644..4732bdb 100644
--- a/lib/frameworks/woocommerce/services/woo_commerce.dart
+++ b/lib/frameworks/woocommerce/services/woo_commerce.dart
@@ -2,6 +2,7 @@ import 'dart:convert' as convert;
 import 'dart:convert';
 import 'dart:core';
 
+import 'package:collection/collection.dart';
 import 'package:quiver/strings.dart';
 import 'package:universal_platform/universal_platform.dart';
 
@@ -57,7 +58,9 @@ class WooCommerceService extends BaseServices {
   @override
   Future<List<Category>> getCategories({lang}) async {
     try {
-      if (categories.isNotEmpty && currentLanguage == lang && currentHideEmptyCategories == kAdvanceConfig.hideEmptyCategories) {
+      if (categories.isNotEmpty &&
+          currentLanguage == lang &&
+          currentHideEmptyCategories == kAdvanceConfig.hideEmptyCategories) {
         return categories;
       }
       currentLanguage = lang;
@@ -792,8 +795,8 @@ class WooCommerceService extends BaseServices {
   Future<List<OrderNote>> getOrderNote(
       {String? userId, String? orderId}) async {
     try {
-      var response = await wcApi
-          .getAsync('orders/$orderId/notes?customer=$userId&per_page=20&type=${kAdvanceConfig.orderNotesWithPrivateNote == true ? 'any' : 'customer'}');
+      var response = await wcApi.getAsync(
+          'orders/$orderId/notes?customer=$userId&per_page=20&type=${kAdvanceConfig.orderNotesWithPrivateNote == true ? 'any' : 'customer'}');
       var list = <OrderNote>[];
       if (response is Map && isNotBlank(response['message'])) {
         throw Exception(response['message']);
@@ -2115,8 +2118,7 @@ class WooCommerceService extends BaseServices {
   @override
   Future<Category?> getProductCategoryById({required categoryId}) async {
     try {
-      var url =
-          'products/categories/$categoryId?exclude=$kExcludedCategory&per_page=1&hide_empty=${kAdvanceConfig.hideEmptyCategories}';
+      var url = 'products/categories/$categoryId';
       var response = await wcApi.getAsync(url);
       if (response is Map && isNotBlank(response['message'])) {
         throw Exception(response['message']);
@@ -2129,6 +2131,40 @@ class WooCommerceService extends BaseServices {
     }
   }
 
+  @override
+  Future<Brand?> getBrandById(brandId) async {
+    try {
+      var url = 'products/brands/$brandId';
+      var response = await wcApi.getAsync(url);
+      if (response is Map && isNotBlank(response['message'])) {
+        throw Exception(response['message']);
+      } else {
+        return Brand.fromJson(response);
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
+  @override
+  Future<Brand?> getBrandBySlug(String slug) async {
+    try {
+      var url = 'products/brands?slug=$slug';
+      var response = await wcApi.getAsync(url);
+      if (response is Map && isNotBlank(response['message'])) {
+        throw Exception(response['message']);
+      } else {
+        final brandItem = List.from(response).firstOrNull;
+        if (brandItem == null) throw 'This brand does not exist';
+        return Brand.fromJson(brandItem);
+      }
+    } catch (e) {
+      //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
+      rethrow;
+    }
+  }
+
   @override
   Future<void> deleteProduct(
       {required String? productId, required String? cookie}) async {
@@ -2224,13 +2260,16 @@ class WooCommerceService extends BaseServices {
   @override
   Future<bool> deleteAccount(String token) async {
     try {
-      await httpDelete(
+      final response = await httpDelete(
           '$domain/wp-json/api/flutter_customer/delete_account'.toUri()!,
           headers: {
             'User-Cookie': token,
             'Content-Type': 'application/json',
           });
-      // var body = convert.jsonDecode(response.body);
+      var body = convert.jsonDecode(response.body);
+      if (body is Map && body['message'] != null) {
+        throw body['message'];
+      }
       return true;
     } catch (e) {
       rethrow;
diff --git a/lib/frameworks/wordpress/index.dart b/lib/frameworks/wordpress/index.dart
index 8c68bcf..4cea143 100644
--- a/lib/frameworks/wordpress/index.dart
+++ b/lib/frameworks/wordpress/index.dart
@@ -298,52 +298,4 @@ class WordPressWidget extends BaseFrameworks {
   Widget reOrderButton(Order order) {
     return const SizedBox();
   }
-
-  @override
-  Widget renderFilterSortBy(
-    BuildContext context, {
-    FilterSortBy? filterSortBy,
-    required Function(FilterSortBy? filterSortBy) onFilterChanged,
-  }) {
-    return ExpansionWidget(
-      showDivider: true,
-      padding: const EdgeInsets.only(
-        left: 15,
-        right: 15,
-        top: 15,
-        bottom: 10,
-      ),
-      title: Text(
-        S.of(context).sortBy,
-        style: Theme.of(context).textTheme.titleLarge!.copyWith(
-              fontWeight: FontWeight.w700,
-            ),
-      ),
-      children: [
-        GroupCheckBoxWidget<String>(
-          numberOfRow: 2,
-          childAspectRatio: 16 / 4,
-          defaultValue: filterSortBy?.groupOrderBy,
-          onChanged: (selectedItem) {
-            final filterData = selectedItem?.value.split('-');
-            final orderBy = filterData?[0];
-            final order = filterData?[1];
-            filterSortBy =
-                filterSortBy?.applyOrderBy(orderBy).applyOrder(order);
-            onFilterChanged(filterSortBy);
-          },
-          values: <GroupCheckBoxItem<String>>{
-            GroupCheckBoxItem(
-              title: S.of(context).dateLatest,
-              value: 'date-desc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).dateOldest,
-              value: 'date-asc',
-            ),
-          },
-        ),
-      ],
-    );
-  }
 }
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
index bec9e23..000f377 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
@@ -4,6 +4,7 @@ import '../../../../../common/constants.dart';
 import '../../../../../models/entities/index.dart';
 import '../../../../../modules/dynamic_layout/config/blog_config.dart';
 import '../../../../../modules/dynamic_layout/helper/header_view.dart';
+import '../../../../../modules/dynamic_layout/helper/helper.dart';
 import '../../../../../routes/flux_navigate.dart';
 import 'menu_layout.dart';
 import 'pinterest_layout.dart';
@@ -23,9 +24,9 @@ class _VerticalLayoutState extends State<VerticalLayout> {
 
   Widget renderLayout() {
     switch (blogConfig.layout) {
-      case 'menu':
+      case Layout.menu:
         return const MenuLayout();
-      case 'pinterest':
+      case Layout.pinterest:
         return PinterestLayout(config: blogConfig);
       default:
         return VerticalViewLayout(config: blogConfig);
diff --git a/lib/generated/intl/messages_ar.dart b/lib/generated/intl/messages_ar.dart
index 0b6e2b7..418ae92 100644
--- a/lib/generated/intl/messages_ar.dart
+++ b/lib/generated/intl/messages_ar.dart
@@ -321,6 +321,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "cvv":
             MessageLookupByLibrary.simpleMessage("رمز التحقق من البطاقة CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("التشيكية"),
+        "danish": MessageLookupByLibrary.simpleMessage("دانماركي"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("الوضع الليلي"),
         "dashboard":
             MessageLookupByLibrary.simpleMessage("لوحة التحكم الرئيسية"),
@@ -544,8 +545,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "korean": MessageLookupByLibrary.simpleMessage("الكورية"),
         "kurdish": MessageLookupByLibrary.simpleMessage("الكردية"),
         "language": MessageLookupByLibrary.simpleMessage("اللغات"),
-        "languageSuccess": MessageLookupByLibrary.simpleMessage(
-            "تم تحديث اللغة بنجاح، الرجاء إعادة تشغيل التطبيق"),
+        "languageSuccess":
+            MessageLookupByLibrary.simpleMessage("تم تحديث اللغة بنجاح"),
         "lao": MessageLookupByLibrary.simpleMessage("اللاوية"),
         "lastName": MessageLookupByLibrary.simpleMessage("الاسم الأخير"),
         "lastNameIsRequired": MessageLookupByLibrary.simpleMessage(
@@ -849,7 +850,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("تحديد الطابعة"),
         "printing": MessageLookupByLibrary.simpleMessage("جاري الطباعة ..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("سياسة الخصوصية"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("الخصوصية والبنود"),
         "private": MessageLookupByLibrary.simpleMessage("خاصة"),
         "product": MessageLookupByLibrary.simpleMessage("المنتج"),
         "productAdded": MessageLookupByLibrary.simpleMessage("تم إضافة المنتج"),
@@ -919,6 +921,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("إعادة تعيين كلمة المرور"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("إعادة تعيين كلمة المرور"),
+        "results": MessageLookupByLibrary.simpleMessage("النتائج"),
         "review": MessageLookupByLibrary.simpleMessage("إعادة المراجعة مجدداً"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("الموافقة على التعليقات"),
diff --git a/lib/generated/intl/messages_bn.dart b/lib/generated/intl/messages_bn.dart
index 92a839c..81426da 100644
--- a/lib/generated/intl/messages_bn.dart
+++ b/lib/generated/intl/messages_bn.dart
@@ -328,6 +328,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("গ্রাহক নোট"),
         "cvv": MessageLookupByLibrary.simpleMessage("সিভিভি"),
         "czech": MessageLookupByLibrary.simpleMessage("চেক"),
+        "danish": MessageLookupByLibrary.simpleMessage("ডেনমার্কের"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("গাark় থিম"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ড্যাশবোর্ড"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ডেটা খালি"),
@@ -852,7 +853,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("প্রিন্টার নির্বাচন"),
         "printing": MessageLookupByLibrary.simpleMessage("মুদ্রণ..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("গোপনীয়তা নীতি"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("গোপনীয়তা এবং শর্তাদি"),
         "private": MessageLookupByLibrary.simpleMessage("ব্যক্তিগত"),
         "product": MessageLookupByLibrary.simpleMessage("প্রোডাক্ট"),
         "productAdded":
@@ -923,6 +925,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("পাসওয়ার্ড রিসেট করুন"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "আপনার পাসওয়ার্ড পুনরায় সেট করুন"),
+        "results": MessageLookupByLibrary.simpleMessage("ফলাফল"),
         "review": MessageLookupByLibrary.simpleMessage("পূর্বরূপ"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("পর্যালোচনা অনুমোদন"),
diff --git a/lib/generated/intl/messages_cs.dart b/lib/generated/intl/messages_cs.dart
index 1cd9543..833d98a 100644
--- a/lib/generated/intl/messages_cs.dart
+++ b/lib/generated/intl/messages_cs.dart
@@ -329,6 +329,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Poznámka zákazníka"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("čeština"),
+        "danish": MessageLookupByLibrary.simpleMessage("dánský"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tmavé téma"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Nástěnka"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data prázdná"),
@@ -858,7 +859,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Tisk..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Zásady ochrany osobních údajů"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "Ochrana osobních údajů a podmínky"),
         "private": MessageLookupByLibrary.simpleMessage("Soukromé"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -932,6 +934,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Obnovit heslo"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Obnovit heslo"),
+        "results": MessageLookupByLibrary.simpleMessage("Výsledek"),
         "review": MessageLookupByLibrary.simpleMessage("Náhled"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Zkontrolujte schválení"),
diff --git a/lib/generated/intl/messages_da.dart b/lib/generated/intl/messages_da.dart
index 723df5b..701f087 100644
--- a/lib/generated/intl/messages_da.dart
+++ b/lib/generated/intl/messages_da.dart
@@ -321,6 +321,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Kunde notat"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("tjekkisk"),
+        "danish": MessageLookupByLibrary.simpleMessage("dansk"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mørkt tema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("instrumentbræt"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data tomme"),
@@ -843,7 +844,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Trykning..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Fortrolighedspolitik"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Fortrolighed og vilkår"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -915,6 +917,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nulstille kodeord"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Nulstil din adgangskode"),
+        "results": MessageLookupByLibrary.simpleMessage("resultater"),
         "review": MessageLookupByLibrary.simpleMessage("Eksempel"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Gennemgå godkendelse"),
diff --git a/lib/generated/intl/messages_de.dart b/lib/generated/intl/messages_de.dart
index 183c4fe..30ccfe6 100644
--- a/lib/generated/intl/messages_de.dart
+++ b/lib/generated/intl/messages_de.dart
@@ -334,6 +334,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Kundenhinweis"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Tschechisch"),
+        "danish": MessageLookupByLibrary.simpleMessage("dänisch"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Dunkles Thema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Instrumententafel"),
         "dataEmpty":
@@ -876,7 +877,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Drucken..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Datenschutz-Bestimmungen"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("Datenschutz"),
         "private": MessageLookupByLibrary.simpleMessage("Privatgelände"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded": MessageLookupByLibrary.simpleMessage(
@@ -952,6 +953,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Passwort zurücksetzen"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Setze dein Passwort zurück"),
+        "results": MessageLookupByLibrary.simpleMessage("Ergebnisse"),
         "review": MessageLookupByLibrary.simpleMessage("Überprüfen"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Überprüfung der Genehmigung"),
diff --git a/lib/generated/intl/messages_el.dart b/lib/generated/intl/messages_el.dart
index acd13a6..292b1bc 100644
--- a/lib/generated/intl/messages_el.dart
+++ b/lib/generated/intl/messages_el.dart
@@ -343,6 +343,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Σημείωση πελάτη"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Τσέχος"),
+        "danish": MessageLookupByLibrary.simpleMessage("δανικός"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Dark θέμα"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Ταμπλό"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Κενά δεδομένα"),
@@ -901,7 +902,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Εκτύπωση..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Πολιτική Απορρήτου"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Απόρρητο και Όροι"),
         "private": MessageLookupByLibrary.simpleMessage("Ιδιωτικός"),
         "product": MessageLookupByLibrary.simpleMessage("Προϊόν"),
         "productAdded":
@@ -976,6 +978,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Επαναφέρετε τον κωδικό πρόσβασης"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Επαναφορά του κωδικού πρόσβασής σας"),
+        "results": MessageLookupByLibrary.simpleMessage("αποτελέσματα"),
         "review": MessageLookupByLibrary.simpleMessage("Προεπισκόπηση"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Έλεγχος έγκρισης"),
diff --git a/lib/generated/intl/messages_en.dart b/lib/generated/intl/messages_en.dart
index 6847b87..5ca2a29 100644
--- a/lib/generated/intl/messages_en.dart
+++ b/lib/generated/intl/messages_en.dart
@@ -320,6 +320,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Customer note"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("Danish"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Dark Theme"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashboard"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -544,7 +545,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "kurdish": MessageLookupByLibrary.simpleMessage("Kurdish"),
         "language": MessageLookupByLibrary.simpleMessage("Languages"),
         "languageSuccess": MessageLookupByLibrary.simpleMessage(
-            "The Language is updated successfully, please restart the APP"),
+            "The Language is updated successfully"),
         "lao": MessageLookupByLibrary.simpleMessage("Lao"),
         "lastName": MessageLookupByLibrary.simpleMessage("Last Name"),
         "lastNameIsRequired": MessageLookupByLibrary.simpleMessage(
@@ -830,7 +831,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Printer Selection"),
         "printing": MessageLookupByLibrary.simpleMessage("Printing..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Privacy Policy"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("Privacy & Terms"),
         "private": MessageLookupByLibrary.simpleMessage("Private"),
         "product": MessageLookupByLibrary.simpleMessage("Product"),
         "productAdded":
@@ -899,6 +900,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Reset Password"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Reset Your Password"),
+        "results": MessageLookupByLibrary.simpleMessage("Results"),
         "review": MessageLookupByLibrary.simpleMessage("preview"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Review Approval"),
diff --git a/lib/generated/intl/messages_es.dart b/lib/generated/intl/messages_es.dart
index 73a6e83..17132e2 100644
--- a/lib/generated/intl/messages_es.dart
+++ b/lib/generated/intl/messages_es.dart
@@ -333,6 +333,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("NOTA AL CLIENTE"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("checo"),
+        "danish": MessageLookupByLibrary.simpleMessage("danés"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema Oscuro"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Tablero"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Vacío"),
@@ -879,7 +880,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Impresión..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Política de privacidad"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Términos y privacidad"),
         "private": MessageLookupByLibrary.simpleMessage("Privado"),
         "product": MessageLookupByLibrary.simpleMessage("Producto"),
         "productAdded":
@@ -956,6 +958,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Restablecer la contraseña"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Restablecer su contraseña"),
+        "results": MessageLookupByLibrary.simpleMessage("Resultados"),
         "review": MessageLookupByLibrary.simpleMessage("Reseña"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Aprobación de revisión"),
diff --git a/lib/generated/intl/messages_fa.dart b/lib/generated/intl/messages_fa.dart
index 76b6f90..92b2670 100644
--- a/lib/generated/intl/messages_fa.dart
+++ b/lib/generated/intl/messages_fa.dart
@@ -322,6 +322,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("یادداشت مشتری"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("کشور چک"),
+        "danish": MessageLookupByLibrary.simpleMessage("دانمارکی"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("حالت شب"),
         "dashboard": MessageLookupByLibrary.simpleMessage("داشبورد"),
         "dataEmpty":
@@ -907,6 +908,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ایجاد رمز عبور جدید"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("تنظیم مجدد رمز عبور"),
+        "results": MessageLookupByLibrary.simpleMessage("نتایج"),
         "review": MessageLookupByLibrary.simpleMessage("جدید خرید"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("تأیید بازبینی"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
diff --git a/lib/generated/intl/messages_fi.dart b/lib/generated/intl/messages_fi.dart
index ceb80f9..0327a12 100644
--- a/lib/generated/intl/messages_fi.dart
+++ b/lib/generated/intl/messages_fi.dart
@@ -326,6 +326,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Asiakkaan huomautus"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("Tanskan kieli"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tumma teema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("kojelauta"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Tiedot tyhjät"),
@@ -850,7 +851,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Tulostus ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Tietosuojakäytäntö"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("YKSITYISYYS JA KÄYTTÖEHDOT"),
         "private": MessageLookupByLibrary.simpleMessage("yksityinen"),
         "product": MessageLookupByLibrary.simpleMessage("Tuote"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Tuote lisätään"),
@@ -921,6 +923,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nollaa salasana"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Nollaa salasana"),
+        "results": MessageLookupByLibrary.simpleMessage("tulokset"),
         "review": MessageLookupByLibrary.simpleMessage("esikatselu"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Tarkista hyväksyntä"),
diff --git a/lib/generated/intl/messages_fr.dart b/lib/generated/intl/messages_fr.dart
index c67d33f..051aa0d 100644
--- a/lib/generated/intl/messages_fr.dart
+++ b/lib/generated/intl/messages_fr.dart
@@ -337,6 +337,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Note du client"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("tchèque"),
+        "danish": MessageLookupByLibrary.simpleMessage("danois"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Thème sombre"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Tableau de bord"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -891,7 +892,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Impression..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Politique de confidentialité"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "Confidentialité et modalités"),
         "private": MessageLookupByLibrary.simpleMessage("privé"),
         "product": MessageLookupByLibrary.simpleMessage("Produit"),
         "productAdded":
@@ -964,6 +966,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Réinitialiser le mot de passe"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Réinitialiser votre mot de passe"),
+        "results": MessageLookupByLibrary.simpleMessage("Résultats"),
         "review": MessageLookupByLibrary.simpleMessage("revue"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Revoir l\'approbation"),
diff --git a/lib/generated/intl/messages_he.dart b/lib/generated/intl/messages_he.dart
index c65b042..f37c27d 100644
--- a/lib/generated/intl/messages_he.dart
+++ b/lib/generated/intl/messages_he.dart
@@ -309,6 +309,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("הערת לקוח"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("צ\'כית"),
+        "danish": MessageLookupByLibrary.simpleMessage("דנית"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("נושא כהה"),
         "dashboard": MessageLookupByLibrary.simpleMessage("DASHBOARD"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("נתונים ריקים"),
@@ -795,7 +796,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("בחירת מדפסת"),
         "printing": MessageLookupByLibrary.simpleMessage("הַדפָּסָה..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("מדיניות פרטיות"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("פרטיות ותנאים"),
         "private": MessageLookupByLibrary.simpleMessage("פרטי"),
         "product": MessageLookupByLibrary.simpleMessage("מוצר"),
         "productAdded": MessageLookupByLibrary.simpleMessage("המוצר נוסף"),
@@ -861,6 +862,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("אפס סיסמה"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("אפס את הסיסמה שלך"),
+        "results": MessageLookupByLibrary.simpleMessage("תוצאות"),
         "review": MessageLookupByLibrary.simpleMessage("תצוגה מקדימה"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("אישור סקירה"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
diff --git a/lib/generated/intl/messages_hi.dart b/lib/generated/intl/messages_hi.dart
index 3003411..7b28809 100644
--- a/lib/generated/intl/messages_hi.dart
+++ b/lib/generated/intl/messages_hi.dart
@@ -320,6 +320,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("ग्राहक नोट"),
         "cvv": MessageLookupByLibrary.simpleMessage("सीवीवी"),
         "czech": MessageLookupByLibrary.simpleMessage("चेक"),
+        "danish": MessageLookupByLibrary.simpleMessage("दानिश"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("डार्क थीम"),
         "dashboard": MessageLookupByLibrary.simpleMessage("डैशबोर्ड"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("डेटा खाली"),
@@ -836,7 +837,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("प्रिंटर चयन"),
         "printing": MessageLookupByLibrary.simpleMessage("मुद्रण..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("गोपनीयता नीति"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("गोपनीयता व शर्तें"),
         "private": MessageLookupByLibrary.simpleMessage("निजी"),
         "product": MessageLookupByLibrary.simpleMessage("उत्पाद"),
         "productAdded":
@@ -909,6 +911,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("पासवर्ड रीसेट"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("अपना पासवर्ड रीसेट करें"),
+        "results": MessageLookupByLibrary.simpleMessage("परिणाम"),
         "review": MessageLookupByLibrary.simpleMessage("पूर्वावलोकन"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("अनुमोदन की समीक्षा करें"),
diff --git a/lib/generated/intl/messages_hu.dart b/lib/generated/intl/messages_hu.dart
index f9469f4..afff32c 100644
--- a/lib/generated/intl/messages_hu.dart
+++ b/lib/generated/intl/messages_hu.dart
@@ -336,6 +336,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Ügyfél megjegyzése"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("cseh"),
+        "danish": MessageLookupByLibrary.simpleMessage("dán"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Sötét Mód"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Irányítópult"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("NIncs adat"),
@@ -877,7 +878,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Nyomtatás..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Adatvédelmi irányelvek"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Adatvédelem és feltételek"),
         "private": MessageLookupByLibrary.simpleMessage("Magán"),
         "product": MessageLookupByLibrary.simpleMessage("termek"),
         "productAdded":
@@ -951,6 +953,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Jelszó visszaállítása"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Állítsd vissza a jelszavad"),
+        "results": MessageLookupByLibrary.simpleMessage("Eredmények"),
         "review": MessageLookupByLibrary.simpleMessage("előnézet"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Ellenőrzés jóváhagyása"),
diff --git a/lib/generated/intl/messages_id.dart b/lib/generated/intl/messages_id.dart
index 8d212cb..ec4a76c 100644
--- a/lib/generated/intl/messages_id.dart
+++ b/lib/generated/intl/messages_id.dart
@@ -332,6 +332,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Catatan pelanggan"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Ceko"),
+        "danish": MessageLookupByLibrary.simpleMessage("Orang Denmark"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema gelap"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dasbor"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -862,7 +863,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Pencetakan..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Rahasia pribadi"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privasi & Ketentuan"),
         "private": MessageLookupByLibrary.simpleMessage("Pribadi"),
         "product": MessageLookupByLibrary.simpleMessage("Produk"),
         "productAdded":
@@ -937,6 +939,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Setel Ulang Kata Sandi"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Mereset password Anda"),
+        "results": MessageLookupByLibrary.simpleMessage("Hasil"),
         "review": MessageLookupByLibrary.simpleMessage("Ulasan"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Tinjau Persetujuan"),
diff --git a/lib/generated/intl/messages_it.dart b/lib/generated/intl/messages_it.dart
index b3f7662..f70088c 100644
--- a/lib/generated/intl/messages_it.dart
+++ b/lib/generated/intl/messages_it.dart
@@ -333,6 +333,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Nota del cliente"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ceco"),
+        "danish": MessageLookupByLibrary.simpleMessage("danese"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema scuro"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Cruscotto"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -872,7 +873,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Stampa..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("POLITICA SULLA RISERVATEZZA"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Termini e Condizioni"),
         "private": MessageLookupByLibrary.simpleMessage("privato"),
         "product": MessageLookupByLibrary.simpleMessage("Prodotto"),
         "productAdded": MessageLookupByLibrary.simpleMessage(
@@ -949,6 +951,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Reimposta password"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Reimposta la tua password"),
+        "results": MessageLookupByLibrary.simpleMessage("risultati"),
         "review": MessageLookupByLibrary.simpleMessage("Recensione"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage(
             "Approvazione della revisione"),
diff --git a/lib/generated/intl/messages_ja.dart b/lib/generated/intl/messages_ja.dart
index edaa5eb..07bf9ae 100644
--- a/lib/generated/intl/messages_ja.dart
+++ b/lib/generated/intl/messages_ja.dart
@@ -290,6 +290,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("カスタマーノート"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("チェコ語"),
+        "danish": MessageLookupByLibrary.simpleMessage("デンマーク語"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("暗いテーマ"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ダッシュボード"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -755,7 +756,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("プリンタの選択"),
         "printing": MessageLookupByLibrary.simpleMessage("印刷..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("個人情報保護方針"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("プライバシーと利用規約"),
         "private": MessageLookupByLibrary.simpleMessage("非公開"),
         "product": MessageLookupByLibrary.simpleMessage("製品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("製品が追加され"),
@@ -817,6 +818,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("パスワードを再設定する"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("あなたのパスワードをリセット"),
+        "results": MessageLookupByLibrary.simpleMessage("結果"),
         "review": MessageLookupByLibrary.simpleMessage("レビュー"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("レビューの承認"),
         "reviewPendingApproval":
diff --git a/lib/generated/intl/messages_km.dart b/lib/generated/intl/messages_km.dart
index 5c1d62f..85a118c 100644
--- a/lib/generated/intl/messages_km.dart
+++ b/lib/generated/intl/messages_km.dart
@@ -326,6 +326,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("កំណត់ចំណាំរបស់អតិថិជន"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ឆែក"),
+        "danish": MessageLookupByLibrary.simpleMessage("ដាណឺម៉ាក"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ស្បែកងងឹត"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ផ្ទាំងគ្រប់គ្រង"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ទិន្នន័យទទេ"),
@@ -876,7 +877,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("ការបោះពុម្ព..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("គោលការណ៍​ភាព​ឯកជន"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("ឯកជនភាព & លក្ខខណ្ឌ"),
         "private": MessageLookupByLibrary.simpleMessage("ឯកជន"),
         "product": MessageLookupByLibrary.simpleMessage("ផលិតផល"),
         "productAdded":
@@ -949,6 +951,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("កំណត់ពាក្យសម្ងាត់ឡើងវិញ"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "កំណត់ពាក្យសម្ងាត់របស់អ្នកឡើងវិញ"),
+        "results": MessageLookupByLibrary.simpleMessage("លទ្ធផល"),
         "review": MessageLookupByLibrary.simpleMessage("ការមើលឡើងវិញ"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("ពិនិត្យការអនុម័ត"),
diff --git a/lib/generated/intl/messages_ko.dart b/lib/generated/intl/messages_ko.dart
index 6f2e2fb..917e99f 100644
--- a/lib/generated/intl/messages_ko.dart
+++ b/lib/generated/intl/messages_ko.dart
@@ -288,6 +288,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("고객 메모"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("체코 사람"),
+        "danish": MessageLookupByLibrary.simpleMessage("덴마크 말"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("어두운 테마"),
         "dashboard": MessageLookupByLibrary.simpleMessage("계기반"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("데이터가 비어 있음"),
@@ -738,7 +739,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("프린터 선택"),
         "printing": MessageLookupByLibrary.simpleMessage("인쇄..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("개인 정보 정책"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("개인정보 및 약관"),
         "private": MessageLookupByLibrary.simpleMessage("은밀한"),
         "product": MessageLookupByLibrary.simpleMessage("생성물"),
         "productAdded": MessageLookupByLibrary.simpleMessage("제품이 추가됩니다"),
@@ -798,6 +799,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("다시 놓기"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("암호를 재설정"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("비밀번호를 재설정"),
+        "results": MessageLookupByLibrary.simpleMessage("결과"),
         "review": MessageLookupByLibrary.simpleMessage("시사"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("승인 검토"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
diff --git a/lib/generated/intl/messages_lo.dart b/lib/generated/intl/messages_lo.dart
index ea7a7c5..349334e 100644
--- a/lib/generated/intl/messages_lo.dart
+++ b/lib/generated/intl/messages_lo.dart
@@ -317,6 +317,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("ບັນທຶກລູກຄ້າ"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ພາສາເຊັກ"),
+        "danish": MessageLookupByLibrary.simpleMessage("ເດນມາກ"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ຮູບແບບສີດຳ"),
         "dashboard": MessageLookupByLibrary.simpleMessage("ໜ້າຫຼັກ"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ຂໍ້ມູນຫວ່າງເປົ່າ"),
@@ -841,7 +842,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("ການພິມ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("ນະໂຍບາຍຄວາມເປັນສ່ວນຕົວ"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("ຄວາມເປັນສ່ວນຕົວ & ເງື່ອນໄຂ"),
         "private": MessageLookupByLibrary.simpleMessage("ສ່ວນຕົວ"),
         "product": MessageLookupByLibrary.simpleMessage("ຜະລິດຕະພັນ"),
         "productAdded":
@@ -911,6 +913,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ຕັ້ງລະຫັດຜ່ານໃໝ່"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("ຕັ້ງລະຫັດຜ່ານຂອງທ່ານ"),
+        "results": MessageLookupByLibrary.simpleMessage("ຜົນໄດ້ຮັບ"),
         "review": MessageLookupByLibrary.simpleMessage("ເບິ່ງຕົວຢ່າງ"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("ອະນຸມັດ"),
         "reviewPendingApproval":
diff --git a/lib/generated/intl/messages_ms.dart b/lib/generated/intl/messages_ms.dart
index 4439fbf..cdca77e 100644
--- a/lib/generated/intl/messages_ms.dart
+++ b/lib/generated/intl/messages_ms.dart
@@ -327,6 +327,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Nota pelanggan"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("Denmark"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema gelap"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Papan Pemuka"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Kosong"),
@@ -857,7 +858,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Pemilihan Pencetak"),
         "printing": MessageLookupByLibrary.simpleMessage("Mencetak..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Dasar privasi"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privasi & Syarat"),
         "private": MessageLookupByLibrary.simpleMessage("Peribadi"),
         "product": MessageLookupByLibrary.simpleMessage("Produk"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Produk ditambah"),
@@ -927,6 +929,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Menetapkan semula kata laluan"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Menetapkan semula kata laluan anda"),
+        "results": MessageLookupByLibrary.simpleMessage("Keputusan"),
         "review": MessageLookupByLibrary.simpleMessage("Pratonton"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Semakan Kelulusan"),
diff --git a/lib/generated/intl/messages_my.dart b/lib/generated/intl/messages_my.dart
index 726dabb..1ed220a 100644
--- a/lib/generated/intl/messages_my.dart
+++ b/lib/generated/intl/messages_my.dart
@@ -341,6 +341,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("ဝယ်ယူသူမှတ်စု"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("ဒိန်းမတ်"),
         "darkTheme":
             MessageLookupByLibrary.simpleMessage("အနက်ရောင်သို့ပြောင်းလဲရန်"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashboard"),
@@ -892,7 +893,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("ပုံနှိပ်ခြင်း..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("ကိုယ်ပိုင်လွတ်လပ်ခွင့်မူဝါဒ"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "ကိုယ်ရေးကိုယ်တာနှင့် စည်းမျဥ်းစည်းကမ်းများ"),
         "private": MessageLookupByLibrary.simpleMessage("Private"),
         "product": MessageLookupByLibrary.simpleMessage("ထုတ်ကုန်"),
         "productAdded":
@@ -970,6 +972,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("စကားဝှက်ပြန်လည်ပြုလုပ်မည်။"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "သင်၏စကားဝှက်ကိုပြန်လည်ပြုလုပ်မည်။ "),
+        "results": MessageLookupByLibrary.simpleMessage("ရလဒ်များ"),
         "review": MessageLookupByLibrary.simpleMessage("ထင်မြင်ချက်"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage(
             "ခွင့်ပြုချက်ကိုပြန်လည်ဆန်းစစ်နေသည်။"),
diff --git a/lib/generated/intl/messages_nl.dart b/lib/generated/intl/messages_nl.dart
index 925c7bf..ccee67a 100644
--- a/lib/generated/intl/messages_nl.dart
+++ b/lib/generated/intl/messages_nl.dart
@@ -333,6 +333,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("klant nota"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Tsjechisch"),
+        "danish": MessageLookupByLibrary.simpleMessage("Deens"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Donker thema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashboard"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Gegevens zijn leeg"),
@@ -866,7 +867,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Printerselectie"),
         "printing": MessageLookupByLibrary.simpleMessage("Afdrukken ..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Privacybeleid"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privacy en voorwaarden"),
         "private": MessageLookupByLibrary.simpleMessage("Privaat"),
         "product": MessageLookupByLibrary.simpleMessage("Artikel"),
         "productAdded":
@@ -939,6 +941,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Reset wachtwoord"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Stel je wachtwoord opnieuw in"),
+        "results": MessageLookupByLibrary.simpleMessage("uitslagen"),
         "review": MessageLookupByLibrary.simpleMessage("Voorbeeld"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Goedkeuring beoordelen"),
diff --git a/lib/generated/intl/messages_pl.dart b/lib/generated/intl/messages_pl.dart
index 29572bf..3320138 100644
--- a/lib/generated/intl/messages_pl.dart
+++ b/lib/generated/intl/messages_pl.dart
@@ -324,6 +324,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Notatka dla klienta"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Czech"),
+        "danish": MessageLookupByLibrary.simpleMessage("duński"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ciemny schemat"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Deska rozdzielcza"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Brak danych"),
@@ -868,7 +869,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Druk..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Polityka prywatności"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("prywatność i warunki"),
         "private": MessageLookupByLibrary.simpleMessage("Prywatny"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -941,6 +943,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Zresetuj hasło"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Zresetuj swoje hasło"),
+        "results": MessageLookupByLibrary.simpleMessage("wyniki"),
         "review": MessageLookupByLibrary.simpleMessage("zapowiedź"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Zatwierdzenie recenzji"),
diff --git a/lib/generated/intl/messages_pt.dart b/lib/generated/intl/messages_pt.dart
index 8ab231f..96927b1 100644
--- a/lib/generated/intl/messages_pt.dart
+++ b/lib/generated/intl/messages_pt.dart
@@ -331,6 +331,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Nota do Cliente"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Tcheco"),
+        "danish": MessageLookupByLibrary.simpleMessage("dinamarquês"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tema Escuro"),
         "dashboard": MessageLookupByLibrary.simpleMessage("painel de controle"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Dados vazios"),
@@ -872,7 +873,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Impressão..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Política de Privacidade"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privacidade e Termos"),
         "private": MessageLookupByLibrary.simpleMessage("privado"),
         "product": MessageLookupByLibrary.simpleMessage("produtos"),
         "productAdded":
@@ -949,6 +951,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Redefinir senha"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Redefina sua senha"),
+        "results": MessageLookupByLibrary.simpleMessage("resultados"),
         "review": MessageLookupByLibrary.simpleMessage("Revisão"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Aprovação de revisão"),
diff --git a/lib/generated/intl/messages_ro.dart b/lib/generated/intl/messages_ro.dart
index d597d88..c6dd43b 100644
--- a/lib/generated/intl/messages_ro.dart
+++ b/lib/generated/intl/messages_ro.dart
@@ -331,6 +331,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Nota clientului"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("ceh"),
+        "danish": MessageLookupByLibrary.simpleMessage("danez"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mod Obscur"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Tablou de bord"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Gol date"),
@@ -863,7 +864,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Se imprimă..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Politica de confidentialitate"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Termeni și Condiții"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("produs"),
         "productAdded":
@@ -936,6 +938,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Resetează parola"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Resetează parola"),
+        "results": MessageLookupByLibrary.simpleMessage("rezultate"),
         "review": MessageLookupByLibrary.simpleMessage("Verificare"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Revizuirea aprobării"),
diff --git a/lib/generated/intl/messages_ru.dart b/lib/generated/intl/messages_ru.dart
index 798d70a..04c4ee0 100644
--- a/lib/generated/intl/messages_ru.dart
+++ b/lib/generated/intl/messages_ru.dart
@@ -330,6 +330,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Примечание клиента"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Чешский"),
+        "danish": MessageLookupByLibrary.simpleMessage("датский"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Ночная тема"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Приборная доска"),
         "dataEmpty":
@@ -866,7 +867,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Печать ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Политика конфиденциальности"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Защита & Условия"),
         "private": MessageLookupByLibrary.simpleMessage("Частный"),
         "product": MessageLookupByLibrary.simpleMessage("Товар"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Товар добавлен"),
@@ -939,6 +941,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Сброс пароля"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Сбросить пароль"),
+        "results": MessageLookupByLibrary.simpleMessage("результаты"),
         "review": MessageLookupByLibrary.simpleMessage("Обзор"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Проверка утверждения"),
diff --git a/lib/generated/intl/messages_sk.dart b/lib/generated/intl/messages_sk.dart
index 94bf997..2efc7aa 100644
--- a/lib/generated/intl/messages_sk.dart
+++ b/lib/generated/intl/messages_sk.dart
@@ -332,6 +332,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Poznámka zákazníka"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("český"),
+        "danish": MessageLookupByLibrary.simpleMessage("dánsky"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Tmavá téma"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Nástenka"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Údaje sú prázdne"),
@@ -860,7 +861,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Tlačí sa..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Zásady ochrany osobných údajov"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage(
+            "Ochrana osobných údajov a podmienky"),
         "private": MessageLookupByLibrary.simpleMessage("Súkromné"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Produkt pridaný"),
@@ -935,6 +937,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Obnoviť heslo"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Obnoviť Vaše heslo"),
+        "results": MessageLookupByLibrary.simpleMessage("Výsledky"),
         "review": MessageLookupByLibrary.simpleMessage("Náhľad"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Schválenie recenzie"),
diff --git a/lib/generated/intl/messages_sq.dart b/lib/generated/intl/messages_sq.dart
index 16829af..d60a6d9 100644
--- a/lib/generated/intl/messages_sq.dart
+++ b/lib/generated/intl/messages_sq.dart
@@ -332,6 +332,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Shënim i klientit"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("çek"),
+        "danish": MessageLookupByLibrary.simpleMessage("danez"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Temë e errët"),
         "dashboard": MessageLookupByLibrary.simpleMessage("baltëpritëse"),
         "dataEmpty":
@@ -871,7 +872,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Po printon..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Politika e privatësisë"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privatësia dhe Kushtet"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -946,6 +948,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Rivendosni fjalëkalimin"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage(
             "Rivendosni fjalëkalimin tuaj"),
+        "results": MessageLookupByLibrary.simpleMessage("Rezultatet"),
         "review": MessageLookupByLibrary.simpleMessage("parapamje"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Rishikimi i miratimit"),
diff --git a/lib/generated/intl/messages_sr.dart b/lib/generated/intl/messages_sr.dart
index b49ab4a..b63d61d 100644
--- a/lib/generated/intl/messages_sr.dart
+++ b/lib/generated/intl/messages_sr.dart
@@ -332,6 +332,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Napomena kupca"),
         "cvv": MessageLookupByLibrary.simpleMessage("ЦВВ"),
         "czech": MessageLookupByLibrary.simpleMessage("češki"),
+        "danish": MessageLookupByLibrary.simpleMessage("Danski"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Мрачна тема"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Nadzorna ploča"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Нема података"),
@@ -856,7 +857,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Štampanje..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Politika privatnosti"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Privatnost & Uslovi"),
         "private": MessageLookupByLibrary.simpleMessage("Privatno"),
         "product": MessageLookupByLibrary.simpleMessage("производа"),
         "productAdded": MessageLookupByLibrary.simpleMessage(
@@ -932,6 +934,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Ресетуј шифру"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Ресетујте вашу лозинку"),
+        "results": MessageLookupByLibrary.simpleMessage("Rezultati"),
         "review": MessageLookupByLibrary.simpleMessage("Проверавати"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Überprüfung der Genehmigung"),
diff --git a/lib/generated/intl/messages_sv.dart b/lib/generated/intl/messages_sv.dart
index 61a2960..c1a9d5c 100644
--- a/lib/generated/intl/messages_sv.dart
+++ b/lib/generated/intl/messages_sv.dart
@@ -326,6 +326,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Kundanteckning"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("tjeck"),
+        "danish": MessageLookupByLibrary.simpleMessage("danska"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mörkt tema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("instrumentbräda"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data tom"),
@@ -851,7 +852,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Utskrift..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Integritetspolicy"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("SEKRETESS OCH VILLKOR"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Produkt"),
         "productAdded":
@@ -922,6 +924,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Återställ lösenord"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Återställ ditt lösenord"),
+        "results": MessageLookupByLibrary.simpleMessage("Resultat"),
         "review": MessageLookupByLibrary.simpleMessage("Förhandsvisning"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Granska godkännande"),
diff --git a/lib/generated/intl/messages_sw.dart b/lib/generated/intl/messages_sw.dart
index a51ae59..a4a5f3f 100644
--- a/lib/generated/intl/messages_sw.dart
+++ b/lib/generated/intl/messages_sw.dart
@@ -328,6 +328,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("Ujumbe wa mteja"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Kicheki"),
+        "danish": MessageLookupByLibrary.simpleMessage("Kidenmaki"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Mandhari ya Giza"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Dashibodi"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Tupu"),
@@ -871,7 +872,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Inachapisha..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Sera ya faragha"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Faragha na Masharti"),
         "private": MessageLookupByLibrary.simpleMessage("Privat"),
         "product": MessageLookupByLibrary.simpleMessage("Bidhaa"),
         "productAdded":
@@ -944,6 +946,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Rudisha Nenosiri"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Weka upya Nenosiri lako"),
+        "results": MessageLookupByLibrary.simpleMessage("Matokeo"),
         "review": MessageLookupByLibrary.simpleMessage("hakikisho"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("Kagua Idhini"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
diff --git a/lib/generated/intl/messages_ta.dart b/lib/generated/intl/messages_ta.dart
index 332f378..0bacdcf 100644
--- a/lib/generated/intl/messages_ta.dart
+++ b/lib/generated/intl/messages_ta.dart
@@ -348,6 +348,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("வாடிக்கையாளர் குறிப்பு"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("செக்"),
+        "danish": MessageLookupByLibrary.simpleMessage("டேனிஷ்"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("டார்க் தீம்"),
         "dashboard": MessageLookupByLibrary.simpleMessage("டாஷ்போர்ட்"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("தரவு இல்லை"),
@@ -889,7 +890,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("அச்சிடுகிறது..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("தனியுரிமைக் கொள்கை"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("தனியுரிமை & விதிமுறைகள்"),
         "private": MessageLookupByLibrary.simpleMessage("தனியார்"),
         "product": MessageLookupByLibrary.simpleMessage("பொருள்"),
         "productAdded":
@@ -966,6 +968,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("பாஸ்வேர்டை மீட்கவும்"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("உங்கள் பாஸ்வேர்டை மீட்கவும்"),
+        "results": MessageLookupByLibrary.simpleMessage("முடிவுகள்"),
         "review": MessageLookupByLibrary.simpleMessage("ரிவியூ"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("ரிவியூ ஒப்புதல் "),
diff --git a/lib/generated/intl/messages_th.dart b/lib/generated/intl/messages_th.dart
index b9dc003..6c597c8 100644
--- a/lib/generated/intl/messages_th.dart
+++ b/lib/generated/intl/messages_th.dart
@@ -323,6 +323,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("หมายเหตุลูกค้า"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("สาธารณรัฐเช็ก"),
+        "danish": MessageLookupByLibrary.simpleMessage("เดนมาร์ก"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("ธีมสีเข้ม"),
         "dashboard": MessageLookupByLibrary.simpleMessage("แผงควบคุม"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("ไม่มีข้อมูล"),
@@ -846,7 +847,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("พิมพ์..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("นโยบายความเป็นส่วนตัว"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("ความเป็นส่วนตัวและข้อตกลง"),
         "private": MessageLookupByLibrary.simpleMessage("ส่วยตัว"),
         "product": MessageLookupByLibrary.simpleMessage("สินค้า"),
         "productAdded": MessageLookupByLibrary.simpleMessage("เพิ่มสินค้าแล้ว"),
@@ -915,6 +917,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("รีเซ็ตรหัสผ่าน"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("รีเซ็ตรหัสผ่านของคุณ"),
+        "results": MessageLookupByLibrary.simpleMessage("ผล"),
         "review": MessageLookupByLibrary.simpleMessage("รีวิว"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("การอนุมัติการตรวจสอบ"),
diff --git a/lib/generated/intl/messages_tr.dart b/lib/generated/intl/messages_tr.dart
index 7f14413..42ba30a 100644
--- a/lib/generated/intl/messages_tr.dart
+++ b/lib/generated/intl/messages_tr.dart
@@ -324,6 +324,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("müşteri notu"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Çek"),
+        "danish": MessageLookupByLibrary.simpleMessage("Danimarkalı"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Koyu Tema"),
         "dashboard": MessageLookupByLibrary.simpleMessage("gösterge paneli"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Veri yok"),
@@ -843,7 +844,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Baskı..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Gizlilik Politikası"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Gizlilik ve Şartlar"),
         "private": MessageLookupByLibrary.simpleMessage("Özel"),
         "product": MessageLookupByLibrary.simpleMessage("Ürün"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Ürün eklendi"),
@@ -913,6 +915,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Şifre Sıfırla"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Şifreni Sıfırla"),
+        "results": MessageLookupByLibrary.simpleMessage("Sonuçlar"),
         "review": MessageLookupByLibrary.simpleMessage("Gözden Geçir"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("İnceleme Onayı"),
diff --git a/lib/generated/intl/messages_uk.dart b/lib/generated/intl/messages_uk.dart
index 4a8cba3..2ba40c4 100644
--- a/lib/generated/intl/messages_uk.dart
+++ b/lib/generated/intl/messages_uk.dart
@@ -332,6 +332,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Примітка клієнта"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Чеська"),
+        "danish": MessageLookupByLibrary.simpleMessage("Датська"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Темна тема"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Панель приладів"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Дані порожні"),
@@ -872,7 +873,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Друк ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Політика конфіденційності"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Конфіденційність та умови"),
         "private": MessageLookupByLibrary.simpleMessage("Приватний"),
         "product": MessageLookupByLibrary.simpleMessage("товар"),
         "productAdded": MessageLookupByLibrary.simpleMessage("Товар додано"),
@@ -943,6 +945,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "resetPassword": MessageLookupByLibrary.simpleMessage("Скинути пароль"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Скинути пароль"),
+        "results": MessageLookupByLibrary.simpleMessage("результати"),
         "review": MessageLookupByLibrary.simpleMessage("Попередній перегляд"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Схвалення перевірки"),
diff --git a/lib/generated/intl/messages_uz.dart b/lib/generated/intl/messages_uz.dart
index b4ee877..08bebe9 100644
--- a/lib/generated/intl/messages_uz.dart
+++ b/lib/generated/intl/messages_uz.dart
@@ -338,6 +338,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Xaridor eslatmasi"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Chexiya"),
+        "danish": MessageLookupByLibrary.simpleMessage("Daniya"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Qorong\'u mavzu"),
         "dashboard": MessageLookupByLibrary.simpleMessage("Asboblar paneli"),
         "dataEmpty":
@@ -897,7 +898,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Chop etilmoqda..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Maxfiylik siyosati"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Maxfiylik va Shartlar"),
         "private": MessageLookupByLibrary.simpleMessage("Xususiy"),
         "product": MessageLookupByLibrary.simpleMessage("Mahsulot"),
         "productAdded":
@@ -973,6 +975,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Parolni qayta tiklash"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Parolni tiklash"),
+        "results": MessageLookupByLibrary.simpleMessage("natijalar"),
         "review": MessageLookupByLibrary.simpleMessage("Oldindan ko\'rish"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("Tasdiqlash"),
         "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
diff --git a/lib/generated/intl/messages_vi.dart b/lib/generated/intl/messages_vi.dart
index e11dad4..e9c2c91 100644
--- a/lib/generated/intl/messages_vi.dart
+++ b/lib/generated/intl/messages_vi.dart
@@ -330,6 +330,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Lưu ý khách hàng"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("Séc"),
+        "danish": MessageLookupByLibrary.simpleMessage("người Đan Mạch"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("Giao diện tối"),
         "dashboard": MessageLookupByLibrary.simpleMessage("bảng điều khiển"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("Data Empty"),
@@ -864,7 +865,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printing": MessageLookupByLibrary.simpleMessage("Đang in ..."),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Chính sách bảo mật"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Quyền riêng tư & Điều khoản"),
         "private": MessageLookupByLibrary.simpleMessage("Riêng tư"),
         "product": MessageLookupByLibrary.simpleMessage("Sản phẩm"),
         "productAdded":
@@ -935,6 +937,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Cài lại mật khẩu"),
         "resetYourPassword":
             MessageLookupByLibrary.simpleMessage("Cài lại mật khẩu của bạn"),
+        "results": MessageLookupByLibrary.simpleMessage("các kết quả"),
         "review": MessageLookupByLibrary.simpleMessage("Đang duyệt"),
         "reviewApproval":
             MessageLookupByLibrary.simpleMessage("Xem xét phê duyệt"),
diff --git a/lib/generated/intl/messages_zh.dart b/lib/generated/intl/messages_zh.dart
index cb3481d..60e20d3 100644
--- a/lib/generated/intl/messages_zh.dart
+++ b/lib/generated/intl/messages_zh.dart
@@ -274,6 +274,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("客户须知"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("捷克"),
+        "danish": MessageLookupByLibrary.simpleMessage("丹麦"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("黑暗主題"),
         "dashboard": MessageLookupByLibrary.simpleMessage("仪表板"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("数据为空"),
@@ -682,7 +683,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("打印机选择"),
         "printing": MessageLookupByLibrary.simpleMessage("印刷..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隐私政策"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("隐私权与条款"),
         "private": MessageLookupByLibrary.simpleMessage("私人的"),
         "product": MessageLookupByLibrary.simpleMessage("产品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("产品已添加"),
@@ -736,6 +737,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("重启"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("重设密码"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("重置你的密码"),
+        "results": MessageLookupByLibrary.simpleMessage("结果"),
         "review": MessageLookupByLibrary.simpleMessage("评论"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("审核批准"),
         "reviewPendingApproval":
diff --git a/lib/generated/intl/messages_zh_CN.dart b/lib/generated/intl/messages_zh_CN.dart
index be35dfa..ccbf4c4 100644
--- a/lib/generated/intl/messages_zh_CN.dart
+++ b/lib/generated/intl/messages_zh_CN.dart
@@ -276,6 +276,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("客户备注"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("捷克"),
+        "danish": MessageLookupByLibrary.simpleMessage("丹麦"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("暗黑主题"),
         "dashboard": MessageLookupByLibrary.simpleMessage("仪表板"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("没有数据"),
@@ -681,7 +682,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("选择打印机"),
         "printing": MessageLookupByLibrary.simpleMessage("打印中..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隐私政策"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("隐私权与条款"),
         "private": MessageLookupByLibrary.simpleMessage("私人"),
         "product": MessageLookupByLibrary.simpleMessage("商品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("商品已新增"),
@@ -736,6 +737,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("重设"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("重设密码"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("重置您的密码"),
+        "results": MessageLookupByLibrary.simpleMessage("结果"),
         "review": MessageLookupByLibrary.simpleMessage("评论"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("审核批准"),
         "reviewPendingApproval":
diff --git a/lib/generated/intl/messages_zh_TW.dart b/lib/generated/intl/messages_zh_TW.dart
index 6bced8b..0b3b4dc 100644
--- a/lib/generated/intl/messages_zh_TW.dart
+++ b/lib/generated/intl/messages_zh_TW.dart
@@ -276,6 +276,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "customerNote": MessageLookupByLibrary.simpleMessage("客戶備註"),
         "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
         "czech": MessageLookupByLibrary.simpleMessage("捷克"),
+        "danish": MessageLookupByLibrary.simpleMessage("丹麥"),
         "darkTheme": MessageLookupByLibrary.simpleMessage("暗黑主題"),
         "dashboard": MessageLookupByLibrary.simpleMessage("儀表板"),
         "dataEmpty": MessageLookupByLibrary.simpleMessage("沒有數據"),
@@ -681,7 +682,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection": MessageLookupByLibrary.simpleMessage("選擇列印機"),
         "printing": MessageLookupByLibrary.simpleMessage("列印中..."),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隱私政策"),
-        "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
+        "privacyTerms": MessageLookupByLibrary.simpleMessage("隱私權與條款"),
         "private": MessageLookupByLibrary.simpleMessage("私人"),
         "product": MessageLookupByLibrary.simpleMessage("商品"),
         "productAdded": MessageLookupByLibrary.simpleMessage("商品已新增"),
@@ -736,6 +737,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "reset": MessageLookupByLibrary.simpleMessage("重設"),
         "resetPassword": MessageLookupByLibrary.simpleMessage("重設密碼"),
         "resetYourPassword": MessageLookupByLibrary.simpleMessage("重置您的密碼"),
+        "results": MessageLookupByLibrary.simpleMessage("結果"),
         "review": MessageLookupByLibrary.simpleMessage("評論"),
         "reviewApproval": MessageLookupByLibrary.simpleMessage("審核批准"),
         "reviewPendingApproval":
diff --git a/lib/generated/l10n.dart b/lib/generated/l10n.dart
index 21ebb92..5c8ffcf 100644
--- a/lib/generated/l10n.dart
+++ b/lib/generated/l10n.dart
@@ -1810,10 +1810,10 @@ class S {
     );
   }
 
-  /// `The Language is updated successfully, please restart the APP`
+  /// `The Language is updated successfully`
   String get languageSuccess {
     return Intl.message(
-      'The Language is updated successfully, please restart the APP',
+      'The Language is updated successfully',
       name: 'languageSuccess',
       desc: '',
       args: [],
@@ -8070,15 +8070,35 @@ class S {
     );
   }
 
-  /// ``
+  /// `Privacy & Terms`
   String get privacyTerms {
     return Intl.message(
-      '',
+      'Privacy & Terms',
       name: 'privacyTerms',
       desc: '',
       args: [],
     );
   }
+
+  /// `Results`
+  String get results {
+    return Intl.message(
+      'Results',
+      name: 'results',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Danish`
+  String get danish {
+    return Intl.message(
+      'Danish',
+      name: 'danish',
+      desc: '',
+      args: [],
+    );
+  }
 }
 
 class AppLocalizationDelegate extends LocalizationsDelegate<S> {
diff --git a/lib/l10n/intl_ar.arb b/lib/l10n/intl_ar.arb
index b6e9a46..dd5b8e5 100644
--- a/lib/l10n/intl_ar.arb
+++ b/lib/l10n/intl_ar.arb
@@ -191,7 +191,7 @@
 	"spanish": "الأسبانية",
 	"chinese": "الصينية",
 	"japanese": "اليابانية",
-	"languageSuccess": "تم تحديث اللغة بنجاح، الرجاء إعادة تشغيل التطبيق",
+	"languageSuccess": "تم تحديث اللغة بنجاح",
 	"agreeWithPrivacy": "شروط وأحكام الخصوصية",
 	"PrivacyAndTerm": "شروط وأحكام الخصوصية",
 	"iAgree": "أنا موافق على ",
@@ -268,11 +268,11 @@
 	"phone": "رقم الهاتف",
 	"phoneNumberVerification": "رمز تأكيد رقم الهاتف",
 	"enterSendedCode": "الرجاء إدخال الرمز المرسل إلى",
-	"pleasefillUpAllCellsProperly":  "الرجاء تعبئة جميع الحقول بشكل صحيح",
+	"pleasefillUpAllCellsProperly": "الرجاء تعبئة جميع الحقول بشكل صحيح",
 	"didntReceiveCode": "لم يصلك رمز التحقق!",
 	"resend": "إعادة الإرسال",
 	"pleaseInputFillAllFields": "الرجاء تعبئة جميع الحقول بشكل صحيح",
-	"pleaseAgreeTerms":  "الرجاء الموافقة على الشروط الخاصة بنا",
+	"pleaseAgreeTerms": "الرجاء الموافقة على الشروط الخاصة بنا",
 	"url": "الرابط",
 	"nearbyPlaces": "الأماكن القريبة",
 	"noResultFound": "لم يتم العثور على نتائج",
@@ -426,8 +426,8 @@
 	"fileUploadFailed": "فشل تحميل الملف!",
 	"files": "الملفات",
 	"gallery": "معرض الصور",
-	"reviewPendingApproval":  "تم إرسال التعليق الخاصة بك، في إنتظار الموافقة عليه",
-	"reviewSent":  "تم إرسال التعليق الخاصة بك",
+	"reviewPendingApproval": "تم إرسال التعليق الخاصة بك، في إنتظار الموافقة عليه",
+	"reviewSent": "تم إرسال التعليق الخاصة بك",
 	"selectFileCancelled": "تم إلغاء تحديد الملف!",
 	"send": "إرسال",
 	"thisFeatureDoesNotSupportTheCurrentLanguage": "هذه الميزة لا تدعم اللغة الحالية",
@@ -538,7 +538,7 @@
 	"addNewBlog": "أضف مدونة جديدة",
 	"addNewPost": "إنشاء منشور جديد",
 	"audioDetected": "تم الكشف عن عنصر/عناصر صوتية، هل تريد إضافتها لمشغل الصوت؟",
-	"commentSuccessfully":  "تم إضافة التعليق بنجاح، الرجاء الإنتظار فيما يتم الموافقة عليه",
+	"commentSuccessfully": "تم إضافة التعليق بنجاح، الرجاء الإنتظار فيما يتم الموافقة عليه",
 	"content": "المحتوى",
 	"createNewPostSuccessfully": "تم حفظ المنشور الخاص بك بنجاح كمسودة. بإمكانك إلقاء نظرة على موقع المسؤول الخاص بك",
 	"createPost": "إنشاء منشور",
@@ -787,7 +787,7 @@
 	"allow": "السماح",
 	"areYouSureDeleteAccount": "هل أنت متأكد من حذف حسابك؟",
 	"bySignup": "بالتسجيل ، فإنك توافق على",
-    "confirmAccountDeletion": "تأكيد حذف الحساب",
+	"confirmAccountDeletion": "تأكيد حذف الحساب",
 	"decline": "رفض",
 	"deleteAccount": "حذف الحساب",
 	"deleteAccountMsg": "هل انت متأكد انك تريد حذف حسابك؟ يرجى قراءة كيف سيؤثر حذف الحساب.",
@@ -797,10 +797,12 @@
 	"enterCaptcha": "أدخل {captcha} للتأكيد:",
 	"needToLoginAgain": "تحتاج إلى تسجيل الدخول مرة أخرى لتفعيل التحديث",
 	"notice": "تنويه",
-    "notifyLatestOffer": "أبلغني عن أحدث العروض وتوافر المنتجات",
+	"notifyLatestOffer": "أبلغني عن أحدث العروض وتوافر المنتجات",
 	"weWillSendYouNotification": "سنرسل إليك إشعارات عند توفر منتجات جديدة أو عند توفر العروض. يمكنك دائمًا تغيير هذا الإعداد في الإعدادات.",
 	"failToAssign": "فشل تعيين المستخدم",
 	"goBack": "عد",
-	"privacyTerms": "",
-	"pleaseAllowAccessCameraGallery": "يرجى السماح بالوصول إلى الكاميرا والمعرض"
+	"privacyTerms": "الخصوصية والبنود",
+	"pleaseAllowAccessCameraGallery": "يرجى السماح بالوصول إلى الكاميرا والمعرض",
+	"results": "النتائج",
+	"danish": "دانماركي"
 }
diff --git a/lib/l10n/intl_bn.arb b/lib/l10n/intl_bn.arb
index 304e212..43f6142 100644
--- a/lib/l10n/intl_bn.arb
+++ b/lib/l10n/intl_bn.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "ব্যবহারকারীকে বরাদ্দ করতে ব্যর্থ হয়েছে৷",
 	"pleaseAllowAccessCameraGallery": "ক্যামেরা এবং গ্যালারিতে অ্যাক্সেসের অনুমতি দিন",
 	"goBack": "ফিরে যাও",
-	"privacyTerms": ""
+	"privacyTerms": "গোপনীয়তা এবং শর্তাদি",
+	"results": "ফলাফল",
+	"danish": "ডেনমার্কের"
 }
diff --git a/lib/l10n/intl_cs.arb b/lib/l10n/intl_cs.arb
index 01a45c3..e23596d 100644
--- a/lib/l10n/intl_cs.arb
+++ b/lib/l10n/intl_cs.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Přiřazení uživatele se nezdařilo",
 	"pleaseAllowAccessCameraGallery": "Povolte prosím přístup k fotoaparátu a galerii",
 	"goBack": "Vraťte se",
-	"privacyTerms": ""
+	"privacyTerms": "Ochrana osobních údajů a podmínky",
+	"results": "Výsledek",
+	"danish": "dánský"
 }
diff --git a/lib/l10n/intl_da.arb b/lib/l10n/intl_da.arb
index c85acdf..10da77f 100644
--- a/lib/l10n/intl_da.arb
+++ b/lib/l10n/intl_da.arb
@@ -802,5 +802,7 @@
 	"zipCode": "postnummer",
 	"zipCodeIsRequired": "Postnummerfeltet er påkrævet",
 	"goBack": "Gå tilbage",
-	"privacyTerms": ""
+	"privacyTerms": "Fortrolighed og vilkår",
+	"results": "resultater",
+	"danish": "dansk"
 }
diff --git a/lib/l10n/intl_de.arb b/lib/l10n/intl_de.arb
index 2718299..31215c1 100644
--- a/lib/l10n/intl_de.arb
+++ b/lib/l10n/intl_de.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Benutzer konnte nicht zugewiesen werden",
 	"pleaseAllowAccessCameraGallery": "Bitte erlauben Sie den Zugriff auf die Kamera und die Galerie",
 	"goBack": "Geh zurück",
-	"privacyTerms": ""
+	"privacyTerms": "Datenschutz",
+	"results": "Ergebnisse",
+	"danish": "dänisch"
 }
diff --git a/lib/l10n/intl_el.arb b/lib/l10n/intl_el.arb
index f271966..b693d2d 100644
--- a/lib/l10n/intl_el.arb
+++ b/lib/l10n/intl_el.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Αποτυχία εκχώρησης χρήστη",
 	"pleaseAllowAccessCameraGallery": "Επιτρέψτε την πρόσβαση στην κάμερα και τη συλλογή",
 	"goBack": "Πήγαινε πίσω",
-	"privacyTerms": ""
+	"privacyTerms": "Απόρρητο και Όροι",
+	"results": "αποτελέσματα",
+	"danish": "δανικός"
 }
diff --git a/lib/l10n/intl_en.arb b/lib/l10n/intl_en.arb
index fc89a8b..ec81e10 100644
--- a/lib/l10n/intl_en.arb
+++ b/lib/l10n/intl_en.arb
@@ -176,7 +176,7 @@
 	"spanish": "Spanish",
 	"chinese": "Chinese",
 	"japanese": "Japanese",
-	"languageSuccess": "The Language is updated successfully, please restart the APP",
+	"languageSuccess": "The Language is updated successfully",
 	"agreeWithPrivacy": "Privacy and Term",
 	"PrivacyAndTerm": "Privacy and Term",
 	"iAgree": "I agree with",
@@ -802,5 +802,7 @@
 	"pleaseAllowAccessCameraGallery": "Please allow access to the camera and gallery",
 	"failToAssign": "Failed to assign User",
 	"goBack": "Go back",
-	"privacyTerms": ""
+	"privacyTerms": "Privacy & Terms",
+	"results": "Results",
+	"danish": "Danish"
 }
diff --git a/lib/l10n/intl_es.arb b/lib/l10n/intl_es.arb
index 47ab758..8a37e74 100644
--- a/lib/l10n/intl_es.arb
+++ b/lib/l10n/intl_es.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "No se pudo asignar el usuario",
 	"pleaseAllowAccessCameraGallery": "Permita el acceso a la cámara y la galería.",
 	"goBack": "Regresa",
-	"privacyTerms": ""
+	"privacyTerms": "Términos y privacidad",
+	"results": "Resultados",
+	"danish": "danés"
 }
diff --git a/lib/l10n/intl_fa.arb b/lib/l10n/intl_fa.arb
index 55e1187..97cd734 100644
--- a/lib/l10n/intl_fa.arb
+++ b/lib/l10n/intl_fa.arb
@@ -802,5 +802,7 @@
 	"weWillSendYouNotification": "هنگامی که محصولات جدید در دسترس هستند یا پیشنهادات در دسترس هستند، اعلان هایی را برای شما ارسال می کنیم. همیشه می توانید این تنظیم را در تنظیمات تغییر دهید.",
 	"failToAssign": "تخصیص کاربر ناموفق بود",
 	"pleaseAllowAccessCameraGallery": "لطفاً اجازه دسترسی به دوربین و گالری را بدهید",
-	"goBack": "برگرد"
+	"goBack": "برگرد",
+	"results": "نتایج",
+	"danish": "دانمارکی"
 }
diff --git a/lib/l10n/intl_fi.arb b/lib/l10n/intl_fi.arb
index e7953d8..c16fcee 100644
--- a/lib/l10n/intl_fi.arb
+++ b/lib/l10n/intl_fi.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Käyttäjän määrittäminen epäonnistui",
 	"pleaseAllowAccessCameraGallery": "Salli pääsy kameraan ja galleriaan",
 	"goBack": "Mene takaisin",
-	"privacyTerms": ""
+	"privacyTerms": "YKSITYISYYS JA KÄYTTÖEHDOT",
+	"results": "tulokset",
+	"danish": "Tanskan kieli"
 }
diff --git a/lib/l10n/intl_fr.arb b/lib/l10n/intl_fr.arb
index f45e1da..af49050 100644
--- a/lib/l10n/intl_fr.arb
+++ b/lib/l10n/intl_fr.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Échec de l'attribution de l'utilisateur",
 	"pleaseAllowAccessCameraGallery": "Veuillez autoriser l'accès à la caméra et à la galerie",
 	"goBack": "Retourner",
-	"privacyTerms": ""
+	"privacyTerms": "Confidentialité et modalités",
+	"results": "Résultats",
+	"danish": "danois"
 }
diff --git a/lib/l10n/intl_he.arb b/lib/l10n/intl_he.arb
index a8510e4..fc05b49 100644
--- a/lib/l10n/intl_he.arb
+++ b/lib/l10n/intl_he.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "הקצאת משתמש נכשלה",
 	"pleaseAllowAccessCameraGallery": "נא לאפשר גישה למצלמה ולגלריה",
 	"goBack": "תחזור",
-	"privacyTerms": ""
+	"privacyTerms": "פרטיות ותנאים",
+	"results": "תוצאות",
+	"danish": "דנית"
 }
diff --git a/lib/l10n/intl_hi.arb b/lib/l10n/intl_hi.arb
index 3ba221b..0d68a70 100644
--- a/lib/l10n/intl_hi.arb
+++ b/lib/l10n/intl_hi.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "उपयोगकर्ता असाइन करने में विफल",
 	"pleaseAllowAccessCameraGallery": "कृपया कैमरा और गैलरी तक पहुंच की अनुमति दें",
 	"goBack": "वापस जाओ",
-	"privacyTerms": ""
+	"privacyTerms": "गोपनीयता व शर्तें",
+	"results": "परिणाम",
+	"danish": "दानिश"
 }
diff --git a/lib/l10n/intl_hu.arb b/lib/l10n/intl_hu.arb
index ab72bbf..e04d6b8 100644
--- a/lib/l10n/intl_hu.arb
+++ b/lib/l10n/intl_hu.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Nem sikerült a felhasználó hozzárendelése",
 	"pleaseAllowAccessCameraGallery": "Kérjük, engedélyezze a hozzáférést a kamerához és a galériához",
 	"goBack": "Menjen vissza",
-	"privacyTerms": ""
+	"privacyTerms": "Adatvédelem és feltételek",
+	"results": "Eredmények",
+	"danish": "dán"
 }
diff --git a/lib/l10n/intl_id.arb b/lib/l10n/intl_id.arb
index 0c4cc19..2b514f2 100644
--- a/lib/l10n/intl_id.arb
+++ b/lib/l10n/intl_id.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Gagal menetapkan Pengguna",
 	"pleaseAllowAccessCameraGallery": "Mohon izinkan akses ke kamera dan galeri",
 	"goBack": "Kembali",
-	"privacyTerms": ""
+	"privacyTerms": "Privasi & Ketentuan",
+	"results": "Hasil",
+	"danish": "Orang Denmark"
 }
diff --git a/lib/l10n/intl_it.arb b/lib/l10n/intl_it.arb
index 45da469..29c8031 100644
--- a/lib/l10n/intl_it.arb
+++ b/lib/l10n/intl_it.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Impossibile assegnare l'utente",
 	"pleaseAllowAccessCameraGallery": "Si prega di consentire l'accesso alla fotocamera e alla galleria",
 	"goBack": "Torna Indietro",
-	"privacyTerms": ""
+	"privacyTerms": "Termini e Condizioni",
+	"results": "risultati",
+	"danish": "danese"
 }
diff --git a/lib/l10n/intl_ja.arb b/lib/l10n/intl_ja.arb
index 4a4d014..750e8e4 100644
--- a/lib/l10n/intl_ja.arb
+++ b/lib/l10n/intl_ja.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "ユーザーの割り当てに失敗しました",
 	"pleaseAllowAccessCameraGallery": "カメラとギャラリーへのアクセスを許可してください",
 	"goBack": "戻る",
-	"privacyTerms": ""
+	"privacyTerms": "プライバシーと利用規約",
+	"results": "結果",
+	"danish": "デンマーク語"
 }
diff --git a/lib/l10n/intl_km.arb b/lib/l10n/intl_km.arb
index b83a55a..a506261 100644
--- a/lib/l10n/intl_km.arb
+++ b/lib/l10n/intl_km.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "បរាជ័យក្នុងការកំណត់អ្នកប្រើប្រាស់",
 	"pleaseAllowAccessCameraGallery": "សូមអនុញ្ញាតឱ្យចូលប្រើកាមេរ៉ា និងវិចិត្រសាល",
 	"goBack": "ត្រឡប់​ក្រោយ",
-	"privacyTerms": ""
+	"privacyTerms": "ឯកជនភាព & លក្ខខណ្ឌ",
+	"results": "លទ្ធផល",
+	"danish": "ដាណឺម៉ាក"
 }
diff --git a/lib/l10n/intl_ko.arb b/lib/l10n/intl_ko.arb
index f913c11..889c610 100644
--- a/lib/l10n/intl_ko.arb
+++ b/lib/l10n/intl_ko.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "사용자를 할당하지 못했습니다.",
 	"pleaseAllowAccessCameraGallery": "카메라 및 갤러리에 대한 액세스를 허용하십시오.",
 	"goBack": "돌아가",
-	"privacyTerms": ""
+	"privacyTerms": "개인정보 및 약관",
+	"results": "결과",
+	"danish": "덴마크 말"
 }
diff --git a/lib/l10n/intl_lo.arb b/lib/l10n/intl_lo.arb
index 2c5247f..f2f75d4 100644
--- a/lib/l10n/intl_lo.arb
+++ b/lib/l10n/intl_lo.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "ລົ້ມເຫລວໃນການມອບໝາຍຜູ້ໃຊ້",
 	"pleaseAllowAccessCameraGallery": "ກະລຸນາອະນຸຍາດໃຫ້ເຂົ້າເຖິງກ້ອງຖ່າຍຮູບ ແລະຄັງຮູບພາບ",
 	"goBack": "ກັບ​ຄືນ",
-	"privacyTerms": ""
+	"privacyTerms": "ຄວາມເປັນສ່ວນຕົວ & ເງື່ອນໄຂ",
+	"results": "ຜົນໄດ້ຮັບ",
+	"danish": "ເດນມາກ"
 }
diff --git a/lib/l10n/intl_ms.arb b/lib/l10n/intl_ms.arb
index 85b71d9..63729f1 100644
--- a/lib/l10n/intl_ms.arb
+++ b/lib/l10n/intl_ms.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Gagal menetapkan Pengguna",
 	"pleaseAllowAccessCameraGallery": "Sila benarkan akses kepada kamera dan galeri",
 	"goBack": "PERGI BALIK",
-	"privacyTerms": ""
+	"privacyTerms": "Privasi & Syarat",
+	"results": "Keputusan",
+	"danish": "Denmark"
 }
diff --git a/lib/l10n/intl_my.arb b/lib/l10n/intl_my.arb
index 08b4e37..88d7071 100644
--- a/lib/l10n/intl_my.arb
+++ b/lib/l10n/intl_my.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "အသုံးပြုသူကို သတ်မှတ်ပေးရန် မအောင်မြင်ပါ။",
 	"pleaseAllowAccessCameraGallery": "ကျေးဇူးပြု၍ ကင်မရာနှင့် ပြခန်းသို့ ဝင်ရောက်ခွင့်ပေးပါ။",
 	"goBack": "ပြန်သွားသည်",
-	"privacyTerms": ""
+	"privacyTerms": "ကိုယ်ရေးကိုယ်တာနှင့် စည်းမျဥ်းစည်းကမ်းများ",
+	"results": "ရလဒ်များ",
+	"danish": "ဒိန်းမတ်"
 }
diff --git a/lib/l10n/intl_nl.arb b/lib/l10n/intl_nl.arb
index 9475697..8ee3024 100644
--- a/lib/l10n/intl_nl.arb
+++ b/lib/l10n/intl_nl.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Kan gebruiker niet toewijzen",
 	"pleaseAllowAccessCameraGallery": "Geef toegang tot de camera en galerij",
 	"goBack": "Ga terug",
-	"privacyTerms": ""
+	"privacyTerms": "Privacy en voorwaarden",
+	"results": "uitslagen",
+	"danish": "Deens"
 }
diff --git a/lib/l10n/intl_pl.arb b/lib/l10n/intl_pl.arb
index caf124b..82ec0cd 100644
--- a/lib/l10n/intl_pl.arb
+++ b/lib/l10n/intl_pl.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Nie udało się przypisać użytkownika",
 	"pleaseAllowAccessCameraGallery": "Zezwól na dostęp do aparatu i galerii",
 	"goBack": "Wróć",
-	"privacyTerms": ""
+	"privacyTerms": "prywatność i warunki",
+	"results": "wyniki",
+	"danish": "duński"
 }
diff --git a/lib/l10n/intl_pt.arb b/lib/l10n/intl_pt.arb
index 664a665..64bed35 100644
--- a/lib/l10n/intl_pt.arb
+++ b/lib/l10n/intl_pt.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Falha ao atribuir usuário",
 	"pleaseAllowAccessCameraGallery": "Por favor, permita o acesso à câmera e à galeria",
 	"goBack": "Volte",
-	"privacyTerms": ""
+	"privacyTerms": "Privacidade e Termos",
+	"results": "resultados",
+	"danish": "dinamarquês"
 }
diff --git a/lib/l10n/intl_ro.arb b/lib/l10n/intl_ro.arb
index fab3b29..a77e450 100644
--- a/lib/l10n/intl_ro.arb
+++ b/lib/l10n/intl_ro.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Nu s-a putut atribui utilizatorul",
 	"pleaseAllowAccessCameraGallery": "Vă rugăm să permiteți accesul la cameră și galerie",
 	"goBack": "Întoarce-te",
-	"privacyTerms": ""
+	"privacyTerms": "Termeni și Condiții",
+	"results": "rezultate",
+	"danish": "danez"
 }
diff --git a/lib/l10n/intl_ru.arb b/lib/l10n/intl_ru.arb
index 4e05ed1..51f929c 100644
--- a/lib/l10n/intl_ru.arb
+++ b/lib/l10n/intl_ru.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Не удалось назначить пользователя",
 	"pleaseAllowAccessCameraGallery": "Пожалуйста, разрешите доступ к камере и галерее",
 	"goBack": "Вернитесь",
-	"privacyTerms": ""
+	"privacyTerms": "Защита & Условия",
+	"results": "результаты",
+	"danish": "датский"
 }
diff --git a/lib/l10n/intl_sk.arb b/lib/l10n/intl_sk.arb
index 005e27a..f02a126 100644
--- a/lib/l10n/intl_sk.arb
+++ b/lib/l10n/intl_sk.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Používateľa sa nepodarilo priradiť",
 	"pleaseAllowAccessCameraGallery": "Povoľte prístup k fotoaparátu a galérii",
 	"goBack": "Vráť sa",
-	"privacyTerms": ""
+	"privacyTerms": "Ochrana osobných údajov a podmienky",
+	"results": "Výsledky",
+	"danish": "dánsky"
 }
diff --git a/lib/l10n/intl_sq.arb b/lib/l10n/intl_sq.arb
index eacaedf..3a2f50f 100644
--- a/lib/l10n/intl_sq.arb
+++ b/lib/l10n/intl_sq.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Caktimi i Përdoruesit dështoi",
 	"pleaseAllowAccessCameraGallery": "Lejo qasjen te kamera dhe galeria",
 	"goBack": "Kthehu mbrapa",
-	"privacyTerms": ""
+	"privacyTerms": "Privatësia dhe Kushtet",
+	"results": "Rezultatet",
+	"danish": "danez"
 }
diff --git a/lib/l10n/intl_sr.arb b/lib/l10n/intl_sr.arb
index af05b9f..5139511 100644
--- a/lib/l10n/intl_sr.arb
+++ b/lib/l10n/intl_sr.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Dodjeljivanje korisnika nije uspjelo",
 	"pleaseAllowAccessCameraGallery": "Dozvolite pristup kameri i galeriji",
 	"goBack": "Vrati se",
-	"privacyTerms": ""
+	"privacyTerms": "Privatnost & Uslovi",
+	"results": "Rezultati",
+	"danish": "Danski"
 }
diff --git a/lib/l10n/intl_sv.arb b/lib/l10n/intl_sv.arb
index d2f7fbb..8885b29 100644
--- a/lib/l10n/intl_sv.arb
+++ b/lib/l10n/intl_sv.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Det gick inte att tilldela användare",
 	"pleaseAllowAccessCameraGallery": "Tillåt åtkomst till kameran och galleriet",
 	"goBack": "Gå tillbaka",
-	"privacyTerms": ""
+	"privacyTerms": "SEKRETESS OCH VILLKOR",
+	"results": "Resultat",
+	"danish": "danska"
 }
diff --git a/lib/l10n/intl_sw.arb b/lib/l10n/intl_sw.arb
index 8dfc32d..7bb49ed 100644
--- a/lib/l10n/intl_sw.arb
+++ b/lib/l10n/intl_sw.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Imeshindwa kukabidhi Mtumiaji",
 	"pleaseAllowAccessCameraGallery": "Tafadhali ruhusu ufikiaji wa kamera na ghala",
 	"goBack": "Rudi nyuma",
-	"privacyTerms": ""
+	"privacyTerms": "Faragha na Masharti",
+	"results": "Matokeo",
+	"danish": "Kidenmaki"
 }
diff --git a/lib/l10n/intl_ta.arb b/lib/l10n/intl_ta.arb
index b48899c..53aac35 100644
--- a/lib/l10n/intl_ta.arb
+++ b/lib/l10n/intl_ta.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "பயனரை ஒதுக்க முடியவில்லை",
 	"pleaseAllowAccessCameraGallery": "கேமரா மற்றும் கேலரியை அணுக அனுமதிக்கவும்",
 	"goBack": "திரும்பிச் செல்லுங்கள்",
-	"privacyTerms": ""
+	"privacyTerms": "தனியுரிமை & விதிமுறைகள்",
+	"results": "முடிவுகள்",
+	"danish": "டேனிஷ்"
 }
diff --git a/lib/l10n/intl_th.arb b/lib/l10n/intl_th.arb
index 4e2c71a..9a5ed8e 100644
--- a/lib/l10n/intl_th.arb
+++ b/lib/l10n/intl_th.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "ไม่สามารถมอบหมาย User",
 	"pleaseAllowAccessCameraGallery": "โปรดอนุญาตให้เข้าถึงกล้องและแกลเลอรี่",
 	"goBack": "กลับไป",
-	"privacyTerms": ""
+	"privacyTerms": "ความเป็นส่วนตัวและข้อตกลง",
+	"results": "ผล",
+	"danish": "เดนมาร์ก"
 }
diff --git a/lib/l10n/intl_tr.arb b/lib/l10n/intl_tr.arb
index 0bd0322..f85c4d6 100644
--- a/lib/l10n/intl_tr.arb
+++ b/lib/l10n/intl_tr.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Kullanıcı atanamadı",
 	"pleaseAllowAccessCameraGallery": "Lütfen kameraya ve galeriye erişime izin verin",
 	"goBack": "Geri Dön",
-	"privacyTerms": ""
+	"privacyTerms": "Gizlilik ve Şartlar",
+	"results": "Sonuçlar",
+	"danish": "Danimarkalı"
 }
diff --git a/lib/l10n/intl_uk.arb b/lib/l10n/intl_uk.arb
index b9fd6b7..aef16ac 100644
--- a/lib/l10n/intl_uk.arb
+++ b/lib/l10n/intl_uk.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Не вдалося призначити користувача",
 	"pleaseAllowAccessCameraGallery": "Будь ласка, надайте доступ до камери та галереї",
 	"goBack": "Повертайся",
-	"privacyTerms": ""
+	"privacyTerms": "Конфіденційність та умови",
+	"results": "результати",
+	"danish": "Датська"
 }
diff --git a/lib/l10n/intl_uz.arb b/lib/l10n/intl_uz.arb
index 7286f66..0a317f2 100644
--- a/lib/l10n/intl_uz.arb
+++ b/lib/l10n/intl_uz.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Foydalanuvchini tayinlab bo‘lmadi",
 	"pleaseAllowAccessCameraGallery": "Kamera va galereyaga kirishga ruxsat bering",
 	"goBack": "Ortga qaytish",
-	"privacyTerms": ""
+	"privacyTerms": "Maxfiylik va Shartlar",
+	"results": "natijalar",
+	"danish": "Daniya"
 }
diff --git a/lib/l10n/intl_vi.arb b/lib/l10n/intl_vi.arb
index 78c19c8..7fd925d 100644
--- a/lib/l10n/intl_vi.arb
+++ b/lib/l10n/intl_vi.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "Không chỉ định được người dùng",
 	"pleaseAllowAccessCameraGallery": "Vui lòng cho phép truy cập vào máy ảnh và thư viện",
 	"goBack": "Quay lại",
-	"privacyTerms": ""
+	"privacyTerms": "Quyền riêng tư & Điều khoản",
+	"results": "các kết quả",
+	"danish": "người Đan Mạch"
 }
diff --git a/lib/l10n/intl_zh.arb b/lib/l10n/intl_zh.arb
index e5360a5..04ae9e6 100644
--- a/lib/l10n/intl_zh.arb
+++ b/lib/l10n/intl_zh.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "分配用户失败",
 	"pleaseAllowAccessCameraGallery": "请允许访问相机和图库",
 	"goBack": "回去",
-	"privacyTerms": ""
+	"privacyTerms": "隐私权与条款",
+	"results": "结果",
+	"danish": "丹麦"
 }
diff --git a/lib/l10n/intl_zh_CN.arb b/lib/l10n/intl_zh_CN.arb
index 4c88cbe..8b05540 100644
--- a/lib/l10n/intl_zh_CN.arb
+++ b/lib/l10n/intl_zh_CN.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "分配用户失败",
 	"pleaseAllowAccessCameraGallery": "请允许访问相机和图库",
 	"goBack": "回去",
-	"privacyTerms": ""
+	"privacyTerms": "隐私权与条款",
+	"results": "结果",
+	"danish": "丹麦"
 }
diff --git a/lib/l10n/intl_zh_TW.arb b/lib/l10n/intl_zh_TW.arb
index 74d7a93..2c2a55f 100644
--- a/lib/l10n/intl_zh_TW.arb
+++ b/lib/l10n/intl_zh_TW.arb
@@ -802,5 +802,7 @@
 	"failToAssign": "分配用戶失敗",
 	"pleaseAllowAccessCameraGallery": "請允許訪問相機和圖庫",
 	"goBack": "回去",
-	"privacyTerms": ""
+	"privacyTerms": "隱私權與條款",
+	"results": "結果",
+	"danish": "丹麥"
 }
diff --git a/lib/models/order/order.dart b/lib/models/order/order.dart
index 47e579b..f064b1a 100644
--- a/lib/models/order/order.dart
+++ b/lib/models/order/order.dart
@@ -611,12 +611,12 @@ class Order {
         cartModel.productsMetaDataInCart[key].forEach((k, v) {
           if (!attrNames.contains(k)) {
             for (var element in product!.attributes!) {
-              if (element.name == k) {
+              if (element.name?.toLowerCase() == k.toString().toLowerCase()) {
                 Map<String, dynamic>? option = element.options!
                     .firstWhere((e) => e['name'] == v, orElse: () => null);
                 if (option != null) {
                   metaData.add({
-                    'key': 'attribute_${element.slug}',
+                    'key': 'attribute_${element.slug ?? option['taxonomy'] ?? element.name}',
                     'value': option['slug'] ?? option['name']
                   });
                 }
diff --git a/lib/models/product_model.dart b/lib/models/product_model.dart
index 7cda542..75e9fa8 100644
--- a/lib/models/product_model.dart
+++ b/lib/models/product_model.dart
@@ -2,6 +2,7 @@ import 'dart:async';
 import 'dart:convert';
 import 'dart:io' show File;
 
+import 'package:async/async.dart';
 import 'package:collection/collection.dart';
 import 'package:flutter/material.dart';
 import 'package:localstorage/localstorage.dart';
@@ -35,6 +36,8 @@ class ProductModel with ChangeNotifier {
   String? errMsg;
   bool? isEnd;
 
+  List<Product>? recentSearch;
+
   List<ProductVariation> variations = [];
   List<String> variationsFeatureImages = [];
   ProductVariation? selectedVariation;
@@ -45,6 +48,8 @@ class ProductModel with ChangeNotifier {
 
   bool get isLoading => _isLoading;
 
+  CancelableOperation? _cancelLoadProduct;
+
   void clearProductVariations() {
     variations.clear();
     variationsFeatureImages = [];
@@ -163,6 +168,12 @@ class ProductModel with ChangeNotifier {
       List? include,
       String? search}) async {
     try {
+      if (isFetching) {
+        await _cancelLoadProduct?.cancel();
+      }
+
+      isFetching = true;
+
       if (categoryId != null) {
         this.categoryId = categoryId;
       }
@@ -172,7 +183,6 @@ class ProductModel with ChangeNotifier {
       if (listingLocation != null) {
         listingLocationId = listingLocation;
       }
-      isFetching = true;
       isEnd = false;
       notifyListeners();
       String? cursor;
@@ -184,7 +194,8 @@ class ProductModel with ChangeNotifier {
         }
       }
 
-      final products = await _service.api.fetchProductsByCategory(
+      _cancelLoadProduct =
+          CancelableOperation.fromFuture(_service.api.fetchProductsByCategory(
         categoryId: categoryId,
         tagId: tagId,
         minPrice: minPrice,
@@ -202,7 +213,9 @@ class ProductModel with ChangeNotifier {
         nextCursor: cursor,
         include: include?.join(','),
         search: search,
-      );
+      ));
+
+      final products = await _cancelLoadProduct!.value;
 
       isEnd = products!.isEmpty || products.length < apiPageSize;
 
@@ -212,6 +225,10 @@ class ProductModel with ChangeNotifier {
         productsList = [...productsList!, ...products];
       }
 
+      if (search?.isNotEmpty ?? false) {
+        recentSearch = productsList;
+      }
+
       isFetching = false;
       errMsg = null;
 
@@ -227,8 +244,10 @@ class ProductModel with ChangeNotifier {
   }
 
   void setProductsList(List<Product> products, {bool notify = true}) {
+    if (products.isNotEmpty) {
+      isFetching = false;
+    }
     productsList = products;
-    isFetching = false;
     isEnd = false;
     if (notify) notifyListeners();
   }
@@ -326,11 +345,13 @@ class ProductModel with ChangeNotifier {
     var list = <Product>[];
     if (response != null) {
       var products = [];
+
       /// sort include product
       var include = config['include'];
       if (include != null && include is List) {
-        for(var productID in include) {
-          var item = (response as List).firstWhereOrNull((element) => element['id'].toString() == productID.toString());
+        for (var productID in include) {
+          var item = (response as List).firstWhereOrNull(
+              (element) => element['id'].toString() == productID.toString());
           if (item != null) {
             products.add(item);
           }
diff --git a/lib/modules/dynamic_layout/dynamic_layout.dart b/lib/modules/dynamic_layout/dynamic_layout.dart
index 09b3a3a..3262f0b 100644
--- a/lib/modules/dynamic_layout/dynamic_layout.dart
+++ b/lib/modules/dynamic_layout/dynamic_layout.dart
@@ -22,6 +22,7 @@ import 'config/index.dart';
 import 'divider/divider.dart';
 import 'header/header_search.dart';
 import 'header/header_text.dart';
+import 'helper/helper.dart';
 import 'instagram_story/instagram_story.dart';
 import 'logo/logo.dart';
 import 'product/product_list_simple.dart';
@@ -44,7 +45,7 @@ class DynamicLayout extends StatelessWidget {
     final appModel = Provider.of<AppModel>(context, listen: true);
 
     switch (config['layout']) {
-      case 'logo':
+      case Layout.logo:
         final themeConfig = appModel.themeConfig;
         return Logo(
           config: LogoConfig.fromJson(config),
@@ -65,12 +66,12 @@ class DynamicLayout extends StatelessWidget {
           onTapDrawerMenu: () => NavigateTools.onTapOpenDrawerMenu(context),
         );
 
-      case 'header_text':
+      case Layout.headerText:
         return HeaderText(
           config: HeaderConfig.fromJson(config),
         );
 
-      case 'header_search':
+      case Layout.headerSearch:
         return HeaderSearch(
           config: HeaderConfig.fromJson(config),
           onSearch: () {
@@ -80,9 +81,9 @@ class DynamicLayout extends StatelessWidget {
             );
           },
         );
-      case 'featuredVendors':
+      case Layout.featuredVendors:
         return Services().widget.renderFeatureVendor(config);
-      case 'category':
+      case Layout.category:
         if (config['type'] == 'image') {
           return CategoryImages(
             config: CategoryConfig.fromJson(config),
@@ -127,11 +128,11 @@ class DynamicLayout extends StatelessWidget {
             );
           },
         );
-      case 'bannerAnimated':
+      case Layout.bannerAnimated:
         if (kIsWeb) return const SizedBox();
         return BannerAnimated(config: BannerConfig.fromJson(config));
 
-      case 'bannerImage':
+      case Layout.bannerImage:
         if (config['isSlider'] == true) {
           return BannerSlider(
             config: BannerConfig.fromJson(config),
@@ -166,72 +167,74 @@ class DynamicLayout extends StatelessWidget {
           },
         );
 
-      case 'blog':
+      case Layout.blog:
         return BlogGrid(config: BlogConfig.fromJson(config));
 
-      case 'video':
+      case Layout.video:
         return VideoLayout(config: config);
 
-      case 'story':
+      case Layout.story:
         return StoryWidget(
           config: config,
         );
-      case 'recentView':
+
+      /// Product Layout styles
+      case Layout.recentView:
         if (Config().isBuilder) {
           return ProductRecentPlaceholder();
         }
         return Services().widget.renderHorizontalListItem(config);
-      case 'fourColumn':
-      case 'threeColumn':
-      case 'twoColumn':
-      case 'staggered':
-      case 'saleOff':
-      case 'card':
-      case 'listTile':
+      case Layout.fourColumn:
+      case Layout.threeColumn:
+      case Layout.twoColumn:
+      case Layout.staggered:
+      case Layout.saleOff:
+      case Layout.card:
+      case Layout.listTile:
         return Services()
             .widget
             .renderHorizontalListItem(config, cleanCache: cleanCache);
 
       /// New product layout style.
-      case 'largeCardHorizontalListItems':
-      case 'largeCard':
+      case Layout.largeCardHorizontalListItems:
+      case Layout.largeCard:
         return Services().widget.renderLargeCardHorizontalListItems(config);
-      case 'simpleVerticalListItems':
-      case 'simpleList':
+      case Layout.simpleVerticalListItems:
+      case Layout.simpleList:
         return SimpleVerticalProductList(
           config: ProductConfig.fromJson(config),
         );
 
-      case 'brand':
+      case Layout.brand:
         return BrandLayout(
           config: BrandConfig.fromJson(config),
         );
 
       /// FluxNews
-      case 'sliderList':
+      case Layout.sliderList:
         return Services().widget.renderSliderList(config);
-      case 'sliderItem':
+      case Layout.sliderItem:
         return Services().widget.renderSliderItem(config);
 
-      case 'geoSearch':
+      case Layout.geoSearch:
         return Services().widget.renderGeoSearch(config);
-      case 'divider':
+      case Layout.divider:
         return DividerLayout(config: DividerConfig.fromJson(config));
-      case 'spacer':
+      case Layout.spacer:
         return SpacerLayout(config: SpacerConfig.fromJson(config));
-      case 'button':
+      case Layout.button:
         return ButtonLayout(config: ButtonConfig.fromJson(config));
-      case 'testimonial':
+      case Layout.testimonial:
         return TestimonialLayout(config: TestimonialConfig.fromJson(config));
-      case 'sliderTestimonial':
+      case Layout.sliderTestimonial:
         return SliderTestimonial(
           config: SliderTestimonialConfig.fromJson(config),
         );
-      case 'instagramStory':
+      case Layout.instagramStory:
         return InstagramStory(
           config: InstagramStoryConfig.fromJson(config),
         );
-      case 'tiktokVideos':
+      case Layout.tiktokVideos:
         if (Config().isBuilder || !isMobile) {
           return TikTokVideosPlaceholder();
         }
diff --git a/lib/modules/dynamic_layout/helper/helper.dart b/lib/modules/dynamic_layout/helper/helper.dart
index 73e693e..4ecfecf 100644
--- a/lib/modules/dynamic_layout/helper/helper.dart
+++ b/lib/modules/dynamic_layout/helper/helper.dart
@@ -8,6 +8,7 @@ import '../../../common/constants.dart';
 import '../../../services/service_config.dart';
 
 class Layout {
+  /// Product or Blog Layout styles
   static const String columns = 'columns';
   static const String twoColumn = 'twoColumn';
   static const String threeColumn = 'threeColumn';
@@ -16,7 +17,43 @@ class Layout {
   static const String saleOff = 'saleOff';
   static const String card = 'card';
   static const String listTile = 'listTile';
+  static const String pinterest = 'pinterest';
+  static const String menu = 'menu';
   static const String staggered = 'staggered';
+  static const String simpleList = 'simpleList';
+  static const String simpleVerticalListItems = 'simpleVerticalListItems';
+  static const String largeCard = 'largeCard';
+  static const String largeCardHorizontalListItems =
+      'largeCardHorizontalListItems';
+  static const String sliderList = 'sliderList';
+  static const String sliderItem = 'sliderItem';
+
+  /// Other Type Layout styles
+  static const String logo = 'logo';
+  static const String brand = 'brand';
+  static const String story = 'story';
+  static const String video = 'video';
+  static const String blog = 'blog';
+  static const String category = 'category';
+  static const String featuredVendors = 'featuredVendors';
+  static const String geoSearch = 'geoSearch';
+
+  /// Header Style
+  static const String headerSearch = 'header_search';
+  static const String headerText = 'header_text';
+
+  /// Banner Layout style
+  static const String bannerImage = 'bannerImage';
+  static const String bannerAnimated = 'bannerAnimated';
+
+  /// Common Layout style
+  static const String divider = 'divider';
+  static const String spacer = 'spacer';
+  static const String button = 'button';
+  static const String testimonial = 'testimonial';
+  static const String sliderTestimonial = 'sliderTestimonial';
+  static const String instagramStory = 'instagramStory';
+  static const String tiktokVideos = 'tiktokVideos';
 
   static bool isDisplayDesktop(BuildContext context) {
     final deviceType = getDeviceType(MediaQuery.of(context).size);
diff --git a/lib/modules/dynamic_layout/index.dart b/lib/modules/dynamic_layout/index.dart
index c1379f2..64b4188 100644
--- a/lib/modules/dynamic_layout/index.dart
+++ b/lib/modules/dynamic_layout/index.dart
@@ -25,7 +25,6 @@ export 'product/product_list_large_card.dart';
 export 'product/product_list_simple.dart';
 export 'product/product_list_tile.dart';
 export 'product/product_staggered.dart';
-export 'search/home_search_page.dart';
 export 'spacer/spacer.dart';
 export 'story/index.dart';
 export 'tabbar/tab_indicator/material_indicator.dart';
diff --git a/lib/modules/dynamic_layout/search/home_search_page.dart b/lib/modules/dynamic_layout/search/home_search_page.dart
deleted file mode 100644
index cf1e5e5..0000000
--- a/lib/modules/dynamic_layout/search/home_search_page.dart
+++ /dev/null
@@ -1,284 +0,0 @@
-import 'package:flutter/material.dart';
-import 'package:flutter/services.dart';
-import 'package:inspireui/inspireui.dart' show AutoHideKeyboard;
-import 'package:provider/provider.dart';
-
-import '../../../common/config.dart';
-import '../../../common/constants.dart';
-import '../../../models/index.dart'
-    show
-        AppModel,
-        CategoryModel,
-        FilterAttributeModel,
-        FilterTagModel,
-        SearchModel,
-        UserModel;
-import '../../../screens/index.dart'
-    show FilterSearch, RecentSearchesCustom, SearchBox, SearchResultsCustom;
-import '../../../widgets/scanner/scanner_button.dart';
-
-class HomeSearchPage extends StatefulWidget {
-  const HomeSearchPage();
-  @override
-  State<StatefulWidget> createState() => _HomeSearchPageState();
-}
-
-class _HomeSearchPageState<T> extends State<HomeSearchPage> {
-  // This node is owned, but not hosted by, the search page. Hosting is done by
-  // the text field.
-  final _searchFieldNode = FocusNode();
-  final _searchFieldController = TextEditingController();
-
-  bool isVisibleSearch = false;
-  bool _showResult = false;
-  List<String>? _suggestSearch;
-
-  SearchModel get _searchModel =>
-      Provider.of<SearchModel>(context, listen: false);
-
-  String get _searchKeyword => _searchFieldController.text;
-
-//
-  List<String> get suggestSearch =>
-      _suggestSearch
-          ?.where((s) => s.toLowerCase().contains(_searchKeyword.toLowerCase()))
-          .toList() ??
-      <String>[];
-
-  @override
-  void initState() {
-    super.initState();
-    _searchFieldNode.addListener(() {
-      if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
-        _showResult = false;
-      } else {
-        _showResult = !_searchFieldNode.hasFocus;
-      }
-    });
-  }
-
-  @override
-  void dispose() {
-    _searchFieldNode.dispose();
-    _searchFieldController.dispose();
-//    _searchModel.dispose();
-    super.dispose();
-  }
-
-  void _onSearchTextChange(String value) {
-    if (value.isEmpty) {
-      _showResult = false;
-      setState(() {});
-      return;
-    }
-
-    if (_searchFieldNode.hasFocus) {
-      if (suggestSearch.isEmpty) {
-        final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-        setState(() {
-          _showResult = true;
-          _searchModel.loadProduct(name: value, userId: userId);
-        });
-      } else {
-        setState(() {
-          _showResult = false;
-        });
-      }
-    }
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    assert(debugCheckHasMaterialLocalizations(context));
-    var theme = Theme.of(context);
-    theme = Theme.of(context).copyWith(
-      primaryColor: Colors.white,
-      primaryIconTheme: theme.primaryIconTheme.copyWith(color: Colors.grey),
-      primaryTextTheme: theme.textTheme,
-    );
-    final searchFieldLabel = MaterialLocalizations.of(context).searchFieldLabel;
-    final suggestSearch =
-        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
-
-    var routeName = isIos ? '' : searchFieldLabel;
-
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    _suggestSearch =
-        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
-
-    return Semantics(
-      explicitChildNodes: true,
-      scopesRoute: true,
-      namesRoute: true,
-      label: routeName,
-      child: Scaffold(
-        backgroundColor: theme.backgroundColor,
-        resizeToAvoidBottomInset: false,
-        appBar: AppBar(
-          backgroundColor: theme.backgroundColor,
-          iconTheme: theme.primaryIconTheme,
-          // textTheme: theme.primaryTextTheme,
-          systemOverlayStyle: SystemUiOverlayStyle.light,
-          titleSpacing: 0,
-          leading: IconButton(
-            icon:
-                Icon(isIos ? Icons.arrow_back_ios : Icons.arrow_back, size: 20),
-            onPressed: close,
-          ),
-          title: SearchBox(
-            showSearchIcon: false,
-            showCancelButton: false,
-            autoFocus: true,
-            controller: _searchFieldController,
-            focusNode: _searchFieldNode,
-            onChanged: _onSearchTextChange,
-            onSubmitted: _onSubmit,
-          ),
-          actions: _buildActions(),
-        ),
-        body: AutoHideKeyboard(
-          child: Column(
-            children: [
-              Align(
-                alignment: Alignment.topLeft,
-                child: Padding(
-                  padding: const EdgeInsets.only(left: 15, top: 8),
-                  child: SizedBox(
-                    height: 32,
-                    child: FilterSearch(
-                      onChange: (searchFilter) {
-                        _searchModel.searchByFilter(
-                          searchFilter,
-                          _searchKeyword,
-                          userId: userId,
-                        );
-                      },
-                    ),
-                  ),
-                ),
-              ),
-              const SizedBox(height: 8),
-              Expanded(
-                child: AnimatedSwitcher(
-                  duration: const Duration(milliseconds: 300),
-                  reverseDuration: const Duration(milliseconds: 300),
-                  child: _showResult
-                      ? buildResult()
-                      : Align(
-                          alignment: Alignment.topCenter,
-                          child: Consumer<FilterTagModel>(
-                            builder: (context, tagModel, child) {
-                              return Consumer<CategoryModel>(
-                                builder: (context, categoryModel, child) {
-                                  return Consumer<FilterAttributeModel>(
-                                    builder: (context, attributeModel, child) {
-                                      if (tagModel.isLoading ||
-                                          categoryModel.isLoading ||
-                                          attributeModel.isLoading) {
-                                        return kLoadingWidget(context);
-                                      }
-                                      var child = _buildRecentSearch();
-
-                                      if (_searchFieldNode.hasFocus &&
-                                          suggestSearch.isNotEmpty) {
-                                        child = _buildSuggestions();
-                                      }
-
-                                      return child;
-                                    },
-                                  );
-                                },
-                              );
-                            },
-                          ),
-                        ),
-                ),
-              ),
-            ],
-          ),
-        ),
-      ),
-    );
-  }
-
-  Widget _buildRecentSearch() {
-    return RecentSearchesCustom(onTap: _onSubmit);
-  }
-
-  Widget _buildSuggestions() {
-    return Card(
-      elevation: 0,
-      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
-      color: Theme.of(context).primaryColorLight,
-      child: ListView.builder(
-        shrinkWrap: true,
-        padding: const EdgeInsets.only(
-          left: 10,
-          right: 10,
-        ),
-        itemCount: suggestSearch.length,
-        itemBuilder: (_, index) {
-          final keyword = suggestSearch[index];
-          return GestureDetector(
-            onTap: () => _onSubmit(keyword),
-            child: ListTile(
-              title: Text(keyword),
-            ),
-          );
-        },
-      ),
-    );
-  }
-
-  Widget buildResult() {
-    return SearchResultsCustom(
-      name: _searchKeyword,
-    );
-  }
-
-  List<Widget> _buildActions() {
-    return <Widget>[
-      _searchFieldController.text.isEmpty
-          ? IconButton(
-              tooltip: 'Search',
-              icon: const Icon(Icons.search),
-              onPressed: () {},
-            )
-          : IconButton(
-              tooltip: 'Clear',
-              icon: const Icon(Icons.clear),
-              onPressed: () {
-                _searchFieldController.clear();
-                _searchFieldNode.requestFocus();
-              },
-            ),
-      Consumer<UserModel>(
-        builder: (_, model, __) => ScannerButton(
-          user: model.user,
-        ),
-      ),
-    ];
-  }
-
-  void _onSubmit(String name) {
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    _searchFieldController.text = name;
-    setState(() {
-      _showResult = true;
-      _searchModel.loadProduct(name: name, userId: userId);
-    });
-
-    var currentFocus = FocusScope.of(context);
-    if (!currentFocus.hasPrimaryFocus) {
-      currentFocus.unfocus();
-    }
-  }
-
-  void close() {
-    var currentFocus = FocusScope.of(context);
-    if (!currentFocus.hasPrimaryFocus) {
-      currentFocus.unfocus();
-    }
-    Navigator.of(context).pop();
-  }
-}
diff --git a/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart b/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart
index 316d184..d1018c8 100644
--- a/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart
+++ b/lib/modules/dynamic_layout/tabbar/tabbar_icon.dart
@@ -35,6 +35,14 @@ class TabBarIcon extends StatelessWidget {
     Widget icon = Builder(
       builder: (context) {
         var iconColor = IconTheme.of(context).color;
+        if (item.icon == null) {
+          return Icon(
+            Icons.question_mark,
+            color: iconColor,
+            size: config.iconSize,
+          );
+        }
+
         var isImage = item.icon.contains('/');
         return isImage
             ? FluxImage(
diff --git a/lib/modules/dynamic_layout/vertical/vertical.dart b/lib/modules/dynamic_layout/vertical/vertical.dart
index 9eefc1d..a8e3144 100644
--- a/lib/modules/dynamic_layout/vertical/vertical.dart
+++ b/lib/modules/dynamic_layout/vertical/vertical.dart
@@ -4,6 +4,7 @@ import '../../../models/product_model.dart';
 import '../../../services/service_config.dart';
 import '../config/product_config.dart';
 import '../helper/header_view.dart';
+import '../helper/helper.dart';
 import 'menu_layout.dart';
 import 'pinterest_layout.dart';
 import 'vertical_layout.dart';
@@ -16,9 +17,9 @@ class VerticalLayout extends StatelessWidget {
   Widget renderLayout() {
     var productConfig = ProductConfig.fromJson(config ?? {});
     switch (config['layout']) {
-      case 'menu':
+      case Layout.menu:
         return MenuLayout(config: productConfig);
-      case 'pinterest':
+      case Layout.pinterest:
         return PinterestLayout(config: productConfig);
       default:
         return VerticalViewLayout(config: productConfig);
diff --git a/lib/modules/firebase/dynamic_link_service.dart b/lib/modules/firebase/dynamic_link_service.dart
index 55bd8bd..57c0860 100644
--- a/lib/modules/firebase/dynamic_link_service.dart
+++ b/lib/modules/firebase/dynamic_link_service.dart
@@ -98,6 +98,22 @@ class DynamicLinkService {
             arguments: StoreDetailArgument(store: vendor),
           );
         }
+      } else if (url.contains('/brand/')) {
+        final slug = Uri.tryParse(url)?.pathSegments.last;
+
+        if (slug == null) throw '';
+
+        final brand = await Services().api.getBrandBySlug(slug);
+        if (brand != null) {
+          await FluxNavigate.pushNamed(
+            RouteList.backdrop,
+            arguments: BackDropArguments(
+              brandId: brand.id,
+              brandName: brand.name,
+              brandImg: brand.image,
+            ),
+          );
+        }
       } else {
         var blog = await Services().api.getBlogByPermalink(url);
         if (blog != null) {
@@ -163,4 +179,13 @@ class DynamicLinkService {
     }
     return url;
   }
+
+  Future<String> generateProductBrandUrl(dynamic brandCategoryId) async {
+    final cate = await _service.api.getBrandById(brandCategoryId);
+    var url;
+    if (cate != null) {
+      url = serverConfig['url'] + '/brand/' + cate.slug;
+    }
+    return url;
+  }
 }
diff --git a/lib/routes/route.dart b/lib/routes/route.dart
index f5d6d61..60d2485 100644
--- a/lib/routes/route.dart
+++ b/lib/routes/route.dart
@@ -541,6 +541,7 @@ class Routes {
           settings,
           (context) => DeleteAccountScreen(
             confirmCaptcha: arguments.confirmCaptcha,
+            userToken: arguments.userToken,
           ),
         );
       default:
diff --git a/lib/screens/brand/brand_backdrop.dart b/lib/screens/brand/brand_backdrop.dart
index 7ba6c84..7515081 100644
--- a/lib/screens/brand/brand_backdrop.dart
+++ b/lib/screens/brand/brand_backdrop.dart
@@ -6,6 +6,8 @@ import '../../models/app_model.dart';
 import '../../models/brand_model.dart';
 import '../../models/entities/filter_sorty_by.dart';
 import '../../models/entities/product.dart';
+import '../../modules/firebase/dynamic_link_service.dart';
+import '../../services/services.dart';
 import '../../widgets/backdrop/backdrop.dart';
 import '../../widgets/backdrop/backdrop_menu.dart';
 import '../../widgets/common/flux_image.dart';
@@ -163,6 +165,15 @@ class _BrandPageState extends State<BrandPage>
             backTitle: Text(S.of(context).filter),
             controller: _controller,
             showFilter: false,
+            onTapShareButton: () async {
+              var currentCateId =
+                  Provider.of<BrandModel>(context, listen: false).brandId;
+              var cateUrl = await DynamicLinkService()
+                  .generateProductBrandUrl(currentCateId);
+              Services().firebase.shareDynamicLinkProduct(
+                    itemUrl: cateUrl,
+                  );
+            },
           ),
         );
 
diff --git a/lib/screens/categories/categories_screen.dart b/lib/screens/categories/categories_screen.dart
index fb9b8e3..f69da9e 100644
--- a/lib/screens/categories/categories_screen.dart
+++ b/lib/screens/categories/categories_screen.dart
@@ -1,3 +1,4 @@
+import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
@@ -211,7 +212,7 @@ class _HeaderCategory extends StatelessWidget {
               if (showSearch)
                 IconButton(
                   icon: Icon(
-                    Icons.search,
+                    CupertinoIcons.search,
                     color: Theme.of(context)
                         .colorScheme
                         .secondary
diff --git a/lib/screens/categories/category_search_screen.dart b/lib/screens/categories/category_search_screen.dart
index c3fb3e4..21bca37 100644
--- a/lib/screens/categories/category_search_screen.dart
+++ b/lib/screens/categories/category_search_screen.dart
@@ -66,16 +66,15 @@ class _CategorySearchState<T> extends State<CategorySearch> {
         backgroundColor: theme.backgroundColor,
         resizeToAvoidBottomInset: false,
         appBar: AppBar(
+          automaticallyImplyLeading: false,
           backgroundColor: theme.backgroundColor,
           iconTheme: theme.primaryIconTheme,
           // textTheme: theme.primaryTextTheme,
           // brightness: theme.primaryColorBrightness,
           titleSpacing: 0,
-          leading: IconButton(
-            icon: const Icon(Icons.arrow_back_ios, size: 20),
-            onPressed: close,
-          ),
+          leading: null,
           title: SearchBox(
+            showQRCode: false,
             showSearchIcon: false,
             showCancelButton: false,
             autoFocus: true,
diff --git a/lib/screens/common/delete_account_mixin.dart b/lib/screens/common/delete_account_mixin.dart
new file mode 100644
index 0000000..e7f4520
--- /dev/null
+++ b/lib/screens/common/delete_account_mixin.dart
@@ -0,0 +1,34 @@
+import 'package:flutter/cupertino.dart';
+
+import '../../generated/l10n.dart';
+
+mixin DeleteAccountMixin {
+  Future<bool> showConfirmDeleteAccountDialog(BuildContext context) async {
+    return await showCupertinoDialog(
+          context: context,
+          barrierDismissible: false,
+          useRootNavigator: false,
+          builder: (ctx) => CupertinoAlertDialog(
+            title: Text(S.current.deleteAccount),
+            content: Text(S.current.areYouSureDeleteAccount),
+            actions: [
+              CupertinoDialogAction(
+                isDefaultAction: true,
+                isDestructiveAction: true,
+                onPressed: () {
+                  Navigator.of(ctx).pop(true);
+                },
+                child: Text(S.current.ok),
+              ),
+              CupertinoDialogAction(
+                isDefaultAction: false,
+                isDestructiveAction: false,
+                onPressed: () => Navigator.of(ctx).pop(false),
+                child: Text(S.current.cancel),
+              )
+            ],
+          ),
+        ) ??
+        false;
+  }
+}
diff --git a/lib/screens/common/permission_request_mixin.dart b/lib/screens/common/permission_request_mixin.dart
new file mode 100644
index 0000000..702207f
--- /dev/null
+++ b/lib/screens/common/permission_request_mixin.dart
@@ -0,0 +1,74 @@
+import 'package:flutter/material.dart';
+
+import '../../generated/l10n.dart';
+
+mixin PermissionRequestMixin<T extends StatefulWidget> on State<T> {
+  String get permissionRequestTitle;
+
+  String get permissionRequestSubtitle;
+
+  IconData get permissionIcon;
+
+  Future<void> onAcceptPermission();
+
+  Future<void> onDeclinePermission();
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Theme.of(context).cardColor,
+      bottomNavigationBar: SafeArea(
+        minimum: const EdgeInsets.symmetric(vertical: 8, horizontal: 16),
+        child: Column(
+          mainAxisSize: MainAxisSize.min,
+          crossAxisAlignment: CrossAxisAlignment.stretch,
+          children: [
+            ElevatedButton(
+              onPressed: onAcceptPermission,
+              child: Text(
+                S.current.allow.toUpperCase(),
+                style: const TextStyle(
+                  color: Colors.white,
+                ),
+              ),
+            ),
+            OutlinedButton(
+              onPressed: onDeclinePermission,
+              child: Text(S.current.decline.toUpperCase()),
+            ),
+          ],
+        ),
+      ),
+      body: SingleChildScrollView(
+        child: Column(
+          mainAxisSize: MainAxisSize.max,
+          children: <Widget>[
+            Container(
+              height: MediaQuery.of(context).size.height * 0.5,
+              color: Theme.of(context).scaffoldBackgroundColor,
+              child: Center(
+                child: Icon(permissionIcon, size: 120),
+              ),
+            ),
+            const SizedBox(height: 20),
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 16.0),
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.center,
+                children: [
+                  Text(
+                    permissionRequestTitle,
+                    textAlign: TextAlign.center,
+                    style: Theme.of(context).textTheme.headline5,
+                  ),
+                  const SizedBox(height: 20),
+                  Text(permissionRequestSubtitle),
+                ],
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/screens/home/notification_request_screen.dart b/lib/screens/home/notification_request_screen.dart
index 468c8c1..a132ea3 100644
--- a/lib/screens/home/notification_request_screen.dart
+++ b/lib/screens/home/notification_request_screen.dart
@@ -1,5 +1,4 @@
 import 'package:flutter/cupertino.dart';
-import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
@@ -7,6 +6,7 @@ import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../models/notification_model.dart';
 import '../../services/services.dart';
+import '../common/permission_request_mixin.dart';
 
 class NotificationRequestScreen extends StatefulWidget {
   const NotificationRequestScreen({Key? key}) : super(key: key);
@@ -16,15 +16,28 @@ class NotificationRequestScreen extends StatefulWidget {
       _NotificationRequestScreenState();
 }
 
-class _NotificationRequestScreenState extends State<NotificationRequestScreen> {
+class _NotificationRequestScreenState extends State<NotificationRequestScreen>
+    with PermissionRequestMixin {
   NotificationModel get _notificationModel => context.read<NotificationModel>();
 
-  void _onTapAccept() async {
+  @override
+  IconData get permissionIcon => CupertinoIcons.bell;
+
+  @override
+  String get permissionRequestTitle => S.of(context).notifyLatestOffer;
+
+  @override
+  String get permissionRequestSubtitle =>
+      S.of(context).weWillSendYouNotification;
+
+  @override
+  Future<void> onAcceptPermission() async {
     await _notificationModel.enableNotification();
     _gotoNextScreen();
   }
 
-  void _onTapDecline() {
+  @override
+  Future<void> onDeclinePermission() async {
     _notificationModel.disableNotification();
     _gotoNextScreen();
   }
@@ -40,58 +53,4 @@ class _NotificationRequestScreenState extends State<NotificationRequestScreen> {
       Navigator.of(context).pushReplacementNamed(RouteList.dashboard);
     }
   }
-
-  @override
-  Widget build(BuildContext context) {
-    return Scaffold(
-      backgroundColor: Theme.of(context).cardColor,
-      bottomNavigationBar: SafeArea(
-        minimum: const EdgeInsets.symmetric(vertical: 8, horizontal: 16),
-        child: Column(
-          mainAxisSize: MainAxisSize.min,
-          crossAxisAlignment: CrossAxisAlignment.stretch,
-          children: [
-            ElevatedButton(
-              onPressed: _onTapAccept,
-              child: Text(S.current.allow.toUpperCase(),style: const TextStyle(color: Colors.white,),),
-            ),
-            OutlinedButton(
-              onPressed: _onTapDecline,
-              child: Text(S.current.decline.toUpperCase()),
-            ),
-          ],
-        ),
-      ),
-      body: SingleChildScrollView(
-        child: Column(
-          mainAxisSize: MainAxisSize.max,
-          children: <Widget>[
-            Container(
-              height: MediaQuery.of(context).size.height * 0.5,
-              color: Theme.of(context).scaffoldBackgroundColor,
-              child: const Center(
-                child: Icon(CupertinoIcons.bell, size: 120),
-              ),
-            ),
-            const SizedBox(height: 20),
-            Padding(
-              padding: const EdgeInsets.symmetric(horizontal: 16.0),
-              child: Column(
-                crossAxisAlignment: CrossAxisAlignment.center,
-                children: [
-                  Text(
-                    S.current.notifyLatestOffer,
-                    textAlign: TextAlign.center,
-                    style: Theme.of(context).textTheme.headline5,
-                  ),
-                  const SizedBox(height: 20),
-                  Text(S.current.weWillSendYouNotification),
-                ],
-              ),
-            ),
-          ],
-        ),
-      ),
-    );
-  }
 }
diff --git a/lib/screens/posts/posts_backdrop.dart b/lib/screens/posts/posts_backdrop.dart
index 112c11f..61d3cbe 100644
--- a/lib/screens/posts/posts_backdrop.dart
+++ b/lib/screens/posts/posts_backdrop.dart
@@ -1,11 +1,11 @@
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
-import '../../common/config.dart';
 import '../../generated/l10n.dart';
 import '../../models/entities/filter_sorty_by.dart';
 import '../../models/index.dart'
     show AppModel, Blog, BlogModel, Category, Product;
+import '../../services/index.dart';
 import '../../widgets/backdrop/backdrop.dart';
 import '../../widgets/backdrop/backdrop_menu.dart';
 import '../../widgets/blog/blog_list_backdrop.dart';
@@ -140,7 +140,7 @@ class _BlogsPageState extends State<BlogsPage>
 
               /// we need to use the Blog menu data inside Woo/Vendor app
               /// apply for the dynamic Blog on home screen.
-              isUseBlog: serverConfig['type'] != 'wordpress',
+              isUseBlog: !Config().isWordPress,
               isBlog: true,
             ),
             frontTitle: Text(title, style: TextStyle(color: textColor)),
diff --git a/lib/screens/products/products_flatview.dart b/lib/screens/products/products_flatview.dart
index 39561e3..25fd4d5 100644
--- a/lib/screens/products/products_flatview.dart
+++ b/lib/screens/products/products_flatview.dart
@@ -12,7 +12,9 @@ import '../../models/user_model.dart';
 import '../../modules/firebase/dynamic_link_service.dart';
 import '../../services/service_config.dart';
 import '../../services/services.dart';
+import '../../widgets/common/drag_handler.dart';
 import '../cart/cart_screen.dart';
+import 'products_searchview.dart';
 
 enum MenuType { cart, wishlist, share, login }
 
@@ -24,6 +26,7 @@ class ProductFlatView extends StatefulWidget {
   final Function? onSort;
   final Function onFilter;
   final Function onSearch;
+  final bool enableSearchHistory;
 
   const ProductFlatView({
     required this.builder,
@@ -33,6 +36,7 @@ class ProductFlatView extends StatefulWidget {
     this.titleFilter,
     this.onSort,
     required this.onFilter,
+    this.enableSearchHistory = false,
     Key? key,
   }) : super(key: key);
 
@@ -120,29 +124,11 @@ class _ProductFlatViewState extends State<ProductFlatView> {
                               ),
                               child: Stack(
                                 children: [
+                                  const DragHandler(),
                                   Padding(
-                                    padding: const EdgeInsets.only(top: 40),
+                                    padding: const EdgeInsets.only(top: 20),
                                     child: widget.filterMenu(scrollController),
                                   ),
-                                  Positioned(
-                                    top: 8,
-                                    right: 12,
-                                    child: TextButton(
-                                      onPressed: () {
-                                        Navigator.of(context).pop();
-                                      },
-                                      child: Text(
-                                        S.of(context).apply,
-                                        style: Theme.of(context)
-                                            .textTheme
-                                            .subtitle1!
-                                            .copyWith(
-                                              color: Theme.of(context)
-                                                  .primaryColor,
-                                            ),
-                                      ),
-                                    ),
-                                  ),
                                 ],
                               ),
                             ),
@@ -295,19 +281,39 @@ class _ProductFlatViewState extends State<ProductFlatView> {
 
   @override
   Widget build(BuildContext context) {
+    /// using for the Search Screen UX
+    if (widget.enableSearchHistory) {
+      return ProductSearchView(
+        builder: widget.builder,
+        filterMenu: widget.filterMenu,
+        onSearch: widget.onSearch,
+        bottomSheet: widget.bottomSheet,
+        titleFilter: widget.titleFilter,
+        onSort: widget.onSort,
+        onFilter: widget.onFilter,
+      );
+    }
+
     return Scaffold(
       backgroundColor: Theme.of(context).backgroundColor,
       appBar: AppBar(
           titleSpacing: 0,
           backgroundColor: Theme.of(context).backgroundColor,
-          leading: CupertinoButton(
-            padding: EdgeInsets.zero,
-            child: const Icon(CupertinoIcons.back),
-            onPressed: () => Navigator.of(context).pop(),
-          ),
-          title: CupertinoSearchTextField(
-            onChanged: onSearch,
-            onSubmitted: onSearch,
+          leading: Navigator.of(context).canPop()
+              ? CupertinoButton(
+                  padding: EdgeInsets.zero,
+                  child: const Icon(CupertinoIcons.back),
+                  onPressed: () => Navigator.of(context).pop(),
+                )
+              : null,
+          title: Padding(
+            padding:
+                EdgeInsets.only(left: Navigator.of(context).canPop() ? 0 : 15),
+            child: CupertinoSearchTextField(
+              onChanged: onSearch,
+              onSubmitted: onSearch,
+              placeholder: S.of(context).searchForItems,
+            ),
           ),
           actions: [
             Selector<UserModel, bool>(
diff --git a/lib/screens/products/products_screen.dart b/lib/screens/products/products_screen.dart
index 21e9348..f9d0262 100644
--- a/lib/screens/products/products_screen.dart
+++ b/lib/screens/products/products_screen.dart
@@ -1,5 +1,7 @@
+import 'package:collection/collection.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:inspireui/widgets/void_widget.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
@@ -17,7 +19,9 @@ import '../../models/index.dart'
         TagModel,
         UserModel;
 import '../../modules/dynamic_layout/helper/countdown_timer.dart';
+import '../../modules/dynamic_layout/helper/helper.dart';
 import '../../modules/dynamic_layout/index.dart';
+import '../../modules/firebase/dynamic_link_service.dart';
 import '../../services/index.dart';
 import '../../widgets/asymmetric/asymmetric_view.dart';
 import '../../widgets/backdrop/backdrop.dart';
@@ -88,12 +92,14 @@ class ProductsScreen extends StatefulWidget {
   final ProductConfig? config;
   final Duration countdownDuration;
   final String? listingLocation;
+  final bool enableSearchHistory;
 
   const ProductsScreen({
     this.products,
     this.countdownDuration = Duration.zero,
     this.listingLocation,
     this.config,
+    this.enableSearchHistory = false,
   });
 
   @override
@@ -147,6 +153,10 @@ class ProductsScreenState extends State<ProductsScreen>
   int _page = 1;
 
   String _currentTitle = '';
+
+  String get currentTitle =>
+      search != null ? S.of(context).results : _currentTitle;
+
   List? include;
 
   FilterSortBy _currentFilterSortBy = const FilterSortBy();
@@ -237,9 +247,12 @@ class ProductsScreenState extends State<ProductsScreen>
       newCategoryId = categoryId;
 
       final selectedCat = categoryModel.categories!
-          .singleWhere((element) => element.id == categoryId.toString());
-      productModel.categoryName = selectedCat.name;
-      _currentTitle = selectedCat.name!;
+          .firstWhereOrNull((element) => element.id == categoryId.toString());
+
+      if (selectedCat != null) {
+        productModel.categoryName = selectedCat.name;
+        _currentTitle = selectedCat.name!;
+      }
     }
 
     /// reset paging and clean up product
@@ -279,6 +292,10 @@ class ProductsScreenState extends State<ProductsScreen>
   }
 
   Widget? renderCategoryMenu({bool imageLayout = false}) {
+    if (widget.enableSearchHistory) {
+      return kVoidWidget;
+    }
+
     var parentCategoryId = newCategoryId;
     if (categoryModel.categories != null &&
         categoryModel.categories!.isNotEmpty) {
@@ -558,16 +575,25 @@ class ProductsScreenState extends State<ProductsScreen>
                   Column(
                     crossAxisAlignment: CrossAxisAlignment.start,
                     children: [
-                      Text(_currentTitle),
+                      Text(currentTitle),
                       CountDownTimer(widget.countdownDuration)
                     ],
                   ),
                 ],
               )
-            : Text(_currentTitle),
+            : Text(currentTitle),
         backTitle: Text(S.of(context).filter),
         controller: _controller,
         appbarCategory: renderCategoryMenu(),
+        onTapShareButton: () async {
+          var currentCateId =
+              Provider.of<ProductModel>(context, listen: false).categoryId;
+          var cateUrl = await DynamicLinkService()
+              .generateProductCategoryUrl(currentCateId);
+          Services().firebase.shareDynamicLinkProduct(
+                itemUrl: cateUrl,
+              );
+        },
       ),
       expandingBottomSheet: (Services().widget.enableShoppingCart(null) &&
               !Config().isListingType &&
@@ -581,7 +607,7 @@ class ProductsScreenState extends State<ProductsScreen>
   Widget build(BuildContext context) {
     _currentTitle = productConfig.name ??
         productModel.categoryName ??
-        S.of(context).products;
+        S.of(context).results;
 
     Widget buildMain = LayoutBuilder(
       builder: (context, constraint) {
@@ -589,7 +615,13 @@ class ProductsScreenState extends State<ProductsScreen>
           widthFactor: 1.0,
           child: Selector<AppModel, String>(
             selector: (context, provider) => provider.productListLayout,
-            builder: (context, layout, child) {
+            builder: (context, productListLayout, child) {
+              /// override the layout to listTile if enableSearchUX
+              /// otherwise, using default productListLayout from the Config
+              var layout = widget.enableSearchHistory
+                  ? Layout.simpleList
+                  : productListLayout;
+
               return ListenableProvider.value(
                 value: productModel,
                 child: Consumer<ProductModel>(
@@ -607,6 +639,7 @@ class ProductsScreenState extends State<ProductsScreen>
                           : [];
 
                       return ProductFlatView(
+                        enableSearchHistory: widget.enableSearchHistory,
                         builder: (controller) => layout.isListView
                             ? ProductList(
                                 scrollController: controller,
@@ -636,10 +669,10 @@ class ProductsScreenState extends State<ProductsScreen>
                                               CrossAxisAlignment.end,
                                           children: [
                                             Text(
-                                              _currentTitle,
+                                              currentTitle,
                                               style: Theme.of(context)
                                                   .textTheme
-                                                  .headline5!
+                                                  .headline6!
                                                   .copyWith(
                                                     fontWeight: FontWeight.w700,
                                                     height: 0.6,
@@ -754,6 +787,9 @@ class ProductsScreenState extends State<ProductsScreen>
                           controller: scrollController,
                           minPrice: minPrice,
                           maxPrice: maxPrice,
+
+                          /// hide layout filter from Search screen
+                          showLayout: widget.enableSearchHistory ? false : true,
                         ),
                         bottomSheet: (Services()
                                     .widget
diff --git a/lib/screens/products/products_searchview.dart b/lib/screens/products/products_searchview.dart
new file mode 100644
index 0000000..97f0abe
--- /dev/null
+++ b/lib/screens/products/products_searchview.dart
@@ -0,0 +1,431 @@
+import 'package:easy_debounce/easy_debounce.dart';
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/rendering.dart';
+import 'package:inspireui/inspireui.dart' show AutoHideKeyboard;
+import 'package:provider/provider.dart';
+
+import '../../common/constants.dart';
+import '../../generated/l10n.dart';
+import '../../models/app_model.dart';
+import '../../models/category_model.dart';
+import '../../models/filter_attribute_model.dart';
+import '../../models/filter_tags_model.dart';
+import '../../models/user_model.dart';
+import '../../widgets/common/drag_handler.dart';
+import '../search/widgets/recent/recent_search_custom.dart';
+import '../search/widgets/search_box.dart';
+import '../search/widgets/search_results_custom.dart';
+
+class ProductSearchView extends StatefulWidget {
+  final Widget Function(ScrollController) builder;
+  final Widget Function(ScrollController) filterMenu;
+  final Widget? bottomSheet;
+  final Widget? titleFilter;
+  final Function? onSort;
+  final Function onFilter;
+  final Function onSearch;
+  final bool enableSearchHistory;
+
+  const ProductSearchView({
+    required this.builder,
+    required this.filterMenu,
+    required this.onSearch,
+    this.bottomSheet,
+    this.titleFilter,
+    this.onSort,
+    required this.onFilter,
+    this.enableSearchHistory = false,
+    Key? key,
+  }) : super(key: key);
+
+  @override
+  State<ProductSearchView> createState() => _ProductSearchViewState();
+}
+
+class _ProductSearchViewState extends State<ProductSearchView>
+    with AutomaticKeepAliveClientMixin<ProductSearchView> {
+  @override
+  bool get wantKeepAlive => true;
+
+  final ScrollController controller = ScrollController();
+
+  final _searchFieldNode = FocusNode();
+  final _searchFieldController = TextEditingController();
+
+  bool isVisibleSearch = false;
+  bool _showResult = false;
+  List<String>? _suggestSearch;
+
+  String get _searchKeyword => _searchFieldController.text;
+
+  List<String> get suggestSearch =>
+      _suggestSearch
+          ?.where((s) => s.toLowerCase().contains(_searchKeyword.toLowerCase()))
+          .toList() ??
+      <String>[];
+
+  void _onFocusChange() {
+    if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
+      _showResult = false;
+    } else {
+      _showResult = !_searchFieldNode.hasFocus;
+    }
+
+    // Delayed keyboard hide and show
+    Future.delayed(const Duration(milliseconds: 120), () {
+      setState(() {
+        isVisibleSearch = _searchFieldNode.hasFocus;
+      });
+    });
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    printLog('[SearchScreen] initState');
+    _searchFieldNode.addListener(_onFocusChange);
+  }
+
+  @override
+  void dispose() {
+    printLog('[SearchScreen] dispose');
+    _searchFieldNode.dispose();
+    _searchFieldController.dispose();
+    super.dispose();
+  }
+
+  void _onSearchTextChange(String value) {
+    if (value.isEmpty) {
+      _showResult = false;
+      setState(() {});
+      return;
+    }
+    if (_searchFieldNode.hasFocus) {
+      if (suggestSearch.isEmpty) {
+        setState(() {
+          _showResult = true;
+          EasyDebounce.debounce('searchCategory',
+              const Duration(milliseconds: 200), () => widget.onSearch(value));
+        });
+      } else {
+        setState(() {
+          _showResult = false;
+        });
+      }
+    }
+  }
+
+  Color get labelColor => Colors.black;
+
+  bool showSticky = true;
+
+  bool get isLoggedIn =>
+      Provider.of<UserModel>(context, listen: false).loggedIn;
+
+  Widget _getStickyWidget() {
+    return AnimatedCrossFade(
+      duration: const Duration(milliseconds: 200),
+      crossFadeState:
+          showSticky ? CrossFadeState.showFirst : CrossFadeState.showSecond,
+      secondChild: const SizedBox(width: double.maxFinite),
+      firstChild: Container(
+        alignment: Alignment.center,
+        height: 44,
+        margin: const EdgeInsets.only(bottom: 5),
+        decoration: BoxDecoration(
+          color: Theme.of(context).backgroundColor,
+          boxShadow: const [
+            BoxShadow(
+              color: Colors.black12,
+              offset: Offset(0, 1),
+              blurRadius: 2,
+            )
+          ],
+        ),
+        child: Row(
+          children: [
+            const SizedBox(width: 10),
+            widget.titleFilter ?? const SizedBox(),
+            const Spacer(),
+            const SizedBox(width: 5),
+            const VerticalDivider(width: 15, indent: 8, endIndent: 8),
+            const SizedBox(width: 5),
+            CupertinoButton(
+              padding: EdgeInsets.zero,
+              child: Row(
+                children: [
+                  Text(S.of(context).filter,
+                      style: Theme.of(context).textTheme.bodySmall),
+                  const SizedBox(width: 4),
+                  const Icon(CupertinoIcons.chevron_down, size: 13),
+                ],
+              ),
+              onPressed: () => showModalBottomSheet(
+                context: context,
+                isScrollControlled: true,
+                isDismissible: true,
+                backgroundColor: Colors.transparent,
+                builder: (context) => Stack(
+                  children: [
+                    GestureDetector(
+                      onTap: () {
+                        Navigator.of(context).pop();
+                      },
+                      child: Container(color: Colors.transparent),
+                    ),
+                    DraggableScrollableSheet(
+                      initialChildSize: 0.7,
+                      minChildSize: 0.2,
+                      maxChildSize: 0.9,
+                      builder: (BuildContext context,
+                          ScrollController scrollController) {
+                        return Stack(
+                          alignment: Alignment.bottomCenter,
+                          children: [
+                            Container(
+                              decoration: BoxDecoration(
+                                borderRadius: const BorderRadius.only(
+                                  topLeft: Radius.circular(15.0),
+                                  topRight: Radius.circular(15.0),
+                                ),
+                                color: Theme.of(context).backgroundColor,
+                              ),
+                              child: Stack(
+                                children: [
+                                  const DragHandler(),
+                                  Padding(
+                                    padding: const EdgeInsets.only(top: 20),
+                                    child: widget.filterMenu(scrollController),
+                                  ),
+                                ],
+                              ),
+                            ),
+                          ],
+                        );
+                      },
+                    ),
+                  ],
+                ),
+              ),
+            ),
+            const SizedBox(width: 15),
+          ],
+        ),
+      ),
+    );
+  }
+
+  bool _onChangeDirection(scrollNotification) {
+    /// scroll down
+    if (controller.position.userScrollDirection == ScrollDirection.reverse &&
+        controller.offset > 80 &&
+        showSticky == true) {
+      setState(() {
+        showSticky = false;
+      });
+      return true;
+    }
+
+    /// scroll up
+    if (controller.position.userScrollDirection == ScrollDirection.forward &&
+        showSticky == false) {
+      setState(() => showSticky = true);
+    }
+    return true;
+  }
+
+  void onSearch(String value) {
+    EasyDebounce.debounce('searchCategory', const Duration(milliseconds: 200),
+        () => widget.onSearch(value));
+  }
+
+  Material buildResult() {
+    return Material(
+      child: Stack(
+        children: [
+          NotificationListener<ScrollNotification>(
+            onNotification: _onChangeDirection,
+            child: widget.builder(controller),
+          ),
+          _getStickyWidget(),
+          Align(
+            alignment: Alignment.bottomRight,
+            child: widget.bottomSheet,
+          )
+        ],
+      ),
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    super.build(context);
+
+    _suggestSearch =
+        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
+
+    return Scaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      resizeToAvoidBottomInset: false,
+      // appBar: _renderAppbar(screenSize),
+      body: SafeArea(
+        bottom: false,
+        child: Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: <Widget>[
+            // _renderHeader(),
+            SearchBox(
+              // width: widthSearchBox,
+              autoFocus: true,
+              controller: _searchFieldController,
+              focusNode: _searchFieldNode,
+              onChanged: _onSearchTextChange,
+              onSubmitted: _onSubmit,
+              onCancel: () {
+                setState(() {
+                  isVisibleSearch = false;
+                });
+              },
+            ),
+            Expanded(
+              child: AutoHideKeyboard(
+                child: Padding(
+                  padding: const EdgeInsets.only(top: 8.0),
+                  child: AnimatedSwitcher(
+                    duration: const Duration(milliseconds: 300),
+                    reverseDuration: const Duration(milliseconds: 300),
+                    child: _showResult
+                        ? buildResult()
+                        : Align(
+                            alignment: Alignment.topCenter,
+                            child: Consumer<FilterTagModel>(
+                              builder: (context, tagModel, child) {
+                                return Consumer<CategoryModel>(
+                                  builder: (context, categoryModel, child) {
+                                    return Consumer<FilterAttributeModel>(
+                                      builder:
+                                          (context, attributeModel, child) {
+                                        var child = _buildRecentSearch();
+
+                                        if (_searchFieldNode.hasFocus &&
+                                            suggestSearch.isNotEmpty) {
+                                          child = _buildSuggestions();
+                                        }
+
+                                        return child;
+                                      },
+                                    );
+                                  },
+                                );
+                              },
+                            ),
+                          ),
+                  ),
+                ),
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  // Widget _renderHeader() {
+  //   final screenSize = MediaQuery.of(context).size;
+  //   Widget headerContent = const SizedBox(height: 10.0);
+  //   headerContent = AnimatedContainer(
+  //     height: isVisibleSearch ? 0.1 : 58,
+  //     padding: const EdgeInsets.only(
+  //       left: 10,
+  //       top: 10,
+  //       bottom: 10,
+  //     ),
+  //     duration: const Duration(milliseconds: 150),
+  //     curve: Curves.easeInOut,
+  //     child: Row(
+  //       mainAxisSize: MainAxisSize.max,
+  //       children: <Widget>[
+  //         Text(
+  //           S.of(context).search,
+  //           style: Theme.of(context).textTheme.headline5!.copyWith(
+  //                 fontWeight: FontWeight.w700,
+  //               ),
+  //         ),
+  //       ],
+  //     ),
+  //   );
+  //
+  //   return SizedBox(
+  //     width: screenSize.width / (2 / (screenSize.height / screenSize.width)),
+  //     child: headerContent,
+  //   );
+  // }
+
+  Widget _buildRecentSearch() {
+    return RecentSearchesCustom(onTap: _onSubmit);
+  }
+
+  Widget _buildSuggestions() {
+    return Card(
+      elevation: 0,
+      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
+      color: Theme.of(context).primaryColorLight,
+      child: ListView.builder(
+        physics: const NeverScrollableScrollPhysics(),
+        shrinkWrap: true,
+        padding: const EdgeInsets.only(
+          left: 10,
+          right: 10,
+        ),
+        itemCount: suggestSearch.length,
+        itemBuilder: (_, index) {
+          final keyword = suggestSearch[index];
+
+          if (index == 0 && suggestSearch.length > 1) {
+            return Padding(
+              padding: const EdgeInsets.only(left: 15, right: 15, top: 15),
+              child: Text(
+                keyword,
+                style: Theme.of(context).textTheme.bodySmall!.copyWith(
+                      color: Theme.of(context)
+                          .colorScheme
+                          .secondary
+                          .withOpacity(0.5),
+                    ),
+              ),
+            );
+          }
+          return GestureDetector(
+            onTap: () => _onSubmit(keyword),
+            child: ListTile(
+              title: Text(keyword),
+            ),
+          );
+        },
+      ),
+    );
+  }
+
+  Widget buildResult2() {
+    return SearchResultsCustom(
+      name: _searchKeyword,
+    );
+  }
+
+  void _onSubmit(String name) {
+    _searchFieldController.text = name;
+    // final userId = Provider.of<UserModel>(context, listen: false).user?.id;
+    setState(() {
+      _showResult = true;
+      // _searchModel.loadProduct(name: name, userId: userId);
+
+      EasyDebounce.debounce('searchCategory', const Duration(milliseconds: 200),
+          () => widget.onSearch(name));
+    });
+    var currentFocus = FocusScope.of(context);
+    if (!currentFocus.hasPrimaryFocus) {
+      currentFocus.unfocus();
+    }
+  }
+}
diff --git a/lib/screens/search/search_screen.dart b/lib/screens/search/search_screen.dart
index 29330b9..10bfafc 100644
--- a/lib/screens/search/search_screen.dart
+++ b/lib/screens/search/search_screen.dart
@@ -1,24 +1,18 @@
 import 'package:flutter/material.dart';
-import 'package:provider/provider.dart';
 
 import '../../common/constants.dart';
-import '../../generated/l10n.dart';
-import '../../models/app_model.dart';
-import '../../models/category_model.dart';
-import '../../models/filter_attribute_model.dart';
-import '../../models/filter_tags_model.dart';
-import '../../models/search_model.dart';
-import '../../models/user_model.dart';
+import '../../modules/dynamic_layout/config/product_config.dart';
+import '../../modules/dynamic_layout/helper/helper.dart';
 import '../common/app_bar_mixin.dart';
-import 'widgets/filters/filter_search.dart';
-import 'widgets/recent/recent_search_custom.dart';
-import 'widgets/search_box.dart';
-import 'widgets/search_results_custom.dart';
+import '../products/products_screen.dart';
 
 class SearchScreen extends StatefulWidget {
   final bool isModal;
 
-  const SearchScreen({Key? key, this.isModal = false}) : super(key: key);
+  const SearchScreen({
+    Key? key,
+    this.isModal = false,
+  }) : super(key: key);
 
   @override
   State<SearchScreen> createState() => _StateSearchScreen();
@@ -29,271 +23,14 @@ class _StateSearchScreen extends State<SearchScreen>
   @override
   bool get wantKeepAlive => true;
 
-  final _searchFieldNode = FocusNode();
-  final _searchFieldController = TextEditingController();
-
-  bool isVisibleSearch = false;
-  bool _showResult = false;
-  List<String>? _suggestSearch;
-
-  SearchModel get _searchModel =>
-      Provider.of<SearchModel>(context, listen: false);
-
-  String get _searchKeyword => _searchFieldController.text;
-
-  List<String> get suggestSearch =>
-      _suggestSearch
-          ?.where((s) => s.toLowerCase().contains(_searchKeyword.toLowerCase()))
-          .toList() ??
-      <String>[];
-
-  void _onFocusChange() {
-    if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
-      _showResult = false;
-    } else {
-      _showResult = !_searchFieldNode.hasFocus;
-    }
-
-    // Delayed keyboard hide and show
-    Future.delayed(const Duration(milliseconds: 120), () {
-      setState(() {
-        isVisibleSearch = _searchFieldNode.hasFocus;
-      });
-    });
-  }
-
-  @override
-  void initState() {
-    super.initState();
-    printLog('[SearchScreen] initState');
-    _searchFieldNode.addListener(_onFocusChange);
-  }
-
-  @override
-  void dispose() {
-    printLog('[SearchScreen] dispose');
-    _searchFieldNode.dispose();
-    _searchFieldController.dispose();
-    super.dispose();
-  }
-
-  void _onSearchTextChange(String value) {
-    if (value.isEmpty) {
-      _showResult = false;
-      setState(() {});
-      return;
-    }
-    if (_searchFieldNode.hasFocus) {
-      if (suggestSearch.isEmpty) {
-        final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-        setState(() {
-          _showResult = true;
-          _searchModel.loadProduct(name: value, userId: userId);
-        });
-      } else {
-        setState(() {
-          _showResult = false;
-        });
-      }
-    }
-  }
-
   @override
   Widget build(BuildContext context) {
     printLog('[SearchScreen] build');
     super.build(context);
-    _suggestSearch =
-        Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
-    final screenSize = MediaQuery.of(context).size;
-    // double widthSearchBox =
-    //     screenSize.width / (2 / (screenSize.height / screenSize.width));
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    return Scaffold(
-      backgroundColor: Theme.of(context).backgroundColor,
-      resizeToAvoidBottomInset: false,
-      appBar: _renderAppbar(screenSize),
-      body: SafeArea(
-        bottom: false,
-        child: Column(
-          crossAxisAlignment: CrossAxisAlignment.start,
-          children: <Widget>[
-            _renderHeader(),
-            SearchBox(
-              // width: widthSearchBox,
-              controller: _searchFieldController,
-              focusNode: _searchFieldNode,
-              onChanged: _onSearchTextChange,
-              onSubmitted: _onSubmit,
-              onCancel: () {
-                setState(() {
-                  isVisibleSearch = false;
-                });
-              },
-            ),
-            Align(
-              alignment: Alignment.topLeft,
-              child: Padding(
-                padding: const EdgeInsets.only(left: 15, top: 8),
-                child: SizedBox(
-                  height: 32,
-                  child: FilterSearch(
-                    onChange: (searchFilter) {
-                      _searchModel.searchByFilter(
-                        searchFilter,
-                        _searchKeyword,
-                        userId: userId,
-                      );
-                    },
-                  ),
-                ),
-              ),
-            ),
-            const SizedBox(height: 8),
-            Expanded(
-              child: AnimatedSwitcher(
-                duration: const Duration(milliseconds: 300),
-                reverseDuration: const Duration(milliseconds: 300),
-                child: _showResult
-                    ? buildResult()
-                    : Align(
-                        alignment: Alignment.topCenter,
-                        child: Consumer<FilterTagModel>(
-                          builder: (context, tagModel, child) {
-                            return Consumer<CategoryModel>(
-                              builder: (context, categoryModel, child) {
-                                return Consumer<FilterAttributeModel>(
-                                  builder: (context, attributeModel, child) {
-                                    var child = _buildRecentSearch();
-
-                                    if (_searchFieldNode.hasFocus &&
-                                        suggestSearch.isNotEmpty) {
-                                      child = _buildSuggestions();
-                                    }
 
-                                    return child;
-                                  },
-                                );
-                              },
-                            );
-                          },
-                        ),
-                      ),
-              ),
-            ),
-          ],
-        ),
-      ),
+    return ProductsScreen(
+      enableSearchHistory: true,
+      config: ProductConfig.empty()..layout = Layout.listTile,
     );
   }
-
-  PreferredSizeWidget? _renderAppbar(Size screenSize) {
-    if (widget.isModal) {
-      return AppBar(
-        elevation: 0.1,
-        backgroundColor: Theme.of(context).backgroundColor,
-        title: Text(
-          S.of(context).search,
-          style: Theme.of(context)
-              .textTheme
-              .headline5
-              ?.copyWith(fontWeight: FontWeight.w700),
-        ),
-        leading: Navigator.of(context).canPop()
-            ? Center(
-                child: GestureDetector(
-                  onTap: () => Navigator.pop(context),
-                  child: const Icon(
-                    Icons.arrow_back_ios,
-                  ),
-                ),
-              )
-            : const SizedBox(),
-      );
-    }
-    if (showAppBar(RouteList.search)) {
-      return appBarWidget;
-    }
-    return null;
-  }
-
-  Widget _renderHeader() {
-    final screenSize = MediaQuery.of(context).size;
-    Widget headerContent = const SizedBox(height: 10.0);
-    if (!widget.isModal) {
-      headerContent = AnimatedContainer(
-        height: isVisibleSearch ? 0.1 : 58,
-        padding: const EdgeInsets.only(
-          left: 10,
-          top: 10,
-          bottom: 10,
-        ),
-        duration: const Duration(milliseconds: 150),
-        curve: Curves.easeInOut,
-        child: Row(
-          mainAxisSize: MainAxisSize.max,
-          children: <Widget>[
-            Text(
-              S.of(context).search,
-              style: Theme.of(context).textTheme.headline5!.copyWith(
-                    fontWeight: FontWeight.w700,
-                  ),
-            ),
-          ],
-        ),
-      );
-    }
-
-    return SizedBox(
-      width: screenSize.width / (2 / (screenSize.height / screenSize.width)),
-      child: headerContent,
-    );
-  }
-
-  Widget _buildRecentSearch() {
-    return RecentSearchesCustom(onTap: _onSubmit);
-  }
-
-  Widget _buildSuggestions() {
-    return Card(
-      elevation: 0,
-      margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
-      color: Theme.of(context).primaryColorLight,
-      child: ListView.builder(
-        shrinkWrap: true,
-        padding: const EdgeInsets.only(
-          left: 10,
-          right: 10,
-        ),
-        itemCount: suggestSearch.length,
-        itemBuilder: (_, index) {
-          final keyword = suggestSearch[index];
-          return GestureDetector(
-            onTap: () => _onSubmit(keyword),
-            child: ListTile(
-              title: Text(keyword),
-            ),
-          );
-        },
-      ),
-    );
-  }
-
-  Widget buildResult() {
-    return SearchResultsCustom(
-      name: _searchKeyword,
-    );
-  }
-
-  void _onSubmit(String name) {
-    _searchFieldController.text = name;
-    final userId = Provider.of<UserModel>(context, listen: false).user?.id;
-    setState(() {
-      _showResult = true;
-      _searchModel.loadProduct(name: name, userId: userId);
-    });
-    var currentFocus = FocusScope.of(context);
-    if (!currentFocus.hasPrimaryFocus) {
-      currentFocus.unfocus();
-    }
-  }
 }
diff --git a/lib/screens/search/widgets/filters/filter_search.dart b/lib/screens/search/widgets/filters/filter_search.dart
index 65a3479..cc42198 100644
--- a/lib/screens/search/widgets/filters/filter_search.dart
+++ b/lib/screens/search/widgets/filters/filter_search.dart
@@ -367,105 +367,6 @@ class _FilterSearchState extends BaseScreen<FilterSearch> {
         ),
       ),
     );
-
-//    return GestureDetector(onPanStart: (DragStartDetails details) {
-//      _initial = details.globalPosition.dy;
-//    }, onPanUpdate: (DragUpdateDetails details) {
-//      _currentDy = details.globalPosition.dy - _initial;
-//      _streamLocal?.add(getPosition);
-//    }, onPanEnd: (DragEndDetails details) {
-//      if (getPosition < 0.4) {
-//        Navigator.pop(context);
-//      } else {
-//        _streamLocal?.add(1);
-//      }
-//    }, child: Builder(
-//      builder: (context) {
-//        return Align(
-//          alignment: Alignment.bottomCenter,
-//          child: Container(
-//            height: _heightPopup,
-//            padding: const EdgeInsets.symmetric(vertical: 15),
-//            width: MediaQuery.of(context).size.width,
-//            decoration: BoxDecoration(
-//              boxShadow: kElevationToShadow[12],
-//              color: Theme.of(context).backgroundColor,
-//              borderRadius: const BorderRadius.only(
-//                topLeft: Radius.circular(20.0),
-//                topRight: Radius.circular(20.0),
-//              ),
-//            ),
-//            child: Material(
-//              child: Container(
-//                color: Theme.of(context).backgroundColor,
-//                child: SingleChildScrollView(
-//                  child: Column(
-//                    crossAxisAlignment: CrossAxisAlignment.start,
-//                    children: <Widget>[
-//                      FilterSearchTags(
-//                        onSelect: (tag, currentSlug) {
-//                          if (tag.isEmpty) {
-//                            _listResult.remove('tags');
-//                            return;
-//                          }
-//                          _listTag = tag;
-//                          setState(() {});
-//                        },
-//                        listSelected: _listTag,
-//                      ),
-//                      Padding(
-//                        padding: const EdgeInsets.only(
-//                          top: 25,
-//                          bottom: 10,
-//                          left: 30,
-//                        ),
-//                        child: Text(
-//                          S.of(context).categories,
-//                          style: const TextStyle(
-//                            fontWeight: FontWeight.bold,
-//                            fontSize: 18,
-//                          ),
-//                        ),
-//                      ),
-//                      FilterSearchCategory(
-//                        onSelect: (category, currentSlug) {
-//                          if (category.isEmpty) {
-//                            _listResult.remove('categories');
-//                            return;
-//                          }
-//                          _listCategory = category;
-//                          setState(() {});
-//                        },
-//                        listSelected: _listCategory,
-//                      ),
-//                      FilterSearchAttributes(
-//                        listSelected: _listAttribute,
-//                        slug: _slugAttribute,
-//                        onSelect: (attributes, currentSlug) {
-//                          if (attributes.isEmpty) {
-//                            _listResult.remove(_slugAttribute);
-//                            return;
-//                          }
-//                          _listAttribute = attributes;
-//                          _slugAttribute = currentSlug;
-//                          _listResult.removeWhere((key, value) =>
-//                              !key.contains('categories') &&
-//                              !key.contains('tags') &&
-//                              !key.contains('$currentSlug'));
-//                          if (mounted) {
-//                            setState(() {});
-//                          }
-//                        },
-//                      )
-//                    ],
-//                  ),
-//                ),
-//              ),
-//            ),
-//          ),
-//        );
-//      },
-//    ));
   }
 
   void _showFilter() async {
diff --git a/lib/screens/search/widgets/recent/recent_products_custom.dart b/lib/screens/search/widgets/recent/recent_products_custom.dart
index d5b6bf4..4838b96 100644
--- a/lib/screens/search/widgets/recent/recent_products_custom.dart
+++ b/lib/screens/search/widgets/recent/recent_products_custom.dart
@@ -3,7 +3,7 @@ import 'package:provider/provider.dart';
 
 import '../../../../common/constants.dart';
 import '../../../../generated/l10n.dart';
-import '../../../../models/search_model.dart';
+import '../../../../models/index.dart' show ProductModel;
 import '../../../../modules/dynamic_layout/config/product_config.dart';
 import '../../../../services/index.dart';
 
@@ -14,8 +14,8 @@ class RecentProductsCustom extends StatelessWidget {
       builder: (context, constraints) {
         var screenWidth = constraints.maxWidth;
 
-        return Consumer<SearchModel>(builder: (context, model, child) {
-          if (model.products?.isEmpty ?? true) {
+        return Consumer<ProductModel>(builder: (context, model, child) {
+          if (model.recentSearch?.isEmpty ?? true) {
             return const SizedBox();
           }
 
@@ -44,11 +44,11 @@ class RecentProductsCustom extends StatelessWidget {
                 height: screenWidth * 0.35 + 120,
                 child: ListView.builder(
                   scrollDirection: Axis.horizontal,
-                  itemCount: model.products!.length,
+                  itemCount: model.recentSearch!.length,
                   padding: const EdgeInsets.symmetric(horizontal: 10),
                   itemBuilder: (_, index) => FittedBox(
                     child: Services().widget.renderProductCardView(
-                          item: model.products![index],
+                          item: model.recentSearch![index],
                           width: screenWidth * 0.35,
                           config: ProductConfig.empty(),
                         ),
diff --git a/lib/screens/search/widgets/search_box.dart b/lib/screens/search/widgets/search_box.dart
index 4869989..b78042c 100644
--- a/lib/screens/search/widgets/search_box.dart
+++ b/lib/screens/search/widgets/search_box.dart
@@ -2,14 +2,18 @@ import 'dart:async';
 
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
 
 import '../../../generated/l10n.dart';
+import '../../../models/user_model.dart';
+import '../../../widgets/scanner/scanner_button.dart';
 
 class SearchBox extends StatefulWidget {
   final double? width;
   final bool showCancelButton;
   final bool showSearchIcon;
   final bool autoFocus;
+  final bool showQRCode;
   final String? initText;
   final FocusNode? focusNode;
   final TextEditingController? controller;
@@ -29,6 +33,7 @@ class SearchBox extends StatefulWidget {
     this.autoFocus = false,
     this.showSearchIcon = true,
     this.showCancelButton = true,
+    this.showQRCode = true,
   }) : super(key: key);
 
   @override
@@ -80,69 +85,94 @@ class _SearchBoxState extends State<SearchBox> {
 
   @override
   Widget build(BuildContext context) {
+    var canPop = Navigator.of(context).canPop();
+
     return SizedBox(
       width: widget.width,
-      child: Row(children: [
-        Expanded(
-          child: Container(
-            height: 40,
-            decoration: BoxDecoration(
-              color: Theme.of(context).primaryColorLight,
-              borderRadius: BorderRadius.circular(6),
+      child: Row(
+        children: [
+          if (canPop)
+            IconButton(
+              onPressed: () {
+                var currentFocus = FocusScope.of(context);
+                if (!currentFocus.hasPrimaryFocus) {
+                  currentFocus.unfocus();
+                }
+                Navigator.of(context).pop();
+              },
+              icon: const Icon(CupertinoIcons.back),
             ),
-            padding: const EdgeInsets.symmetric(horizontal: 10),
-            margin: const EdgeInsets.only(left: 15, right: 15, bottom: 5),
-            child: Row(
-              crossAxisAlignment: CrossAxisAlignment.center,
-              children: <Widget>[
-                if (widget.showSearchIcon)
-                  Icon(
-                    CupertinoIcons.search,
-                    size: 22,
-                    color: Theme.of(context).colorScheme.secondary,
-                  ),
-                const SizedBox(width: 10),
-                Expanded(
-                  child: TextField(
-                    autocorrect: false,
-                    decoration: InputDecoration(
-                      fillColor: Theme.of(context).colorScheme.secondary,
-                      hintText: S.of(context).searchForItems,
-                      enabledBorder: InputBorder.none,
-                      border: InputBorder.none,
+          Expanded(
+            child: Container(
+              height: 40,
+              decoration: BoxDecoration(
+                color: Theme.of(context).primaryColorLight,
+                borderRadius: BorderRadius.circular(6),
+              ),
+              padding: const EdgeInsets.symmetric(horizontal: 10),
+              margin: EdgeInsets.only(
+                left: canPop ? 5 : 10,
+                right: widget.showQRCode ? 5 : 10,
+                bottom: 5,
+              ),
+              child: Row(
+                crossAxisAlignment: CrossAxisAlignment.center,
+                children: <Widget>[
+                  if (widget.showSearchIcon)
+                    Icon(
+                      CupertinoIcons.search,
+                      size: 22,
+                      color: Theme.of(context).colorScheme.secondary,
+                    ),
+                  const SizedBox(width: 10),
+                  Expanded(
+                    child: TextField(
+                      autocorrect: false,
+                      decoration: InputDecoration(
+                        fillColor: Theme.of(context).colorScheme.secondary,
+                        hintText: S.of(context).searchForItems,
+                        enabledBorder: InputBorder.none,
+                        border: InputBorder.none,
+                      ),
+                      controller: _textController,
+                      autofocus: widget.autoFocus,
+                      focusNode: widget.focusNode,
+                      onSubmitted: (value) => widget.onSubmitted?.call(value),
                     ),
-                    controller: _textController,
-                    autofocus: widget.autoFocus,
-                    focusNode: widget.focusNode,
-                    onSubmitted: (value) => widget.onSubmitted?.call(value),
                   ),
-                ),
-                if (widget.showCancelButton)
-                  AnimatedContainer(
-                    width: widthButtonCancel,
-                    duration: const Duration(milliseconds: 250),
-                    child: GestureDetector(
-                      onTap: () {
-                        widget.onCancel?.call();
-                        _textController!.clear();
-                        var currentFocus = FocusScope.of(context);
-                        if (!currentFocus.hasPrimaryFocus) {
-                          currentFocus.unfocus();
-                        }
-                      },
-                      child: Center(
-                        child: Text(
-                          S.of(context).cancel,
-                          overflow: TextOverflow.ellipsis,
+                  if (widget.showCancelButton)
+                    AnimatedContainer(
+                      width: widthButtonCancel,
+                      duration: const Duration(milliseconds: 250),
+                      child: GestureDetector(
+                        onTap: () {
+                          widget.onCancel?.call();
+                          _textController!.clear();
+                          var currentFocus = FocusScope.of(context);
+                          if (!currentFocus.hasPrimaryFocus) {
+                            currentFocus.unfocus();
+                          }
+                        },
+                        child: Center(
+                          child: Text(
+                            S.of(context).cancel,
+                            overflow: TextOverflow.ellipsis,
+                          ),
                         ),
                       ),
-                    ),
-                  )
-              ],
+                    )
+                ],
+              ),
             ),
           ),
-        ),
-      ]),
+          if (widget.showQRCode)
+            Consumer<UserModel>(
+              builder: (_, model, __) => ScannerButton(
+                user: model.user,
+              ),
+            ),
+        ],
+      ),
     );
   }
 }
diff --git a/lib/screens/settings/language_screen.dart b/lib/screens/settings/language_screen.dart
index a53b39d..eaff894 100644
--- a/lib/screens/settings/language_screen.dart
+++ b/lib/screens/settings/language_screen.dart
@@ -6,6 +6,7 @@ import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../models/app_model.dart';
 import '../../services/service_config.dart';
+import '../../widgets/common/index.dart' show FluxImage;
 import '../common/app_bar_mixin.dart';
 
 class LanguageScreen extends StatefulWidget {
@@ -14,8 +15,7 @@ class LanguageScreen extends StatefulWidget {
 }
 
 class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
-  final GlobalKey<ScaffoldMessengerState> _scaffoldMessengerKey =
-      GlobalKey<ScaffoldMessengerState>();
+  final _scaffoldMessengerKey = GlobalKey<ScaffoldMessengerState>();
 
   void _showLoading(String language) {
     final snackBar = SnackBar(
@@ -40,6 +40,8 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
   Widget build(BuildContext context) {
     var list = <Widget>[];
     var languages = getLanguages(this.context);
+    final currentLanguage =
+        Provider.of<AppModel>(context, listen: false).langCode;
 
     for (var i = 0; i < languages.length; i++) {
       if (Config().isVendorManagerType()) {
@@ -50,8 +52,8 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
       }
       list.add(
         ListTile(
-          leading: Image.asset(
-            languages[i]['icon'],
+          leading: FluxImage(
+            imageUrl: languages[i]['icon'],
             width: 30,
             height: 20,
             fit: BoxFit.cover,
@@ -65,6 +67,12 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
               _showLoading(languages[i]['text']);
             });
           },
+          trailing: currentLanguage != languages[i]['code']
+              ? null
+              : Icon(
+                  Icons.check,
+                  color: Theme.of(context).primaryColor,
+                ),
         ),
       );
       if (i < languages.length - 1) {
@@ -73,7 +81,7 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
             color: Theme.of(context).primaryColorLight,
             height: 1.0,
             indent: 75,
-            //endIndent: 20,
+            endIndent: 30,
           ),
         );
       }
@@ -105,7 +113,7 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
             child: Column(
               children: [
                 ...list,
-                const SizedBox(height: 100),
+                SizedBox(height: MediaQuery.of(context).padding.bottom + 32),
               ],
             ),
           ),
diff --git a/lib/screens/settings/rate_myapp_mixin.dart b/lib/screens/settings/rate_myapp_mixin.dart
new file mode 100644
index 0000000..6e3e129
--- /dev/null
+++ b/lib/screens/settings/rate_myapp_mixin.dart
@@ -0,0 +1,68 @@
+import 'package:flutter/material.dart';
+import 'package:rate_my_app/rate_my_app.dart';
+
+import '../../common/config.dart';
+import '../../common/constants.dart';
+import '../../generated/l10n.dart';
+
+mixin RateMyAppMixin<T extends StatefulWidget> on State<T> {
+  final _rateMyApp = RateMyApp(
+    // rate app on store
+    minDays: 7,
+    minLaunches: 10,
+    remindDays: 7,
+    remindLaunches: 10,
+    googlePlayIdentifier: kStoreIdentifier['android'],
+    appStoreIdentifier: kStoreIdentifier['ios'],
+  );
+
+  void showRateMyApp() {
+    _rateMyApp.showRateDialog(
+      context,
+      title: S.of(context).rateTheApp,
+      // The dialog title.
+      message: S.of(context).rateThisAppDescription,
+      // The dialog message.
+      rateButton: S.of(context).rate.toUpperCase(),
+      // The dialog 'rate' button text.
+      noButton: S.of(context).noThanks.toUpperCase(),
+      // The dialog 'no' button text.
+      laterButton: S.of(context).maybeLater.toUpperCase(),
+      // The dialog 'later' button text.
+      listener: (button) {
+        // The button click listener (useful if you want to cancel the click event).
+        switch (button) {
+          case RateMyAppDialogButton.rate:
+            break;
+          case RateMyAppDialogButton.later:
+            break;
+          case RateMyAppDialogButton.no:
+            break;
+        }
+
+        return true; // Return false if you want to cancel the click event.
+      },
+      // Set to false if you want to show the native Apple app rating dialog on iOS.
+      dialogStyle: const DialogStyle(),
+      // Custom dialog styles.
+      // Called when the user dismissed the dialog (either by taping outside or by pressing the 'back' button).
+      // actionsBuilder: (_) => [], // This one allows you to use your own buttons.
+    );
+  }
+
+  @override
+  void initState() {
+    super.initState();
+
+    WidgetsBinding.instance.addPostFrameCallback((_) async {
+      await _rateMyApp.init();
+
+      if (isMobile && !kStoreIdentifier['disable']) {
+        // state of rating the app
+        if (_rateMyApp.shouldOpenDialog) {
+          showRateMyApp();
+        }
+      }
+    });
+  }
+}
diff --git a/lib/screens/settings/settings_screen.dart b/lib/screens/settings/settings_screen.dart
index 761a330..c2a4262 100644
--- a/lib/screens/settings/settings_screen.dart
+++ b/lib/screens/settings/settings_screen.dart
@@ -8,7 +8,6 @@ import 'package:flutter/material.dart';
 import 'package:inspireui/icons/icon_picker.dart';
 import 'package:localstorage/localstorage.dart';
 import 'package:provider/provider.dart';
-import 'package:rate_my_app/rate_my_app.dart';
 
 import '../../app.dart';
 import '../../common/config.dart';
@@ -24,8 +23,10 @@ import '../../services/index.dart';
 import '../../widgets/common/index.dart';
 import '../../widgets/general/index.dart';
 import '../common/app_bar_mixin.dart';
+import '../common/delete_account_mixin.dart';
 import '../index.dart';
 import '../users/user_point_screen.dart';
+import 'rate_myapp_mixin.dart';
 
 const itemPadding = 15.0;
 
@@ -54,6 +55,8 @@ class SettingScreenState extends State<SettingScreen>
     with
         TickerProviderStateMixin,
         AutomaticKeepAliveClientMixin<SettingScreen>,
+        DeleteAccountMixin,
+        RateMyAppMixin,
         AppBarMixin {
   @override
   bool get wantKeepAlive => true;
@@ -62,49 +65,6 @@ class SettingScreenState extends State<SettingScreen>
   bool isAbleToPostManagement = false;
 
   final bannerHigh = 150.0;
-  final RateMyApp _rateMyApp = RateMyApp(
-    // rate app on store
-    minDays: 7,
-    minLaunches: 10,
-    remindDays: 7,
-    remindLaunches: 10,
-    googlePlayIdentifier: kStoreIdentifier['android'],
-    appStoreIdentifier: kStoreIdentifier['ios'],
-  );
-
-  void showRateMyApp() {
-    _rateMyApp.showRateDialog(
-      context,
-      title: S.of(context).rateTheApp,
-      // The dialog title.
-      message: S.of(context).rateThisAppDescription,
-      // The dialog message.
-      rateButton: S.of(context).rate.toUpperCase(),
-      // The dialog 'rate' button text.
-      noButton: S.of(context).noThanks.toUpperCase(),
-      // The dialog 'no' button text.
-      laterButton: S.of(context).maybeLater.toUpperCase(),
-      // The dialog 'later' button text.
-      listener: (button) {
-        // The button click listener (useful if you want to cancel the click event).
-        switch (button) {
-          case RateMyAppDialogButton.rate:
-            break;
-          case RateMyAppDialogButton.later:
-            break;
-          case RateMyAppDialogButton.no:
-            break;
-        }
-
-        return true; // Return false if you want to cancel the click event.
-      },
-      // Set to false if you want to show the native Apple app rating dialog on iOS.
-      dialogStyle: const DialogStyle(),
-      // Custom dialog styles.
-      // Called when the user dismissed the dialog (either by taping outside or by pressing the 'back' button).
-      // actionsBuilder: (_) => [], // This one allows you to use your own buttons.
-    );
-  }
 
   void checkAddPostRole() {
     for (var legitRole in addPostAccessibleRoles) {
@@ -119,16 +79,6 @@ class SettingScreenState extends State<SettingScreen>
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.addPostFrameCallback((_) async {
-      await _rateMyApp.init();
-
-      if (isMobile && !kStoreIdentifier['disable']) {
-        // state of rating the app
-        if (_rateMyApp.shouldOpenDialog) {
-          showRateMyApp();
-        }
-      }
-    });
   }
 
   /// Render the Delivery Menu.
@@ -229,8 +179,10 @@ class SettingScreenState extends State<SettingScreen>
           FluxNavigate.push(
             MaterialPageRoute(
               builder: (context) => Services().widget.renderVacationVendor(
-                  user!.id!, user!.cookie!,
-                  isFromMV: true),
+                    user!.id!,
+                    user!.cookie!,
+                    isFromMV: true,
+                  ),
             ),
           );
         },
@@ -361,17 +313,19 @@ class SettingScreenState extends State<SettingScreen>
           trailing = Row(
             mainAxisSize: MainAxisSize.min,
             children: [
-              Consumer<ProductWishListModel>(builder: (context, model, child) {
-                if (model.products.isNotEmpty) {
-                  return Text(
-                    '${model.products.length} ${S.of(context).items}',
-                    style: TextStyle(
-                        fontSize: 14, color: Theme.of(context).primaryColor),
-                  );
-                } else {
-                  return const SizedBox();
-                }
-              }),
+              Consumer<ProductWishListModel>(
+                builder: (context, model, child) {
+                  if (model.products.isNotEmpty) {
+                    return Text(
+                      '${model.products.length} ${S.of(context).items}',
+                      style: TextStyle(
+                          fontSize: 14, color: Theme.of(context).primaryColor),
+                    );
+                  } else {
+                    return const SizedBox();
+                  }
+                },
+              ),
               const SizedBox(width: 5),
               const Icon(Icons.arrow_forward_ios, size: 18, color: kGrey600)
             ],
@@ -669,8 +623,6 @@ class SettingScreenState extends State<SettingScreen>
   }
 
   Widget renderUser() {
-    const textStyle = TextStyle(fontSize: 16);
-
     return ListenableProvider.value(
       value: Provider.of<UserModel>(context),
       child: Consumer<UserModel>(
@@ -688,7 +640,7 @@ class SettingScreenState extends State<SettingScreen>
                     : const Icon(Icons.face),
                 title: Text(
                   user.name ?? '',
-                  style: textStyle,
+                  style: const TextStyle(fontSize: 16),
                 ),
               ),
             if (user != null && user.email != null && user.email!.isNotEmpty)
@@ -928,7 +880,15 @@ class SettingScreenState extends State<SettingScreen>
                         S.current.deleteAccount,
                         style: const TextStyle(color: kColorRed),
                       ),
-                      onTap: _showConfirmDeleteAccountDialog,
+                      onTap: () async {
+                        final acceptDelete =
+                            await showConfirmDeleteAccountDialog(
+                          App.fluxStoreNavigatorKey.currentContext ?? context,
+                        );
+                        if (acceptDelete) {
+                          _processDeleteAccount();
+                        }
+                      },
                     ),
                   ),
                 const SizedBox(height: 100),
@@ -940,6 +900,21 @@ class SettingScreenState extends State<SettingScreen>
     );
   }
 
+  void _processDeleteAccount() async {
+    final result = await FluxNavigate.pushNamed(
+      RouteList.deleteAccount,
+      arguments: DeleteAccountArguments(
+        confirmCaptcha: kAdvanceConfig.gdprConfig.confirmCaptcha,
+        userToken:
+            Provider.of<UserModel>(context, listen: false).user?.cookie ?? '',
+      ),
+    ) as bool?;
+    if (result ?? false) {
+      _deleteUserOnFirebase();
+      _onLogout();
+    }
+  }
+
   void _onLogout() {
     Provider.of<CartModel>(context, listen: false).clearAddress();
     Provider.of<UserModel>(context, listen: false).logout();
@@ -973,46 +948,6 @@ class SettingScreenState extends State<SettingScreen>
       ),
     );
   }
-
-  Future<void> _showConfirmDeleteAccountDialog() async {
-    await showCupertinoDialog(
-      context: context,
-      builder: (ctx) => CupertinoAlertDialog(
-        title: Text(S.current.deleteAccount),
-        content: Text(S.current.areYouSureDeleteAccount),
-        actions: [
-          CupertinoDialogAction(
-            isDefaultAction: true,
-            isDestructiveAction: true,
-            onPressed: () {
-              Navigator.of(ctx).pop();
-              _processDeleteAccount();
-            },
-            child: Text(S.current.ok),
-          ),
-          CupertinoDialogAction(
-            isDefaultAction: false,
-            isDestructiveAction: false,
-            onPressed: Navigator.of(ctx).pop,
-            child: Text(S.current.cancel),
-          )
-        ],
-      ),
-    );
-  }
-
-  void _processDeleteAccount() async {
-    final result = await FluxNavigate.pushNamed(
-      RouteList.deleteAccount,
-      arguments: DeleteAccountArguments(
-        confirmCaptcha: kAdvanceConfig.gdprConfig.confirmCaptcha,
-      ),
-    ) as bool?;
-    if (result ?? false) {
-      _deleteUserOnFirebase();
-      _onLogout();
-    }
-  }
 }
 
 class _SettingItem extends StatelessWidget {
diff --git a/lib/screens/users/delete_account_screen.dart b/lib/screens/users/delete_account_screen.dart
index 20e98f2..b5c738e 100644
--- a/lib/screens/users/delete_account_screen.dart
+++ b/lib/screens/users/delete_account_screen.dart
@@ -2,26 +2,30 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:inspireui/inspireui.dart';
-import 'package:provider/provider.dart';
 
 import '../../generated/l10n.dart';
-import '../../models/user_model.dart';
 import '../../services/services.dart';
 import '../../widgets/common/loading_body.dart';
 
 class DeleteAccountArguments {
   final String confirmCaptcha;
+  final String userToken;
 
-  DeleteAccountArguments({required this.confirmCaptcha});
+  DeleteAccountArguments({
+    required this.confirmCaptcha,
+    required this.userToken,
+  });
 }
 
 class DeleteAccountScreen extends StatefulWidget {
   const DeleteAccountScreen({
     Key? key,
     required this.confirmCaptcha,
+    required this.userToken,
   }) : super(key: key);
 
   final String confirmCaptcha;
+  final String userToken;
 
   @override
   State<DeleteAccountScreen> createState() => _DeleteAccountScreenState();
@@ -70,8 +74,7 @@ class _DeleteAccountScreenState extends State<DeleteAccountScreen> {
   Future<void> _onTapDelete() async {
     try {
       _loadingNotifier.value = true;
-      final token = context.read<UserModel>().user?.cookie;
-      final success = await Services().api.deleteAccount(token ?? '');
+      final success = await Services().api.deleteAccount(widget.userToken);
       if (!success) throw S.of(context).somethingWrong;
       _loadingNotifier.value = false;
       await _showDialogDeleteAccountSuccess();
@@ -189,7 +192,12 @@ class _DeleteAccountScreenState extends State<DeleteAccountScreen> {
                         builder: (context, enable, child) {
                           return ElevatedButton(
                             onPressed: enable ? _onTapDelete : null,
-                            child: Text(S.current.delete),
+                            child: Text(
+                              S.current.delete.toUpperCase(),
+                              style: const TextStyle(
+                                color: Colors.white,
+                              ),
+                            ),
                           );
                         },
                       ),
diff --git a/lib/screens/users/login_screen.dart b/lib/screens/users/login_screen.dart
index 6643782..f91435b 100644
--- a/lib/screens/users/login_screen.dart
+++ b/lib/screens/users/login_screen.dart
@@ -142,9 +142,9 @@ class _LoginPageState extends BaseScreen<LoginScreen>
     if (message.isEmpty) return;
 
     var messageText = message;
-    if (kReleaseMode) {
-      messageText = S.of(context).UserNameInCorrect;
-    }
+    // if (kReleaseMode) {
+    //   messageText = S.of(context).UserNameInCorrect;
+    // }
 
     final snackBar = SnackBar(
       content: Text(S.of(context).warning(messageText)),
diff --git a/lib/services/base_services.dart b/lib/services/base_services.dart
index 273ef2c..1a708f1 100644
--- a/lib/services/base_services.dart
+++ b/lib/services/base_services.dart
@@ -756,4 +756,12 @@ abstract class BaseServices {
   Future<bool> deleteAccount(String token) async {
     return false;
   }
+
+  Future<Brand?> getBrandById(brandId) async {
+    return null;
+  }
+
+  Future<Brand?> getBrandBySlug(String slug) async {
+    return null;
+  }
 }
diff --git a/lib/services/paging/paging_with_user_repository.dart b/lib/services/paging/paging_with_user_repository.dart
index b2dde58..e7889bf 100644
--- a/lib/services/paging/paging_with_user_repository.dart
+++ b/lib/services/paging/paging_with_user_repository.dart
@@ -21,10 +21,11 @@ abstract class PagingWithUserRepository<T> extends BasePageRepository<T?> {
     final response = await requestApi(
       cursor: cursor,
       user: user,
-    )!;
+    );
 
-    // ignore: unnecessary_null_comparison
-    if (response == null) return <T>[];
+    if (response == null) {
+      return <T>[];
+    }
 
     final data = response.data;
 
diff --git a/lib/services/service_config.dart b/lib/services/service_config.dart
index a8729c3..e9c180b 100644
--- a/lib/services/service_config.dart
+++ b/lib/services/service_config.dart
@@ -104,7 +104,7 @@ class Config {
       (element) => element.name == config['type'],
       orElse: () => ConfigType.woo,
     );
-    url = config['url'];
+    url = config['url']?.toString().trim();
     blog = config['blog'];
     consumerKey = config['consumerKey'];
     consumerSecret = config['consumerSecret'];
diff --git a/lib/widgets/asymmetric/asymmetric_view.dart b/lib/widgets/asymmetric/asymmetric_view.dart
index b2ef6f9..7095150 100644
--- a/lib/widgets/asymmetric/asymmetric_view.dart
+++ b/lib/widgets/asymmetric/asymmetric_view.dart
@@ -34,9 +34,10 @@ class _AsymmetricViewState extends State<AsymmetricView> {
   }
 
   List<Widget> _buildColumns(BuildContext context) {
-    if (widget.products == null || widget.products!.isEmpty) {
-      return const <Container>[];
-    }
+    final hasNoProduct = widget.products == null || widget.products!.isEmpty;
+    final products = hasNoProduct && (widget.isFetching ?? false)
+        ? [Product.empty('1'), Product.empty('2'), Product.empty('3')]
+        : widget.products;
 
     /// This will return a list of columns. It will oscillate between the two
     /// kinds of columns. Even cases of the index (0, 2, 4, etc) will be
@@ -46,7 +47,7 @@ class _AsymmetricViewState extends State<AsymmetricView> {
     /// some kinda awkward math so we use _evenCasesIndex and _oddCasesIndex as
     /// helpers for creating the index of the product list that will correspond
     /// to the index of the list of columns.
-    var listItemCount = _listItemCount(widget.products!.length);
+    var listItemCount = _listItemCount(products!.length);
     var productsList = List.generate(listItemCount, (int index) {
       var minWidth = math.min(widget.width!, 400);
       var width = .59 * minWidth;
@@ -55,15 +56,15 @@ class _AsymmetricViewState extends State<AsymmetricView> {
         /// Even cases
         var bottom = _evenCasesIndex(index);
         column = TwoProductCardColumn(
-            bottom: widget.products![bottom],
-            top: widget.products!.length - 1 >= bottom + 1
-                ? widget.products![bottom + 1]
+            bottom: products[bottom],
+            top: products.length - 1 >= bottom + 1
+                ? products[bottom + 1]
                 : null);
         width += 32.0;
       } else {
         /// Odd cases
         column = OneProductCardColumn(
-          product: widget.products![_oddCasesIndex(index)],
+          product: products[_oddCasesIndex(index)],
         );
       }
 
diff --git a/lib/widgets/backdrop/backdrop.dart b/lib/widgets/backdrop/backdrop.dart
index 22df745..6b0a29e 100644
--- a/lib/widgets/backdrop/backdrop.dart
+++ b/lib/widgets/backdrop/backdrop.dart
@@ -13,15 +13,11 @@
 // limitations under the License.
 
 import 'package:flutter/material.dart';
-import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
-import '../../models/index.dart';
 import '../../modules/dynamic_layout/helper/helper.dart';
-import '../../modules/firebase/dynamic_link_service.dart';
 import '../../services/service_config.dart';
-import '../../services/services.dart';
 import 'backdrop_constants.dart';
 
 const Cubic _kAccelerateCurve = Cubic(0.548, 0.0, 0.757, 0.464);
@@ -150,6 +146,7 @@ class Backdrop extends StatefulWidget {
   final AnimationController controller;
   final bool showFilter;
   final bool isBlog;
+  final VoidCallback? onTapShareButton;
 
   /// This color is pick from the Horizontal Config on Home Screen
   /// use to override the Backdrop color
@@ -165,6 +162,7 @@ class Backdrop extends StatefulWidget {
     this.showFilter = true,
     this.isBlog = false,
     this.bgColor,
+    this.onTapShareButton,
   });
 
   @override
@@ -415,21 +413,13 @@ class _BackdropState extends State<Backdrop>
             !Config().isListingType &&
             !widget.isBlog)
           IconButton(
-              icon: Icon(
-                Icons.share,
-                size: 18.0,
-                color: labelColor,
-              ),
-              onPressed: () async {
-                var currentCateId =
-                    Provider.of<ProductModel>(context, listen: false)
-                        .categoryId;
-                var cateUrl = await DynamicLinkService()
-                    .generateProductCategoryUrl(currentCateId);
-                Services().firebase.shareDynamicLinkProduct(
-                      itemUrl: cateUrl,
-                    );
-              }),
+            icon: Icon(
+              Icons.share,
+              size: 18.0,
+              color: labelColor,
+            ),
+            onPressed: () => widget.onTapShareButton?.call(),
+          ),
         if (widget.showFilter)
           IconButton(
               icon: AnimatedIcon(
diff --git a/lib/widgets/backdrop/backdrop_menu.dart b/lib/widgets/backdrop/backdrop_menu.dart
index 0919008..014a27d 100644
--- a/lib/widgets/backdrop/backdrop_menu.dart
+++ b/lib/widgets/backdrop/backdrop_menu.dart
@@ -40,6 +40,7 @@ class BackdropMenu extends StatefulWidget {
   final double? maxPrice;
   final FilterSortBy? sortBy;
   final bool showSort;
+  final bool showLayout;
 
   const BackdropMenu({
     Key? key,
@@ -56,6 +57,7 @@ class BackdropMenu extends StatefulWidget {
     this.maxPrice,
     this.sortBy,
     this.showSort = true,
+    this.showLayout = true,
   }) : super(key: key);
 
   @override
@@ -161,7 +163,9 @@ class _BackdropMenuState extends State<BackdropMenu> {
                         child: Image.asset(
                           item['image']!,
                           color: selectLayout == item['layout']
-                              ? (widget.isBlog ? Colors.white : Theme.of(context).primaryColor)
+                              ? (widget.isBlog
+                                  ? Colors.white
+                                  : Theme.of(context).primaryColor)
                               : Theme.of(context)
                                   .colorScheme
                                   .secondary
@@ -373,6 +377,8 @@ class _BackdropMenuState extends State<BackdropMenu> {
     return Services().widget.renderFilterSortBy(
       context,
       filterSortBy: _currentSortBy,
+      showDivider: widget.showLayout,
+      isBlog: widget.isBlog,
       onFilterChanged: (filterSortBy) {
         setState(() {
           _currentSortBy = filterSortBy;
@@ -422,7 +428,7 @@ class _BackdropMenuState extends State<BackdropMenu> {
               ),
             ),
 
-          ...renderLayout(),
+          if (widget.showLayout) ...renderLayout(),
 
           if ((!Config().isListingType) ^ (Config().type == ConfigType.shopify))
             renderFilterSortBy(),
diff --git a/lib/widgets/blog/blog_list_backdrop.dart b/lib/widgets/blog/blog_list_backdrop.dart
index 1d69d90..96d9c4c 100644
--- a/lib/widgets/blog/blog_list_backdrop.dart
+++ b/lib/widgets/blog/blog_list_backdrop.dart
@@ -136,20 +136,20 @@ class _BlogListBackdropState extends State<BlogListBackdrop> {
     Widget typeList = const SizedBox();
 
     switch (widget.layout) {
-      case 'listTile':
+      case Layout.listTile:
         typeList = buildListView(
           blogs: blogsList,
           widthContent: widthContent,
         );
         break;
-      case 'pinterest':
+      case Layout.pinterest:
         typeList = buildStaggeredGridView(
           blogs: blogsList,
           widthContent: widthScreen,
         );
         break;
-      case 'card':
-      case 'columns':
+      case Layout.card:
+      case Layout.columns:
       default:
         typeList = buildGridView(
           childAspectRatio: childAspectRatio,
diff --git a/lib/widgets/common/common_setting_item.dart b/lib/widgets/common/common_setting_item.dart
index 838c999..f0b9e4d 100644
--- a/lib/widgets/common/common_setting_item.dart
+++ b/lib/widgets/common/common_setting_item.dart
@@ -1,21 +1,26 @@
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 
+import '../../common/theme/colors.dart';
+
 class CommonSettingItem extends StatelessWidget {
   final IconData leadingIcon;
   final String title;
   final IconData? actionIcon;
   final bool? isSwitchedOn;
   final Function onTap;
+  final bool isSensitive;
+
+  const CommonSettingItem({
+    Key? key,
+    required this.leadingIcon,
+    required this.title,
+    this.actionIcon,
+    this.isSwitchedOn,
+    required this.onTap,
+    this.isSensitive = false,
+  }) : super(key: key);
 
-  const CommonSettingItem(
-      {Key? key,
-      required this.leadingIcon,
-      required this.title,
-      this.actionIcon,
-      this.isSwitchedOn,
-      required this.onTap})
-      : super(key: key);
   @override
   Widget build(BuildContext context) {
     final size = MediaQuery.of(context).size;
@@ -34,12 +39,17 @@ class CommonSettingItem extends StatelessWidget {
             Icon(
               leadingIcon,
               size: 20,
-              color: Theme.of(context).colorScheme.secondary.withOpacity(0.5),
+              color: isSensitive
+                  ? kColorRed
+                  : Theme.of(context).colorScheme.secondary.withOpacity(0.5),
             ),
             const SizedBox(width: 20),
             Text(
               title,
-              style: Theme.of(context).primaryTextTheme.subtitle1,
+              style: Theme.of(context)
+                  .primaryTextTheme
+                  .subtitle1
+                  ?.copyWith(color: isSensitive ? kColorRed : null),
             ),
             const Expanded(
                 child: SizedBox(
@@ -50,12 +60,12 @@ class CommonSettingItem extends StatelessWidget {
               Icon(
                 actionIcon,
                 size: 15,
-                color: Theme.of(context).colorScheme.secondary.withOpacity(0.5),
+                color: isSensitive
+                    ? kColorRed
+                    : Theme.of(context).colorScheme.secondary.withOpacity(0.5),
               ),
             if (actionIcon == null && isSwitchedOn != null) ...[
-              const SizedBox(
-                width: 10.0,
-              ),
+              const SizedBox(width: 10.0),
               CupertinoSwitch(
                 value: isSwitchedOn!,
                 onChanged: (val) => onTap(),
diff --git a/lib/widgets/common/drag_handler.dart b/lib/widgets/common/drag_handler.dart
new file mode 100644
index 0000000..37215b0
--- /dev/null
+++ b/lib/widgets/common/drag_handler.dart
@@ -0,0 +1,30 @@
+import 'package:flutter/material.dart';
+
+/// Use to place
+class DragHandler extends StatelessWidget {
+  const DragHandler({Key? key}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    return Positioned(
+      top: 0,
+      left: 0,
+      right: 0,
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          Container(
+            margin: const EdgeInsets.symmetric(vertical: 8.0),
+            alignment: Alignment.center,
+            width: 40.0,
+            height: 4.0,
+            decoration: BoxDecoration(
+              color: Theme.of(context).colorScheme.secondary,
+              borderRadius: BorderRadius.circular(16.0),
+            ),
+          )
+        ],
+      ),
+    );
+  }
+}
diff --git a/lib/widgets/product/product_list.dart b/lib/widgets/product/product_list.dart
index efdd1c6..a6e1ee1 100644
--- a/lib/widgets/product/product_list.dart
+++ b/lib/widgets/product/product_list.dart
@@ -13,6 +13,7 @@ import '../../modules/dynamic_layout/vertical/pinterest_card.dart';
 import '../../services/index.dart';
 import '../backdrop/backdrop_constants.dart';
 import '../common/no_internet_connection.dart';
+import 'product_simple_view.dart';
 
 class ProductList extends StatefulWidget {
   final List<Product>? products;
@@ -158,8 +159,9 @@ class _ProductListState extends State<ProductList> {
 
     Widget typeList = const SizedBox();
 
-    if (widget.layout != 'pinterest') {
-      if (widget.layout == 'listTile') {
+    if (widget.layout != Layout.pinterest) {
+      if (widget.layout == Layout.listTile ||
+          widget.layout == Layout.simpleList) {
         typeList = buildListView(products: productsList);
       } else {
         typeList = buildGridViewProduct(
@@ -262,14 +264,21 @@ class _ProductListState extends State<ProductList> {
     required List<Product>? products,
   }) {
     return ListView.builder(
-      shrinkWrap: true,
-      physics: const NeverScrollableScrollPhysics(),
-      itemCount: products!.length,
-      itemBuilder: (_, index) => Services().widget.renderProductItemTileView(
-            item: products[index],
-            padding: const EdgeInsets.only(),
-            config: ProductConfig.empty(),
-          ),
-    );
+        shrinkWrap: true,
+        physics: const NeverScrollableScrollPhysics(),
+        itemCount: products!.length,
+        itemBuilder: (_, index) {
+          if (widget.layout == Layout.simpleList) {
+            return ProductSimpleView(
+              item: products[index],
+              isFromSearchScreen: true,
+            );
+          }
+          return Services().widget.renderProductItemTileView(
+                item: products[index],
+                padding: const EdgeInsets.only(),
+                config: ProductConfig.empty(),
+              );
+        });
   }
 }
diff --git a/lib/widgets/scanner/scanner_button.dart b/lib/widgets/scanner/scanner_button.dart
index e273623..04b63a0 100644
--- a/lib/widgets/scanner/scanner_button.dart
+++ b/lib/widgets/scanner/scanner_button.dart
@@ -1,3 +1,4 @@
+import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 
 import '../../common/constants.dart';
@@ -33,7 +34,7 @@ class ScannerButton extends StatelessWidget {
             );
           }
         },
-        icon: Icon(customIcon ?? Icons.qr_code));
+        icon: Icon(customIcon ?? CupertinoIcons.barcode_viewfinder));
   }
 }
 
diff --git a/pubspec.lock b/pubspec.lock
index 6cafe6e..bbbe8be 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -43,6 +43,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.1.7"
+  back_button_interceptor:
+    dependency: transitive
+    description:
+      name: back_button_interceptor
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "6.0.0"
   cached_network_image:
     dependency: "direct main"
     description:
@@ -78,6 +85,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.2.0"
+  charcode:
+    dependency: transitive
+    description:
+      name: charcode
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.3.1"
   charts_common:
     dependency: transitive
     description:
@@ -121,7 +135,7 @@ packages:
       name: cloud_firestore_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "5.5.7"
+    version: "5.5.8"
   cloud_firestore_web:
     dependency: transitive
     description:
@@ -157,6 +171,20 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.0.0"
+  credit_card_type_detector:
+    dependency: transitive
+    description:
+      name: credit_card_type_detector
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
+  credit_card_validator:
+    dependency: transitive
+    description:
+      name: credit_card_validator
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.1"
   cross_file:
     dependency: transitive
     description:
@@ -192,6 +220,20 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "0.7.4"
+  device_info:
+    dependency: transitive
+    description:
+      name: device_info
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.3"
+  device_info_platform_interface:
+    dependency: transitive
+    description:
+      name: device_info_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.1"
   devicelocale:
     dependency: "direct main"
     description:
@@ -296,7 +338,7 @@ packages:
       name: firebase_analytics_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.1.7"
+    version: "3.1.8"
   firebase_analytics_web:
     dependency: transitive
     description:
@@ -317,7 +359,7 @@ packages:
       name: firebase_auth_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "6.2.7"
+    version: "6.2.8"
   firebase_auth_web:
     dependency: transitive
     description:
@@ -359,7 +401,7 @@ packages:
       name: firebase_dynamic_links_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.3+3"
+    version: "0.2.3+4"
   firebase_messaging:
     dependency: "direct main"
     description:
@@ -394,7 +436,7 @@ packages:
       name: firebase_remote_config_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.1.7"
+    version: "1.1.8"
   firebase_remote_config_web:
     dependency: transitive
     description:
@@ -542,6 +584,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "4.0.1"
+  flutter_slidable:
+    dependency: transitive
+    description:
+      name: flutter_slidable
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.6.0"
   flutter_spinkit:
     dependency: "direct main"
     description:
@@ -556,6 +605,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "0.6.1"
+  flutter_stripe:
+    dependency: "direct main"
+    description:
+      name: flutter_stripe
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.0"
   flutter_svg:
     dependency: "direct main"
     description:
@@ -598,6 +654,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "8.0.9"
+  freezed_annotation:
+    dependency: transitive
+    description:
+      name: freezed_annotation
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.3"
   fwfh_cached_network_image:
     dependency: "direct main"
     description:
@@ -992,6 +1055,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.0.1"
+  mask_text_input_formatter:
+    dependency: transitive
+    description:
+      name: mask_text_input_formatter
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.3.0"
   matcher:
     dependency: transitive
     description:
@@ -1027,6 +1097,15 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.0.1"
+  myfatoorah_flutter:
+    dependency: "direct main"
+    description:
+      path: "."
+      ref: "9e6b4c1af37751a80d70ca896ef02b7b0ce19b04"
+      resolved-ref: "9e6b4c1af37751a80d70ca896ef02b7b0ce19b04"
+      url: "https://github.com/inspireui/myfatoorah_flutter.git"
+    source: git
+    version: "2.1.12"
   nested:
     dependency: transitive
     description:
@@ -1388,6 +1467,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "2.1.1"
+  simple_animations:
+    dependency: transitive
+    description:
+      name: simple_animations
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.1"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -1456,6 +1542,50 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.1.1"
+  stripe_android:
+    dependency: "direct main"
+    description:
+      name: stripe_android
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.0"
+  stripe_ios:
+    dependency: "direct main"
+    description:
+      name: stripe_ios
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.0"
+  stripe_platform_interface:
+    dependency: "direct main"
+    description:
+      name: stripe_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.0"
+  stripe_sdk:
+    dependency: "direct main"
+    description:
+      path: "."
+      ref: "73acb5aea148b1c442f739037557e1cdf9339ba0"
+      resolved-ref: "73acb5aea148b1c442f739037557e1cdf9339ba0"
+      url: "https://github.com/inspireui/stripe-sdk"
+    source: git
+    version: "5.0.0-nullsafety.1"
+  supercharged:
+    dependency: transitive
+    description:
+      name: supercharged
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
+  supercharged_dart:
+    dependency: transitive
+    description:
+      name: supercharged_dart
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
   synchronized:
     dependency: transitive
     description:
@@ -1512,6 +1642,13 @@ packages:
       url: "https://pub.dartlang.org"
     source: hosted
     version: "1.3.1"
+  universal_html:
+    dependency: transitive
+    description:
+      name: universal_html
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.8"
   universal_io:
     dependency: transitive
     description:
diff --git a/pubspec.yaml b/pubspec.yaml
index d4c318f..ace1022 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -12,7 +12,7 @@ description: Mobile commerce app by Flutter
 # In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
 # Read more about iOS versioning at
 # https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
-version: 3.0.2+3022
+version: 3.0.3+3022
 
 environment:
   sdk: ">=2.16.0 <=3.0.0"
@@ -129,8 +129,8 @@ dependencies:
   pin_code_fields: 7.4.0
   country_code_picker: 2.0.2
   country_pickers: 2.0.0
-  intro_slider: 3.0.7
   dropdown_search: 5.0.2
+  intro_slider: 3.0.7
   flutter_zoom_drawer: 3.0.2
   extended_image: 6.2.1
   dotted_decoration: 2.0.0
-- 
2.37.0

